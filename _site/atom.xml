<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Cloga的互联网笔记</title>
 <link href="http://cloga.github.io/" rel="self"/>
 <link href="http://cloga.github.io"/>
 <updated>2014-12-31T17:33:37+08:00</updated>
 <id>http://cloga.github.io</id>
 <author>
   <name>Cloga Chen</name>
   <email>cloga0216@gmail.com</email>
 </author>

 
 <entry>
   <title>1.3NumPy：创建和操作数值数据</title>
   <link href="http://cloga.github.io/python_scientific_lecture_notes/2014/12/31/NumPy_creating_and_manipulating_numerical_data"/>
   <updated>2014-12-31T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python_scientific_lecture_notes/2014/12/31/NumPy_creating_and_manipulating_numerical_data</id>
   <content type="html">&lt;p&gt;Cloga：这份文档是euroscipy关于Python科学计算资源的一个教程。英文版地址为：&lt;a href=&quot;http://scipy-lectures.github.io/&quot;&gt;http://scipy-lectures.github.io/&lt;/a&gt;，是学习Python科学计算生态体系很好的资料，因此，我会陆续将它翻译为中文，相关Gitbub地址为：&lt;a href=&quot;https://github.com/cloga/scipy-lecture-notes_cn&quot;&gt;https://github.com/cloga/scipy-lecture-notes_cn&lt;/a&gt;，&lt;a href=&quot;http://cloga.info/python_scientific_lecture_notes/2014/12/14/python_scientific_lecture_notes_cn/&quot;&gt;完整的中文目录&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/cloga/scipy-lecture-notes_cn/blob/master/1.3NumPy%EF%BC%9A%E5%88%9B%E5%BB%BA%E5%92%8C%E6%93%8D%E4%BD%9C%E6%95%B0%E5%80%BC%E6%95%B0%E6%8D%AE.ipynb&quot;&gt;本文的IPython版本&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;作者：Emmanuelle Gouillart、Didrik Pinte、Gaël Varoquaux 和 Pauli Virtanen&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;本章给出关于Numpy概述，Numpy是Python中高效数值计算的核心工具。&lt;/p&gt;

&lt;h2&gt;1.3.1 Numpy 数组对象&lt;/h2&gt;

&lt;h3&gt;1.3.1.1 什么是Numpy以及Numpy数组？&lt;/h3&gt;

&lt;h4&gt;1.3.1.1.1 Numpy数组&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Python对象：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;高级数值对象：整数、浮点&lt;/li&gt;
&lt;li&gt;容器：列表（无成本插入和附加），字典（快速查找）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Numpy提供：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;对于多维度数组的Python扩展包&lt;/li&gt;
&lt;li&gt;更贴近硬件（高效）&lt;/li&gt;
&lt;li&gt;为科学计算设计（方便）&lt;/li&gt;
&lt;li&gt;也称为&lt;em&gt;面向数组计算&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;例如，数组包含：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;实验或模拟在离散时间阶段的值&lt;/li&gt;
&lt;li&gt;测量设备记录的信号，比如声波&lt;/li&gt;
&lt;li&gt;图像的像素、灰度或颜色&lt;/li&gt;
&lt;li&gt;用不同X-Y-Z位置测量的3-D数据，例如MRI扫描&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;为什么有用：&lt;/strong&gt;提供了高速数值操作的节省内存的容器。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;10000 loops, best of 3: 93.7 µs per loop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;100000 loops, best of 3: 2.16 µs per loop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.1.1.2 Numpy参考文档&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;线上: http://docs.scipy.org/&lt;/li&gt;
&lt;li&gt;交互帮助:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Docstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ndmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查找东西：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lookfor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;create array&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Search results for &amp;#39;create array&amp;#39;
---------------------------------
numpy.array
    Create an array.
numpy.memmap
    Create a memory-map to an array stored in a *binary* file on disk.
numpy.diagflat
    Create a two-dimensional array with the flattened input as a diagonal.
numpy.fromiter
    Create a new 1-dimensional array from an iterable object.
numpy.partition
    Return a partitioned copy of an array.
numpy.ma.diagflat
    Create a two-dimensional array with the flattened input as a diagonal.
numpy.ctypeslib.as_array
    Create a numpy array from a ctypes array or a ctypes POINTER.
numpy.ma.make_mask
    Create a boolean mask from an array.
numpy.ctypeslib.as_ctypes
    Create and return a ctypes object from a numpy array.  Actually
numpy.ma.mrecords.fromarrays
    Creates a mrecarray from a (flat) list of masked arrays.
numpy.lib.format.open_memmap
    Open a .npy file as a memory-mapped array.
numpy.ma.MaskedArray.__new__
    Create a new masked array from scratch.
numpy.lib.arrayterator.Arrayterator
    Buffered iterator for big arrays.
numpy.ma.mrecords.fromtextfile
    Creates a mrecarray from data stored in the file `filename`.
numpy.asarray
    Convert the input to an array.
numpy.ndarray
    ndarray(shape, dtype=float, buffer=None, offset=0,
numpy.recarray
    Construct an ndarray that allows field access using attributes.
numpy.chararray
    chararray(shape, itemsize=1, unicode=False, buffer=None, offset=0,
numpy.pad
    Pads an array.
numpy.sum
    Sum of array elements over a given axis.
numpy.asanyarray
    Convert the input to an ndarray, but pass ndarray subclasses through.
numpy.copy
    Return an array copy of the given object.
numpy.diag
    Extract a diagonal or construct a diagonal array.
numpy.load
    Load arrays or pickled objects from ``.npy``, ``.npz`` or pickled files.
numpy.sort
    Return a sorted copy of an array.
numpy.array_equiv
    Returns True if input arrays are shape consistent and all elements equal.
numpy.dtype
    Create a data type object.
numpy.choose
    Construct an array from an index array and a set of arrays to choose from.
numpy.nditer
    Efficient multi-dimensional iterator object to iterate over arrays.
numpy.swapaxes
    Interchange two axes of an array.
numpy.full_like
    Return a full array with the same shape and type as a given array.
numpy.ones_like
    Return an array of ones with the same shape and type as a given array.
numpy.empty_like
    Return a new array with the same shape and type as a given array.
numpy.zeros_like
    Return an array of zeros with the same shape and type as a given array.
numpy.asarray_chkfinite
    Convert the input to an array, checking for NaNs or Infs.
numpy.diag_indices
    Return the indices to access the main diagonal of an array.
numpy.ma.choose
    Use an index array to construct a new array from a set of choices.
numpy.chararray.tolist
    a.tolist()
numpy.matlib.rand
    Return a matrix of random values with given shape.
numpy.savez_compressed
    Save several arrays into a single file in compressed ``.npz`` format.
numpy.ma.empty_like
    Return a new array with the same shape and type as a given array.
numpy.ma.make_mask_none
    Return a boolean mask of the given shape, filled with False.
numpy.ma.mrecords.fromrecords
    Creates a MaskedRecords from a list of records.
numpy.around
    Evenly round to the given number of decimals.
numpy.source
    Print or write to a file the source code for a Numpy object.
numpy.diagonal
    Return specified diagonals.
numpy.histogram2d
    Compute the bi-dimensional histogram of two data samples.
numpy.fft.ifft
    Compute the one-dimensional inverse discrete Fourier Transform.
numpy.fft.ifftn
    Compute the N-dimensional inverse discrete Fourier Transform.
numpy.busdaycalendar
    A business day calendar object that efficiently stores information
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concatenate&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conj&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conjugate&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;convolve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.1.1.3 导入惯例&lt;/h4&gt;

&lt;p&gt;导入numpy的推荐惯例是：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.3.1.2 创建数组&lt;/h3&gt;

&lt;h4&gt;1.3.1.2.1 手动构建数组&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1-D：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(4,)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;2-D，3-D，...：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# 2 x 3 数组&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[0, 1, 2],
       [3, 4, 5]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(2, 3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# 返回一个纬度的大小&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[[1],
        [2]],

       [[3],
        [4]]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(2, 2, 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;练习：简单数组&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;创建一个简单的二维数组。首先，重复上面的例子。然后接着你自己的：在第一行从后向前数奇数，接着第二行数偶数？&lt;/li&gt;
&lt;li&gt;在这些数组上使用函数&lt;a href=&quot;http://docs.python.org/2.7/library/functions.html#len&quot;&gt;len()&lt;/a&gt;、numpy
.shape()。他们有什么关系？与数组的&lt;code&gt;ndim&lt;/code&gt;属性间呢？&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;1.3.1.2.2 创建数组的函数&lt;/h4&gt;

&lt;p&gt;实际上，我们很少一个项目接一个项目输入...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;均匀分布：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 0 .. n-1  (!)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 开始，结束（不包含），步长&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 3, 5, 7])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;或者通过一些数据点：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 起点、终点、数据点&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0. ,  0.2,  0.4,  0.6,  0.8,  1. ])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0. ,  0.2,  0.4,  0.6,  0.8])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;普通数组：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 提示: (3, 3) 是元组&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 1.,  1.,  1.],
       [ 1.,  1.,  1.],
       [ 1.,  1.,  1.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0.,  0.],
       [ 0.,  0.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[1, 0, 0, 0],
       [0, 2, 0, 0],
       [0, 0, 3, 0],
       [0, 0, 0, 4]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;np.random&lt;/code&gt;: 随机数 (Mersenne Twister PRNG) :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;# [0, 1] 的均匀分布&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0.05504731,  0.38154156,  0.39639478,  0.22379146])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;# 高斯&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0.9895903 ,  1.85061188,  1.0021666 , -0.63782069])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# 设置随机种子&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;np.random.rand?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;练习：用函数创建数组&lt;/strong&gt;
* 实验用&lt;code&gt;arange&lt;/code&gt;、&lt;code&gt;linspace&lt;/code&gt;、&lt;code&gt;ones&lt;/code&gt;、&lt;code&gt;zeros&lt;/code&gt;、&lt;code&gt;eye&lt;/code&gt;和&lt;code&gt;diag&lt;/code&gt;。
* 用随机数创建不同类型的数组。
* 在创建带有随机数的数组前设定种子。
* 看一下函数&lt;code&gt;np.empty&lt;/code&gt;。它能做什么？什么时候会比较有用？&lt;/p&gt;

&lt;h3&gt;1.3.1.3基础数据类型&lt;/h3&gt;

&lt;p&gt;你可能已经发现，在一些情况下，数组元素显示带有点（即 2. VS 2）。这是因为所使用的数据类型不同：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;int64&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 1.,  2.,  3.])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不同的数据类型可以更紧凑的在内存中存储数据，但是大多数时候我们都只是操作浮点数据。注意，在上面的例子中，Numpy自动从输入中识别了数据类型。&lt;/p&gt;

&lt;p&gt;你可以明确的指定想要的类型：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;float64&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;默认&lt;/strong&gt;数据类型是浮点:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;float64&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他类型：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;复数&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;complex128&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;布尔&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;bool&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;字符&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Bonjour&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Hallo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# &amp;lt;--- 包含最多7个字母的字符&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;S7&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;更多&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;int32&lt;/li&gt;
&lt;li&gt;int64&lt;/li&gt;
&lt;li&gt;unit32&lt;/li&gt;
&lt;li&gt;unit64&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;1.3.1.4基本可视化&lt;/h3&gt;

&lt;p&gt;现在我们有了第一个数组，我们将要进行可视化。&lt;/p&gt;

&lt;p&gt;从&lt;em&gt;pylab&lt;/em&gt;模式启动IPython。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ipython --pylab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或notebook：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ipython notebook --pylab=inline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者如果IPython已经启动，那么：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pylab&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Using matplotlib backend: MacOSX
Populating the interactive namespace from numpy and matplotlib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者从Notebook中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pylab&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Populating the interactive namespace from numpy and matplotlib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;inline&lt;/code&gt; 对notebook来说很重要，以便绘制的图片在notebook中显示而不是在新窗口显示。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Matplotlib&lt;/em&gt;是2D制图包。我们可以像下面这样导入它的方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#整洁形式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后使用（注你需要显式的使用 &lt;code&gt;show&lt;/code&gt; ）:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;# 线图&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;# &amp;lt;-- 显示图表（使用pylab的话不需要）&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者，如果你使用 &lt;code&gt;pylab&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;# 线图&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在脚本中推荐使用 &lt;code&gt;import matplotlib.pyplot as plt&lt;/code&gt;。 而交互的探索性工作中用 &lt;code&gt;pylab&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1D作图：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;# 线图&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[&amp;lt;matplotlib.lines.Line2D at 0x1068f38d0&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_63_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 点图&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[&amp;lt;matplotlib.lines.Line2D at 0x106b32090&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_64_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2D 作图:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colorbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.colorbar.Colorbar instance at 0x106a095f0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_66_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;更多请见matplotlib部分（暂缺）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;练习&lt;/strong&gt;：简单可视化&lt;/p&gt;

&lt;p&gt;画出简单的数组：cosine作为时间的一个函数以及2D矩阵。&lt;/p&gt;

&lt;p&gt;在2D矩阵上试试使用 &lt;code&gt;gray&lt;/code&gt; colormap。&lt;/p&gt;

&lt;h4&gt;1.3.1.5索引和切片&lt;/h4&gt;

&lt;p&gt;数组的项目可以用与其他Python序列（比如：列表）一样的方式访问和赋值：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(0, 2, 9)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;：索引从0开始与其他的Python序列（以及C/C++）一样。相反，在Fortran或者Matlab索引从1开始。&lt;/p&gt;

&lt;p&gt;使用常用的Python风格来反转一个序列也是支持的：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于多维数组，索引是整数的元组：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[0, 0, 0],
       [0, 1, 0],
       [0, 0, 2]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 第三行，第二列&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0,  0,  0],
       [ 0,  1,  0],
       [ 0, 10,  2]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 0])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在2D数组中，第一个纬度对应行，第二个纬度对应列。&lt;/li&gt;
&lt;li&gt;对于多维度数组 &lt;code&gt;a&lt;/code&gt;，a[0]被解释为提取在指定纬度的所有元素&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;切片&lt;/strong&gt;：数组与其他Python序列也可以被切片：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# [开始:结束:步长]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([2, 5, 8])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意最后一个索引是不包含的！：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;切片的三个元素都不是必选：默认情况下，起点是0，结束是最后一个，步长是1：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 2])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 2, 4, 6, 8])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([3, 4, 5, 6, 7, 8, 9])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Numpy索引和切片的一个小说明...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/numpy_indexing.png&quot; alt=&quot;numpy_indexing&quot;&gt;&lt;/p&gt;

&lt;p&gt;赋值和切片可以结合在一起：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0,  1,  2,  3,  4, 10, 10, 10, 10, 10])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3, 4, 4, 3, 2, 1, 0])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;练习：索引与切片&lt;/strong&gt;
* 试试切片的特色，用起点、结束和步长：从linspace开始，试着从后往前获得奇数，从前往后获得偶数。
重现上面示例中的切片。你需要使用下列表达式创建这个数组：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0,  1,  2,  3,  4,  5],
       [10, 11, 12, 13, 14, 15],
       [20, 21, 22, 23, 24, 25],
       [30, 31, 32, 33, 34, 35],
       [40, 41, 42, 43, 44, 45],
       [50, 51, 52, 53, 54, 55]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;练习：数组创建&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;创建下列的数组（用正确的数据类型）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[[1, 1, 1, 1],
 [1, 1, 1, 1],
 [1, 1, 1, 2],
 [1, 6, 1, 1]]

[[0., 0., 0., 0., 0.],
 [2., 0., 0., 0., 0.],
 [0., 3., 0., 0., 0.],
 [0., 0., 4., 0., 0.],
 [0., 0., 0., 5., 0.],
 [0., 0., 0., 0., 6.]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考标准：每个数组&lt;/p&gt;

&lt;p&gt;提示：每个数组元素可以像列表一样访问，即a[1] 或 a[1, 2]。&lt;/p&gt;

&lt;p&gt;提示：看一下 &lt;code&gt;diag&lt;/code&gt; 的文档字符串。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;练习：创建平铺数组&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;看一下 &lt;code&gt;np.tile&lt;/code&gt; 的文档，是用这个函数创建这个数组：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.3.1.6 副本和视图&lt;/h3&gt;

&lt;p&gt;切片操作创建原数组的一个&lt;strong&gt;视图&lt;/strong&gt;，这只是访问数组数据一种方式。因此，原始的数组并不是在内存中复制。你可以用 &lt;code&gt;np.may_share_memory()&lt;/code&gt;
来确认两个数组是否共享相同的内存块。但是请注意，这种方式使用启发式，可能产生漏报。&lt;/p&gt;

&lt;p&gt;**当修改视图时，原始数据也被修改：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 2, 4, 6, 8])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;may_share_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([12,  2,  4,  6,  8])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# (!)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([12,  1,  2,  3,  4,  5,  6,  7,  8,  9])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 强制复制&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;may_share_memory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;乍看之下这种行为可能有些奇怪，但是这样做节省了内存和时间。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实例：素数筛选&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/prime-sieve.png&quot; alt=&quot;prime&quot;&gt;&lt;/p&gt;

&lt;p&gt;用筛选法计算0-99之间的素数&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;构建一个名为 &lt;code&gt;_prime&lt;/code&gt; 形状是 (100,) 的布尔数组，在初始将值都设为True：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;将不属于素数的0，1去掉&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于从2开始的整数 &lt;code&gt;j&lt;/code&gt; ，化掉它的倍数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;N_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;看一眼 &lt;code&gt;help(np.nonzero)&lt;/code&gt;，然后打印素数&lt;/li&gt;
&lt;li&gt;接下来:

&lt;ul&gt;
&lt;li&gt;将上面的代码放入名为 &lt;code&gt;prime_sieve.py&lt;/code&gt; 的脚本文件&lt;/li&gt;
&lt;li&gt;运行检查一下时候有效&lt;/li&gt;
&lt;li&gt;使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes&quot;&gt;埃拉托斯特尼筛法&lt;/a&gt;的优化建议

&lt;ol&gt;
&lt;li&gt;跳过已知不是素数的 &lt;code&gt;j&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;第一个应该被划掉的数是$j^2$&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;1.3.1.7象征索引&lt;/h4&gt;

&lt;p&gt;Numpy数组可以用切片索引，也可以用布尔或整形数组（面具）。这个方法也被称为象征索引。它创建一个副本而不是视图。&lt;/p&gt;

&lt;h4&gt;1.3.1.7.1使用布尔面具&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_integers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([10,  3,  8,  0, 19, 10, 11,  9, 10,  6,  0, 20, 12,  7, 14])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([False,  True, False,  True, False, False, False,  True, False,
        True,  True, False,  True, False, False], dtype=bool)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;extract_from_a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 或,  a[a%3==0]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;extract_from_a&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;# 用面具抽取一个子数组&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 3,  0,  9,  6,  0, 12])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;赋值给子数组时，用面具索引非常有用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([10, -1,  8, -1, 19, 10, 11, -1, 10, -1, -1, 20, -1,  7, 14])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.1.7.2 用整型数组索引&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0, 10, 20, 30, 40, 50, 60, 70, 80, 90])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;索引可以用整型数组完成，其中相同的索引重复了几次：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 注：[2, 3, 2, 4, 2] 是Python列表&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([20, 30, 20, 40, 20])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用这种类型的索引可以分配新值：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([   0,   10,   20,   30,   40,   50,   60, -100,   80, -100])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当一个新数组用整型数组索引创建时，新数组有相同的形状，而不是整数数组：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(2, 2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[3, 4],
       [9, 7]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下图展示了多种象征索引的应用
&lt;img src=&quot;http://scipy-lectures.github.io/_images/numpy_fancy_indexing.png&quot; alt=&quot;numpy_fancy_indexing&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;练习：象征索引&lt;/strong&gt;
* 同样，重新生成上图中所示的象征索引
* 用左侧的象征索引和右侧的数组创建在为一个数组赋值，例如，设置上图数组的一部分为0。&lt;/p&gt;

&lt;h2&gt;1.3.2 数组的数值操作&lt;/h2&gt;

&lt;h3&gt;1.3.2.1 元素级操作&lt;/h3&gt;

&lt;h4&gt;1.3.2.1.1 基础操作&lt;/h4&gt;

&lt;p&gt;标量:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([2, 3, 4, 5])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 2,  4,  8, 16])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所有运算是在元素级别上操作：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([-1.,  0.,  1.,  2.])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 2.,  4.,  6.,  8.])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 2,  3,  6, 13, 28])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这些操作当然也比你用纯Python实现好快得多：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;100000 loops, best of 3: 11 µs per loop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1000 loops, best of 3: 560 µs per loop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意：数组相乘不是矩阵相乘：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;                   &lt;span class=&quot;c&quot;&gt;# 不是矩阵相乘！&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 1.,  1.,  1.],
       [ 1.,  1.,  1.],
       [ 1.,  1.,  1.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注：矩阵相乘：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 3.,  3.,  3.],
       [ 3.,  3.,  3.],
       [ 3.,  3.,  3.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;练习：元素级别的操作&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;试一下元素级别的简单算术操作&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;%timeit&lt;/code&gt; 比一下他们与纯Python对等物的时间&lt;/li&gt;
&lt;li&gt;生成：

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[2**0, 2**1, 2**2, 2**3, 2**4]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a_j = 2^(3*j) - j&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;1.3.2.1.2其他操作&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;对比：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([False,  True, False,  True], dtype=bool)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([False, False,  True, False], dtype=bool)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数组级别的对比：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array_equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;逻辑操作&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logical_or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ True,  True,  True, False], dtype=bool)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logical_and&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ True, False, False, False], dtype=bool)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=3aAGiGcMZFhxRP7D1CWzajcHf-OVCM6L6J1Eaxv1rPxFyEYKRoHXHdcYqKfUIc0q-hcxB_UoE73B5O0GyH1mf_&quot;&gt;超越函数&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0.        ,  0.84147098,  0.90929743,  0.14112001, -0.7568025 ])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;-c:1: RuntimeWarning: divide by zero encountered in log
array([       -inf,  0.        ,  0.69314718,  1.09861229,  1.38629436])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([  1.        ,   2.71828183,   7.3890561 ,  20.08553692,  54.59815003])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;形状不匹配&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)

&amp;lt;ipython-input-74-82c1c1d5b8c1&amp;gt; in &amp;lt;module&amp;gt;()
      1 a = np.arange(4)
----&amp;gt; 2 a + np.array([1, 2])


ValueError: operands could not be broadcast together with shapes (4,) (2,) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;广播&lt;/em&gt;？我们将在&lt;a href=&quot;#Broadcasting&quot;&gt;稍后&lt;/a&gt;讨论。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;变换&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;triu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 看一下 help(np.triu)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0.,  1.,  1.],
       [ 0.,  0.,  1.],
       [ 0.,  0.,  0.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0.,  0.,  0.],
       [ 1.,  0.,  0.],
       [ 1.,  1.,  0.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;警告：变换是视图&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;因此，下列的代码是错误的，将导致矩阵不对称：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注：线性代数&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;子模块 &lt;code&gt;numpy.linalg&lt;/code&gt; 实现了基础的线性代数，比如解开线性系统，奇异值分解等。但是，并不能保证以高效的方式编译，因此，建议使用
&lt;code&gt;scipy.linalg&lt;/code&gt;, 详细的内容见线性代数操作：&lt;code&gt;scipy.linalg&lt;/code&gt;（暂缺）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;练习：其他操作&lt;/strong&gt;
* 看一下 &lt;code&gt;np.allclose&lt;/code&gt; 的帮助，什么时候这很有用？
* 看一下 &lt;code&gt;np.triu&lt;/code&gt;和 &lt;code&gt;np.tril&lt;/code&gt;的帮助。&lt;/p&gt;

&lt;h3&gt;1.3.2.2 基础简化&lt;/h3&gt;

&lt;h4&gt;1.3.2.2.1 计算求和&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;行求和和列求和：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/reductions.png&quot; alt=&quot;reductions&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[1, 1],
       [2, 2]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 列 (第一纬度)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([3, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(3, 3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 行 (第二纬度)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([2, 4])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(2, 4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相同的思路在高维：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1.2671177193964822
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1.2671177193964822
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.2.2.2 其他简化&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;以相同方式运作（也可以使用 &lt;code&gt;axis=&lt;/code&gt; ）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;极值&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 最小值的索引&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 最大值的索引&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;逻辑运算&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：可以被应用数组对比：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;统计:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1.75
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;median&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;median&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 最后的坐标轴&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 2.,  5.])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;# 全体总体的标准差。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0.82915619758884995
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... 以及其他更多（随着你成长最好学习一下）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;练习：简化&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;假定有 &lt;code&gt;sum&lt;/code&gt; ，你会期望看到哪些其他的函数？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sum&lt;/code&gt; 和 &lt;code&gt;cumsum&lt;/code&gt; 有什么区别？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;实例: 数据统计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scipy-lectures.github.io/_downloads/populations.txt&quot;&gt;populations.txt&lt;/a&gt;中的数据描述了过去20年加拿大北部野兔和猞猁的数量（以及胡萝卜）。&lt;/p&gt;

&lt;p&gt;你可以在编辑器或在IPython看一下数据（shell或者notebook都可以）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cat data/populations.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# year  hare    lynx    carrot
1900    30e3    4e3 48300
1901    47.2e3  6.1e3   48200
1902    70.2e3  9.8e3   41500
1903    77.4e3  35.2e3  38200
1904    36.3e3  59.4e3  40600
1905    20.6e3  41.7e3  39800
1906    18.1e3  19e3    38600
1907    21.4e3  13e3    42300
1908    22e3    8.3e3   44500
1909    25.4e3  9.1e3   42100
1910    27.1e3  7.4e3   46000
1911    40.3e3  8e3 46800
1912    57e3    12.3e3  43800
1913    76.6e3  19.5e3  40900
1914    52.3e3  45.7e3  39400
1915    19.5e3  51.1e3  39000
1916    11.2e3  29.7e3  36700
1917    7.6e3   15.8e3  41800
1918    14.6e3  9.7e3   43300
1919    16.2e3  10.1e3  41300
1920    24.7e3  8.6e3   47300
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先，将数据加载到Numpy数组：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadtxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;data/populations.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hares&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lynxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;carrots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 技巧: 将列分配给变量&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来作图：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hares&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lynxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;carrots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Hare&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Lynx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Carrot&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.legend.Legend at 0x1070407d0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_200_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;随时间变化的人口平均数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;populations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;populations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 34080.95238095,  20166.66666667,  42400.        ])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;样本的标准差：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;populations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 20897.90645809,  16254.59153691,   3322.50622558])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;每一年哪个物种有最高的人口？：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;populations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([2, 2, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 2, 2, 2, 2, 2])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;实例：随机游走算法扩散&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scipy-lectures.github.io/_images/random_walk.png&quot;&gt;random_walk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;让我们考虑一下简单的1维随机游走过程：在每个时间点，行走者以相等的可能性跳到左边或右边。我们感兴趣的是找到随机游走者在 &lt;code&gt;t&lt;/code&gt; 次左跳或右跳后距离原点的典型距离
？我们将模拟许多”行走者“来找到这个规律，并且我们将采用数组计算技巧来计算：我们将创建一个2D数组记录事实，一个方向是经历（每个行走者有一个经历），一个纬度是时间：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/random_walk_schema.png&quot; alt=&quot;random_walk_schema&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;n_stories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 行走者的数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;# 我们跟踪行走者的时间&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们随机选择步长1或-1去行走：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_integers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 验证: 所有步长是1或-1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([-1,  1])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们通过汇总随着时间的步骤来构建游走&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# axis = 1: 纬度是时间&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sq_distance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;获得经历轴的平均数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;mean_sq_distance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sq_distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;画出结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean_sq_distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;g.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y-&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;$t$&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;$\sqrt{\langle (\delta x)^2 \rangle}$&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.text.Text at 0x10b529450&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_216_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;我们找到了物理学上一个著名的结果：均方差记录是时间的平方根！&lt;/p&gt;

&lt;p&gt;&lt;a id=&#39;Broadcasting&#39;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;1.3.2.3 广播&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;numpy数组的基本操作（相加等）是元素级别的&lt;/li&gt;
&lt;li&gt;在相同大小的数组上仍然适用。
&lt;strong&gt;尽管如此&lt;/strong&gt;, 也可能在不同大小的数组上进行这个操作，假如Numpy可以将这些数组转化为相同的大小：这种转化称为广播。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下图给出了一个广播的例子：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/numpy_broadcasting.png&quot; alt=&quot;numpy_broadcasting&quot;&gt;&lt;/p&gt;

&lt;p&gt;让我们验证一下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0,  0,  0],
       [10, 10, 10],
       [20, 20, 20],
       [30, 30, 30]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0,  1,  2],
       [10, 11, 12],
       [20, 21, 22],
       [30, 31, 32]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在不知道广播的时候已经使用过它！：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 我们将一个数组的纬度0分配给另一个数组的纬度1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 2.,  2.,  2.,  2.,  2.],
       [ 1.,  1.,  1.,  1.,  1.],
       [ 1.,  1.,  1.,  1.,  1.],
       [ 1.,  1.,  1.,  1.,  1.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 我们将一个数组的纬度0分配给另一个数组的纬度&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[ 1.  1.  1.  1.  1.]

array([[ 2.,  2.,  2.,  2.,  2.],
       [ 1.,  1.,  1.,  1.,  1.],
       [ 1.,  1.,  1.,  1.,  1.],
       [ 1.,  1.,  1.,  1.,  1.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一个有用的技巧：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(4,)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 添加一个新的轴 -&amp;gt; 2D 数组&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(4, 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0],
       [10],
       [20],
       [30]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0,  1,  2],
       [10, 11, 12],
       [20, 21, 22],
       [30, 31, 32]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;广播看起来很神奇，但是，当我们要解决的问题是输出数据比输入数据有更多纬度的数组时，使用它是非常自然的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实例：广播&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;让我们创建一个66号公路上城市之间距离（用公里计算）的数组：芝加哥、斯普林菲尔德、圣路易斯、塔尔萨、俄克拉何马市、阿马里洛、圣塔菲、阿尔布开克、Flagstaff、洛杉矶。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;mileposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;198&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;303&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;736&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;871&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1175&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1475&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1544&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1913&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2448&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;distance_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mileposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mileposts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;distance_array&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[   0,  198,  303,  736,  871, 1175, 1475, 1544, 1913, 2448],
       [ 198,    0,  105,  538,  673,  977, 1277, 1346, 1715, 2250],
       [ 303,  105,    0,  433,  568,  872, 1172, 1241, 1610, 2145],
       [ 736,  538,  433,    0,  135,  439,  739,  808, 1177, 1712],
       [ 871,  673,  568,  135,    0,  304,  604,  673, 1042, 1577],
       [1175,  977,  872,  439,  304,    0,  300,  369,  738, 1273],
       [1475, 1277, 1172,  739,  604,  300,    0,   69,  438,  973],
       [1544, 1346, 1241,  808,  673,  369,   69,    0,  369,  904],
       [1913, 1715, 1610, 1177, 1042,  738,  438,  369,    0,  535],
       [2448, 2250, 2145, 1712, 1577, 1273,  973,  904,  535,    0]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/route66.png&quot; alt=&quot;route66&quot;&gt;&lt;/p&gt;

&lt;p&gt;许多基于网格或者基于网络的问题都需要使用广播。例如，如果要计算10X10网格中每个点到原点的数据，可以这样：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0.        ,  1.        ,  2.        ,  3.        ,  4.        ],
       [ 1.        ,  1.41421356,  2.23606798,  3.16227766,  4.12310563],
       [ 2.        ,  2.23606798,  2.82842712,  3.60555128,  4.47213595],
       [ 3.        ,  3.16227766,  3.60555128,  4.24264069,  5.        ],
       [ 4.        ,  4.12310563,  4.47213595,  5.        ,  5.65685425]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者用颜色：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colorbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.colorbar.Colorbar instance at 0x10d8d7170&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_238_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;评论&lt;/strong&gt; : &lt;code&gt;numpy.ogrid&lt;/code&gt; 函数允许直接创建上一个例子中两个&lt;strong&gt;重要纬度&lt;/strong&gt;向量X和Y：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ogrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(array([[0],
        [1],
        [2],
        [3],
        [4]]), array([[0, 1, 2, 3, 4]]))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;((5, 1), (1, 5))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因此， &lt;code&gt;np.ogrid&lt;/code&gt; 就非常有用，只要我们是要处理网格计算。另一方面， 在一些无法（或者不想）从广播中收益的情况下，&lt;code&gt;np.mgrid&lt;/code&gt;
直接提供了由索引构成的矩阵：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mgrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[0, 0, 0, 0],
       [1, 1, 1, 1],
       [2, 2, 2, 2],
       [3, 3, 3, 3]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[0, 1, 2, 3],
       [0, 1, 2, 3],
       [0, 1, 2, 3],
       [0, 1, 2, 3]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.3.2.4数组形状操作&lt;/h3&gt;

&lt;h4&gt;1.3.2.4.1 扁平&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ravel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 2, 3, 4, 5, 6])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[1, 4],
       [2, 5],
       [3, 6]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ravel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 4, 2, 5, 3, 6])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;高维：后进先出。&lt;/p&gt;

&lt;h4&gt;1.3.2.4.2 重排&lt;/h4&gt;

&lt;p&gt;扁平的相反操作：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(2, 3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ravel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[1, 2, 3],
       [4, 5, 6]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# 不确定的值（-1）将被推导&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[1, 2, 3],
       [4, 5, 6]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;： &lt;code&gt;ndarray.reshape&lt;/code&gt; 可以返回一个视图（参见 &lt;code&gt;help(np.reshape)&lt;/code&gt;）, 也可以可以返回副本&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[99,  2,  3],
       [ 4,  5,  6]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当心：重排也可以返回一个副本！：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要理解这个现象，你需要了解更多关于numpy数组内存设计的知识。&lt;/p&gt;

&lt;h4&gt;1.3.2.4.3 添加纬度&lt;/h4&gt;

&lt;p&gt;用 &lt;code&gt;np.newaxis&lt;/code&gt;对象进行索引可以为一个数组添加轴（在上面关于广播的部分你已经看到过了）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 2, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[1],
       [2],
       [3]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newaxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[1, 2, 3]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.2.4.4 纬度重组&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(4, 3, 2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(3, 2, 4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也是创建了一个视图：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.2.4.5 改变大小&lt;/h4&gt;

&lt;p&gt;可以用 &lt;code&gt;ndarray.resize&lt;/code&gt; 改变数组的大小：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([0, 1, 2, 3, 0, 0, 0, 0])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是，它不能在其他地方引用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)

&amp;lt;ipython-input-168-59edd3107605&amp;gt; in &amp;lt;module&amp;gt;()
      1 b = a
----&amp;gt; 2 a.resize((4,))


ValueError: cannot resize an array that references or is referenced
by another array in this way.  Use the resize function
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;练习：形状操作&lt;/strong&gt;
* 看一下 &lt;code&gt;reshape&lt;/code&gt; 的文档字符串，特别要注意其中关于副本和视图的内容。
* 用 &lt;code&gt;flatten&lt;/code&gt; 来替换 &lt;code&gt;ravel&lt;/code&gt;。有什么区别？ (提示: 试一下哪个返回视图哪个返回副本)
* 试一下用 &lt;code&gt;transpose&lt;/code&gt; 来进行纬度变换。&lt;/p&gt;

&lt;h3&gt;1.3.2.5 数据排序&lt;/h3&gt;

&lt;p&gt;按一个轴排序：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[3, 4, 5],
       [1, 1, 2]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：每行分别排序！&lt;/p&gt;

&lt;p&gt;原地排序：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[3, 4, 5],
       [1, 1, 2]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;象征索引排序：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([2, 3, 1, 0])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 2, 3, 4])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;找到最大值和最小值：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;j_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;j_min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;j_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j_min&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(0, 2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;练习：排序&lt;/strong&gt;
* 试一下原地和非原地排序
* 试一下用不同的数据类型创建数组并且排序。
* 用 &lt;code&gt;all&lt;/code&gt; 或者  &lt;code&gt;array_equal&lt;/code&gt; 来检查一下结果。
* 看一下 &lt;code&gt;np.random.shuffle&lt;/code&gt;，一种更快创建可排序输入的方式。
* 合并 &lt;code&gt;ravel&lt;/code&gt; 、&lt;code&gt;sort&lt;/code&gt; 和 &lt;code&gt;reshape&lt;/code&gt;。
* 看一下 &lt;code&gt;sort&lt;/code&gt; 的 &lt;code&gt;axis&lt;/code&gt; 关键字，重写一下这个练习。&lt;/p&gt;

&lt;h3&gt;1.3.2.6 总结&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;入门你需要了解什么？&lt;/strong&gt;
* 了解如何创建数组：&lt;code&gt;array&lt;/code&gt;、&lt;code&gt;arange&lt;/code&gt;、&lt;code&gt;ones&lt;/code&gt;、&lt;code&gt;zeros&lt;/code&gt;。
* 了解用 &lt;code&gt;array.shape&lt;/code&gt;数组的形状，然后使用切片来获得数组的不同视图：&lt;code&gt;array[::2]&lt;/code&gt;等。用 &lt;code&gt;reshape&lt;/code&gt;改变数组形状或者用
&lt;code&gt;ravel&lt;/code&gt;扁平化。
* 获得数组元素的一个子集，和/或用面具修改他们的值ay and/or modify their values with masks&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;了解数组上各式各样的操作，比如找到平均数或最大值
(&lt;code&gt;array.max()&lt;/code&gt;、&lt;code&gt;array.mean()&lt;/code&gt;)。不需要记住所有东西，但是应该有条件反射去搜索文档 (线上文档, &lt;code&gt;help()&lt;/code&gt;,&lt;code&gt;lookfor()&lt;/code&gt;)!!&lt;/li&gt;
&lt;li&gt;更高级的用法：掌握用整型数组索引，以及广播。了解更多的Numpy函数以便处理多种数组操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;快读阅读&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果你想要快速通过科学讲座笔记来学习生态系统，你可以直接跳到下一章：Matplotlib: 作图(暂缺)。&lt;/p&gt;

&lt;p&gt;本章剩下的内容对于学习介绍部分不是必须的。但是，记得回来完成本章并且完成更多的练习。&lt;/p&gt;

&lt;h2&gt;1.3.3 数据的更多内容&lt;/h2&gt;

&lt;h3&gt;1.3.3.1 更多的数据类型&lt;/h3&gt;

&lt;h4&gt;1.3.3.1.1 投射&lt;/h4&gt;

&lt;p&gt;“更大”的类型在混合类型操作中胜出：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 2.5,  3.5,  4.5])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;赋值不会改变类型！&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;int64&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# &amp;lt;-- 浮点被截取为整数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 2, 3])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;强制投射：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# &amp;lt;-- 截取整数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 1, 1])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;四舍五入：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;around&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;                    &lt;span class=&quot;c&quot;&gt;# 仍然是浮点&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 1.,  2.,  2.,  2.,  4.,  4.])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;around&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([1, 2, 2, 2, 4, 4])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.3.1.2 不同数据类型的大小&lt;/h4&gt;

&lt;p&gt;整数 (带有符号):&lt;/p&gt;

&lt;p&gt;|类型     |字节数|
|-------|------|
|int8   |8 bits|
|int16  |16 bits|
|int32  |32 bits (与32位平台的int相同)|
|int64  |64 bits (与64位平台的int相同)|&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dtype(&amp;#39;int64&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(2147483647, 2147483647)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(9223372036854775807, 9223372036854775807L)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;无符号整数:&lt;/p&gt;

&lt;p&gt;类型|字节数
-|-
uint8|8 bits
uint16|16 bits
uint32|32 bits
uint64|64 bits&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uint32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(4294967295, 4294967295)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uint64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(18446744073709551615L, 18446744073709551615L)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;浮点数据：&lt;/p&gt;

&lt;p&gt;类型|字节数
-|-
float16|16 bits
float32|32 bits
float64|64 bits (与浮点相同)
float96|96 bits, 平台依赖 (与 &lt;code&gt;np.longdouble&lt;/code&gt; 相同)
float128|128 bits, 平台依赖 (与 &lt;code&gt;np.longdouble&lt;/code&gt;相同)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1.1920929e-07
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2.2204460492503131e-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;浮点复数：&lt;/p&gt;

&lt;p&gt;类型|字节数
-|-
complex64|两个 32-bit 浮点
complex128|两个 64-bit 浮点
complex192|两个 96-bit 浮点, 平台依赖
complex256|两个 128-bit 浮点, 平台依赖&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;更小的数据类型&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果你不知道需要特殊数据类型，那你可能就不需要。&lt;/p&gt;

&lt;p&gt;比较使用 &lt;code&gt;float32&lt;/code&gt;代替 &lt;code&gt;float64&lt;/code&gt;:
* 一半的内存和硬盘大小
* 需要一半的宽带（可能在一些操作中更快）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1000 loops, best of 3: 1.41 ms per loop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1000 loops, best of 3: 739 µs per loop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;但是更大的四舍五入误差 - 有时在一些令人惊喜的地方（即，不要使用它们除非你真的需要）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;1.3.3.2 结构化的数据类型&lt;/h3&gt;

&lt;p&gt;名称|类型
-|-
sensor_code|(4个字母的字符)
position|(浮点)
value|(浮点)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sensor_code&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;S4&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;position&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(6,)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(&amp;#39;sensor_code&amp;#39;, &amp;#39;position&amp;#39;, &amp;#39;value&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ALFA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.37&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;BETA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;TAU&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ALFA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.37&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ALFA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;TAU&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([(&amp;#39;ALFA&amp;#39;, 1.0, 0.37), (&amp;#39;BETA&amp;#39;, 1.0, 0.11), (&amp;#39;TAU&amp;#39;, 1.0, 0.13),
       (&amp;#39;ALFA&amp;#39;, 1.5, 0.37), (&amp;#39;ALFA&amp;#39;, 3.0, 0.11), (&amp;#39;TAU&amp;#39;, 1.2, 0.13)], 
      dtype=[(&amp;#39;sensor_code&amp;#39;, &amp;#39;S4&amp;#39;), (&amp;#39;position&amp;#39;, &amp;#39;&amp;lt;f8&amp;#39;), (&amp;#39;value&amp;#39;, &amp;#39;&amp;lt;f8&amp;#39;)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用字段名称索引也可以访问字段：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sensor_code&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([&amp;#39;ALFA&amp;#39;, &amp;#39;BETA&amp;#39;, &amp;#39;TAU&amp;#39;, &amp;#39;ALFA&amp;#39;, &amp;#39;ALFA&amp;#39;, &amp;#39;TAU&amp;#39;], 
      dtype=&amp;#39;|S4&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([ 0.37,  0.11,  0.13,  0.37,  0.11,  0.13])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(&amp;#39;ALFA&amp;#39;, 1.0, 0.37)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sensor_code&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;TAU&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(&amp;#39;TAU&amp;#39;, 1.0, 0.37)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一次多个字段：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;position&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([(1.0, 0.37), (1.0, 0.11), (1.0, 0.13), (1.5, 0.37), (3.0, 0.11),
       (1.2, 0.13)], 
      dtype=[(&amp;#39;position&amp;#39;, &amp;#39;&amp;lt;f8&amp;#39;), (&amp;#39;value&amp;#39;, &amp;#39;&amp;lt;f8&amp;#39;)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;和普通情况一样，象征索引也有效：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sensor_code&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ALFA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([(&amp;#39;ALFA&amp;#39;, 1.5, 0.37), (&amp;#39;ALFA&amp;#39;, 3.0, 0.11)], 
      dtype=[(&amp;#39;sensor_code&amp;#39;, &amp;#39;S4&amp;#39;), (&amp;#39;position&amp;#39;, &amp;#39;&amp;lt;f8&amp;#39;), (&amp;#39;value&amp;#39;, &amp;#39;&amp;lt;f8&amp;#39;)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：构建结构化数组有需要其他的语言，见&lt;a href=&quot;http://docs.scipy.org/doc/numpy/user/basics.rec.html&quot;&gt;这里&lt;/a&gt;和&lt;a href=&quot;http://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html#specifying-and-constructing-data-types&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;1.3.3.3 面具数组（maskedarray）: 处理缺失值（的传播）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;对于浮点不能用NaN，但是面具对所有类型都适用：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;masked_array(data = [1 -- 3 --],
             mask = [False  True False  True],
       fill_value = 999999)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;masked_array(data = [2 -- -- --],
             mask = [False  True  True  True],
       fill_value = 999999)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;通用函数的面具版本：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;masked_array(data = [1.0 -- 1.4142135623730951 --],
             mask = [False  True False  True],
       fill_value = 1e+20)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：有许多其他数组的&lt;a href=&quot;http://scipy-lectures.github.io/advanced/advanced_numpy/index.html#array-siblings&quot;&gt;兄弟姐妹&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;尽管这脱离了Numpy这章的主题，让我们花点时间回忆一下编写代码的最佳实践，从长远角度这绝对是值得的：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;最佳实践&lt;/strong&gt;
* 明确的变量名（不需要备注去解释变量里是什么）
* 风格：逗号后及＝周围有空格等。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;在[Python代码风格指南](http://www.python.org/dev/peps/pep-0008)及[文档字符串惯例](http://www.python.org/dev/peps/pep-0257)页面中给出了相当数据量如何书写“漂亮代码”的规则（并且，最重要的是，与其他人使用相同的惯例!）。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;除非在一些及特殊的情况下，变量名及备注用英文。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;1.3.4 高级操作&lt;/h2&gt;

&lt;p&gt;1.3.4.1. 多项式&lt;/p&gt;

&lt;p&gt;Numpy也包含不同基的多项式：&lt;/p&gt;

&lt;p&gt;例如，$3x^2 + 2x - 1$:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;poly1d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roots&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([-1.        ,  0.33333333])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;poly1d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polyfit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[&amp;lt;matplotlib.lines.Line2D at 0x10f40c2d0&amp;gt;,
 &amp;lt;matplotlib.lines.Line2D at 0x10f40c510&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_341_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;更多内容见http://docs.scipy.org/doc/numpy/reference/routines.polynomials.poly1d.html。&lt;/p&gt;

&lt;h4&gt;1.3.4.1.1 更多多项式（有更多的基）&lt;/h4&gt;

&lt;p&gt;Numpy也有更复杂的多项式接口，支持比如切比雪夫基。&lt;/p&gt;

&lt;p&gt;$3x^2 + 2x - 1$:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polynomial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Polynomial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 系数的顺序不同！&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;-1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([-1.        ,  0.33333333])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;degree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 在普通的多项式中通常不暴露&amp;#39;order&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在切尔雪夫基中使用多项式的例子，多项式的范围在[-1,1]：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polynomial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chebyshev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;r.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;k-&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[&amp;lt;matplotlib.lines.Line2D at 0x10f442d10&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_347_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;切尔雪夫多项式在插入方面有很多优势。&lt;/p&gt;

&lt;h3&gt;1.3.4.2 加载数据文件&lt;/h3&gt;

&lt;h4&gt;1.3.4.2.1 文本文件&lt;/h4&gt;

&lt;p&gt;例子: &lt;a href=&quot;http://scipy-lectures.github.io/_downloads/populations.txt&quot;&gt;populations.txt&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# year  hare    lynx    carrot
1900    30e3    4e3     48300
1901    47.2e3  6.1e3   48200
1902    70.2e3  9.8e3   41500
1903    77.4e3  35.2e3  38200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadtxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;data/populations.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[  1900.,  30000.,   4000.,  48300.],
       [  1901.,  47200.,   6100.,  48200.],
       [  1902.,  70200.,   9800.,  41500.],
       [  1903.,  77400.,  35200.,  38200.],
       [  1904.,  36300.,  59400.,  40600.],
       [  1905.,  20600.,  41700.,  39800.],
       [  1906.,  18100.,  19000.,  38600.],
       [  1907.,  21400.,  13000.,  42300.],
       [  1908.,  22000.,   8300.,  44500.],
       [  1909.,  25400.,   9100.,  42100.],
       [  1910.,  27100.,   7400.,  46000.],
       [  1911.,  40300.,   8000.,  46800.],
       [  1912.,  57000.,  12300.,  43800.],
       [  1913.,  76600.,  19500.,  40900.],
       [  1914.,  52300.,  45700.,  39400.],
       [  1915.,  19500.,  51100.,  39000.],
       [  1916.,  11200.,  29700.,  36700.],
       [  1917.,   7600.,  15800.,  41800.],
       [  1918.,  14600.,   9700.,  43300.],
       [  1919.,  16200.,  10100.,  41300.],
       [  1920.,  24700.,   8600.,  47300.]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savetxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pop2.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadtxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pop2.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;注&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：如果你有一个复杂的文本文件，应该尝试：&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`np.genfromtxt`&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;使用&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;函数和例如正则式来解析（&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;特别适合这个工作）&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;提示：用&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPython&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;在文件系统中航行&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;pwd      # 显示当前目录
```&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;u&amp;#39;/Users/cloga/Documents/scipy-lecture-notes_cn&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/Users/cloga/Documents/scipy-lecture-notes_cn/data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;populations.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.4.2.2 图像&lt;/h4&gt;

&lt;p&gt;使用Matplotlib：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;data/elephant.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;((200, 300, 3), dtype(&amp;#39;float32&amp;#39;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.image.AxesImage at 0x10fd13f10&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_357_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;plot.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imsave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red_elephant&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.figure.Figure at 0x10fba1750&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这只保存了一个渠道（RGB）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red_elephant.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.image.AxesImage at 0x11040e150&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_360_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;其他包：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scipy.misc&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imsave&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;imsave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tiny_elephant.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tiny_elephant.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interpolation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;nearest&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.image.AxesImage at 0x110bfbfd0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_362_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;h4&gt;1.3.4.2.3 Numpy的自有格式&lt;/h4&gt;

&lt;p&gt;Numpy有自有的二进制格式，没有便携性但是I/O高效：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pop.npy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pop.npy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.3.4.2.4 知名的（并且更复杂的）文件格式&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;HDF5: &lt;a href=&quot;http://code.google.com/p/h5py/&quot;&gt;h5py&lt;/a&gt;, &lt;a href=&quot;http://pytables.org/&quot;&gt;PyTables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NetCDF: &lt;code&gt;scipy.io.netcdf_file&lt;/code&gt;,
&lt;a href=&quot;http://code.google.com/p/netcdf4-python/&quot;&gt;netcdf4-python&lt;/a&gt;, ...&lt;/li&gt;
&lt;li&gt;Matlab: &lt;code&gt;scipy.io.loadmat&lt;/code&gt;, &lt;code&gt;scipy.io.savemat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MatrixMarket: &lt;code&gt;scipy.io.mmread&lt;/code&gt;, &lt;code&gt;scipy.io.mmread&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... 如果有人使用，那么就可能有一个对应的Python库。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;练习：文本数据文件&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;写一个Python脚本从&lt;a href=&quot;http://scipy-%0Alectures.github.io/_downloads/populations.txt&quot;&gt;populations.txt&lt;/a&gt;加载数据，删除前五行和后五行。将这个小数据集存入&lt;code&gt;pop2.txt&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Numpy内部&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果你对Numpy的内部感兴趣, 有一个关于&lt;a href=&quot;http://scipy-lectures.github.io/advanced/advanced_numpy/index.html#advanced-numpy&quot;&gt;Advanced Numpy&lt;/a&gt;的很好的讨论。&lt;/p&gt;

&lt;h2&gt;1.3.5 一些练习&lt;/h2&gt;

&lt;h3&gt;1.3.5.1 数组操作&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;从2D数组（不需要显示的输入）:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[[1,  6, 11],
 [2,  7, 12],
 [3,  8, 13],
 [4,  9, 14],
 [5, 10, 15]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;并且生成一个第二和第四行的新数组。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;将数组a的每一列以元素的方式除以数组b (提示: &lt;code&gt;np.newaxis&lt;/code&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;难一点的题目：创建10 X 3的随机数数组 （在[0, 1]的范围内）。对于每一行，挑出最接近0.5的数。

&lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;abs&lt;/code&gt;和 &lt;code&gt;argsort&lt;/code&gt;找到每一行中最接近的列 &lt;code&gt;j&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用象征索引抽取数字。（提示：a[i,j]-数组 &lt;code&gt;i&lt;/code&gt; 必须包含 &lt;code&gt;j&lt;/code&gt; 中成分的对应行数）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;1.3.5.2 图片操作：给Lena加边框&lt;/h3&gt;

&lt;p&gt;让我们从著名的Lena图（http://www.cs.cmu.edu/~chuck/lennapg/） 上开始，用Numpy数组做一些操作。Scipy在&lt;code&gt;scipy.lena&lt;/code&gt;函数中提供了这个图的二维数组：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scipy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;misc&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;misc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：在旧版的scipy中，你会在 &lt;code&gt;scipy.lena()&lt;/code&gt;找到lena。&lt;/p&gt;

&lt;p&gt;这是一些通过我们的操作可以获得图片：使用不同的颜色地图，裁剪图片，改变图片的一部分。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/lenas.png&quot; alt=&quot;lenas&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;让我们用pylab的 &lt;code&gt;imshow&lt;/code&gt;函数显示这个图片。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pylab&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;misc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.image.AxesImage at 0x110f51ad0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_370_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lena然后以为色彩显示。要将她展示为灰色需要指定一个颜色地图。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.image.AxesImage at 0x110fb15d0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_372_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用一个更小的图片中心来创建数组：例如，从图像边缘删除30像素。要检查结果，用 &lt;code&gt;imshow&lt;/code&gt; 显示这个新数组。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;crop_lena&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;现在我们为Lena的脸加一个黑色项链形边框。要做到这一点，需要创建一个面具对应于需要变成黑色的像素。这个面具由如下条件定义 &lt;code&gt;(y-256)**2 +(x-256)**2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ogrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# x 和 y 像素索引&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;((512, 1), (1, 512))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;centerx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;centery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 图像中心&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;centery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;centerx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;230&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 圆形&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来我们为面具对应的图片像素赋值为0。语句非常简单并且直觉化：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lena&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.image.AxesImage at 0x113d33fd0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_379_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;接下来：将这个练习的所有命令复制到 &lt;code&gt;lena_locket.py&lt;/code&gt; 脚本中，并且在IPython中用 &lt;code&gt;%run
lena_locket.py&lt;/code&gt;执行这个脚本，将圆形改为椭圆。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;1.3.5.3 数据统计&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://scipy-lectures.github.io/_downloads/populations.txt&quot;&gt;populations.txt&lt;/a&gt;中的数据描述了野兔和猞猁（以及胡罗比）在加拿大北部过去十年的数量：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadtxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;data/populations.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hares&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lynxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;carrots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 技巧: 列到变量&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hares&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lynxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;carrots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Hare&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Lynx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Carrot&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.legend.Legend at 0x1135d9510&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;1.3NumPy_111_files/1.3NumPy_111_381_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;根据&lt;a href=&quot;http://scipy-lectures.github.io/_downloads/populations.txt&quot;&gt;populations.txt&lt;/a&gt;中的数据计算并打印...&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;每个物种在这个时间段内的数量平均数及标准差。&lt;/li&gt;
&lt;li&gt;每个物种在哪一年数量最多。&lt;/li&gt;
&lt;li&gt;每一年哪个物种数量最多。（提示：&lt;code&gt;np.array([&amp;#39;H&amp;#39;, &amp;#39;L&amp;#39;, &amp;#39;C&amp;#39;])&lt;/code&gt;的&lt;code&gt;argsort&lt;/code&gt; 和象征索引）&lt;/li&gt;
&lt;li&gt;哪一年数量超过50000。（提示：比较和 &lt;code&gt;np.any&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;每个物种有最少数量的两年。（提示： &lt;code&gt;argsort&lt;/code&gt;、象征索引）&lt;/li&gt;
&lt;li&gt;比较（作图）野兔和猞猁总量的变化（看一下 &lt;code&gt;help(np.gradient)&lt;/code&gt;）。看一下相关（见 &lt;code&gt;help(np.corrcoef)&lt;/code&gt;）。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;... 所有都不应该使用for循环。&lt;/p&gt;

&lt;p&gt;答案：&lt;a href=&quot;http://scipy-lectures.github.io/_downloads/2_2_data_statistics.py&quot;&gt;Python源文件&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;1.3.5.4 粗略积分估计&lt;/h3&gt;

&lt;p&gt;写一个函数  &lt;code&gt;f(a, b, c)&lt;/code&gt; 返回$a^b - c$。组成一个24x12x6数组其中包含它值在参数范围[0,1] x [0,1] x [0,1]。&lt;/p&gt;

&lt;p&gt;接近的3-D积分&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/math/7057c0b4df82c2659d776bcdc0eb1c9e16f61f9f.png&quot; alt=&quot;math&quot;&gt;&lt;/p&gt;

&lt;p&gt;在这个体积之上有相同的平数。准确的结果是&lt;img src=&quot;http://scipy-lectures.github.io/_images/math/13ff2c8691c09121c0bba41558b2ad22e55e077c.png&quot; alt=&quot;result&quot;&gt;...- 你的相对误差是多少？&lt;/p&gt;

&lt;p&gt;（技巧：使用元素级别的操作和广播。你可以用 &lt;code&gt;np.ogrid&lt;/code&gt; 获得在 &lt;code&gt;np.ogrid[0:1:20j]&lt;/code&gt; 范围内的数据点。）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;提醒&lt;/strong&gt;Python函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;some_result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;答案：&lt;a href=&quot;http://scipy-lectures.github.io/_downloads/2_3_crude_integration.py&quot;&gt;Python源文件&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;1.3.5.5 Mandelbrot集合&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/2_4_mandelbrot.png&quot; alt=&quot;mandelbrot&quot;&gt;&lt;/p&gt;

&lt;p&gt;写一个脚本计算Mandelbrot分形。Mandelbrot迭代&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;N_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;some_threshold&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;点（x, y）属于Mandelbrot集合，如果|c| &amp;lt; some_threshold。&lt;/p&gt;

&lt;p&gt;作如下计算：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;构建一个网格 c = x + 1j*y， 值在范围[-2, 1] x [-1.5, 1.5]&lt;/li&gt;
&lt;li&gt;进行迭代&lt;/li&gt;
&lt;li&gt;构建2-D布尔面具标识输入集合中的点&lt;/li&gt;
&lt;li&gt;用下列方法将结果保存到图片：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mandelbrot.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;答案：&lt;a href=&quot;http://scipy-lectures.github.io/_downloads/2_4_mandelbrot.py&quot;&gt;Python源文件&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;1.3.5.6 马尔科夫链&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/markov-chain.png&quot; alt=&quot;markov-chain&quot;&gt;&lt;/p&gt;

&lt;p&gt;马尔可夫链过渡矩阵P以及在状态p的概率分布：
1. &lt;code&gt;0 &amp;lt;= P[i,j] &amp;lt;= 1&lt;/code&gt;：从状态i变化到j的概率
2. 过度规则： $p&lt;em&gt;{new} = P^T p&lt;/em&gt;{old}$
3. &lt;code&gt;all(sum(P, axis=1) == 1)&lt;/code&gt;, &lt;code&gt;p.sum() == 1&lt;/code&gt;: 正态化&lt;/p&gt;

&lt;p&gt;写一个脚本产生五种状态，并且：
* 构建一个随机矩阵，正态化每一行，以便它是过度矩阵。
* 从一个随机（正态化）概率分布&lt;code&gt;p&lt;/code&gt;开始，并且进行50步=&amp;gt; &lt;code&gt;p_50&lt;/code&gt;
* 计算稳定分布：P.T的特征值为1的特征向量（在数字上最接近1）=&amp;gt; &lt;code&gt;p_stationary&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;记住正态化向量 - 我并没有...
* 检查一下 &lt;code&gt;p_50&lt;/code&gt; 和 &lt;code&gt;p_stationary&lt;/code&gt;是否等于公差1e-5&lt;/p&gt;

&lt;p&gt;工具箱：&lt;code&gt;np.random.rand&lt;/code&gt;、 &lt;code&gt;.dot()&lt;/code&gt;、&lt;code&gt;np.linalg.eig&lt;/code&gt;、reductions、&lt;code&gt;abs()&lt;/code&gt;、&lt;code&gt;argmin&lt;/code&gt;、compa
risons、&lt;code&gt;all&lt;/code&gt;、&lt;code&gt;np.linalg.norm&lt;/code&gt;等。&lt;/p&gt;

&lt;p&gt;答案：&lt;a href=&quot;http://scipy-lectures.github.io/_downloads/2_5_markov_chain.py&quot;&gt;Python源文件&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>1.2Python语言-Python科学讲座笔记</title>
   <link href="http://cloga.github.io/python_scientific_lecture_notes/2014/12/22/python_language"/>
   <updated>2014-12-22T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python_scientific_lecture_notes/2014/12/22/python_language</id>
   <content type="html">&lt;p&gt;Cloga：这份文档是euroscipy关于Python科学计算资源的一个教程。英文版地址为：&lt;a href=&quot;http://scipy-lectures.github.io/&quot;&gt;http://scipy-lectures.github.io/&lt;/a&gt;，是学习Python科学计算生态体系很好的资料，因此，我会陆续将它翻译为中文，相关Gitbub地址为：&lt;a href=&quot;https://github.com/cloga/scipy-lecture-notes_cn&quot;&gt;https://github.com/cloga/scipy-lecture-notes_cn&lt;/a&gt;，&lt;a href=&quot;http://cloga.info/python_scientific_lecture_notes/2014/12/14/python_scientific_lecture_notes_cn/&quot;&gt;完整的中文目录&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/cloga/scipy-lecture-notes_cn/blob/master/1.2Python%E8%AF%AD%E8%A8%80.ipynb&quot;&gt;本文的IPython版本&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;作者 Chris Burns, Christophe Combelles, Emmanuelle Gouillart, Gaël Varoquaux&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Python中的科学计算&lt;/strong&gt;
这里我们介绍Python语言。这里只会仅仅解决可以用于Numpy和Scipy的最低要求。想要更多的了解这门语言，请参考http://docs.python.o
rg/tutorial 这个非常好的教程。也可以借助专门的图书，比如：http://diveintopython.org/.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Python是一门&lt;strong&gt;编程语言&lt;/strong&gt;，与C、Fortran、BASIC和PHP等等类似。Python的一些特性如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一种&lt;em&gt;解释性&lt;/em&gt;（不是编译）语言。与C或者Fortran等不同，Python代码在执行前不会编译。另外，Python可以&lt;strong&gt;交互&lt;/strong&gt;使用：有许多的Python
解释器，命令和脚本可以在其中执行。&lt;/li&gt;
&lt;li&gt;在&lt;strong&gt;开源&lt;/strong&gt;证书下发布的免费软件：Python可以免费使用和分发，即使用于商用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多平台&lt;/strong&gt;：Python可以用于所有的主流操作系统，Windows、Linux/Unix、MacOS X, 甚至可能是你有手机操作系统等等。&lt;/li&gt;
&lt;li&gt;可读性很强的语言，有清晰不罗嗦的语法&lt;/li&gt;
&lt;li&gt;拥有大量高质量的包，可以应用于多种多样的应用，从网站框架到科学计算。&lt;/li&gt;
&lt;li&gt;非常简单的接口与其他语言交互，特别是C和C++&lt;/li&gt;
&lt;li&gt;稍后会介绍一些语言的其他特性。例如Python是面向对象的语言，包含动态类型（一个变量可以在程序过程中，可以包含不同的对象类型）。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python的特有特性的更多信息，请见：http://www.python.org/about/&lt;/p&gt;

&lt;h2&gt;1.2.1 第一步&lt;/h2&gt;

&lt;p&gt;启动&lt;strong&gt;IPython&lt;/strong&gt; Shell(一个增强的Python交互Shell)：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在Linux/Mac终端中输入“ipython”，或者在Windows cmd sheell，&lt;/li&gt;
&lt;li&gt;或者从菜单启动程序，即在&lt;a href=&quot;http://www.pythonxy.com/&quot;&gt;Python(x,y)&lt;/a&gt;或&lt;a href=&quot;http://www.enthought%0A.com/products/epd.php&quot;&gt;EPD&lt;/a&gt;，如果你已经安装这些Python科学套装之一。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你的电脑上还没有安装IPython，也可以选择其他Python shells，比如在终端中输入“Python”启动纯Python
shell，或者Idle解释器。但是，我们建议使用IPython Shell，因为它增强特性，特别是对于科学计算。&lt;/p&gt;

&lt;p&gt;如果你已经启动了解释器，输入&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;print &amp;quot;Hello, world!&amp;quot;

Hello, world!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来就会显示信息&amp;quot;Hello, world!&amp;quot;。你已经执行了你的第一条Python命令，恭喜！&lt;/p&gt;

&lt;p&gt;你自己开始吧，输入下列命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;hellohello&amp;#39;&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;hellohello&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面定义了&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;两个变量。注意这里在赋值前没有声明变量类型。相反，在C中，应该写为：
&lt;code&gt;C
int a=3;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;另外，变量的类型可以改变，在一个时间点它可以等于一个特定类型，在接下来的时间里，他可以等于另外的类型。&lt;em&gt;b&lt;/em&gt;首先等于整数，但是当它被赋值为&lt;em&gt;&amp;quot;hello&amp;quot;&lt;/em&gt;时他
变成等于字符。在Python中，整数的运算符（b＝2*a）原生支持的，一些字符上的操作符例如相加和相乘也是支持的，相当于串联和重复。&lt;/p&gt;

&lt;h2&gt;1.2.2 基础类型&lt;/h2&gt;

&lt;h3&gt;1.2.2.1 数值类型&lt;/h3&gt;

&lt;p&gt;Python支持如下的数值、标量类型：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;整型：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;浮点型：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;复数：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5j&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imag&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;complex&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;布尔：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因此，Python shell可以代替你的口袋计算器，因为基本的代数操作符 +、-、*、/、%（模）都已经原生实现了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;21.0&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;类型转化（投射）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：整数相除&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;技巧&lt;/strong&gt;：使用浮点：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你明确想要整除，请使用//：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Python3改变了除运算符行为。细节请看[python3porting](http://python3porting.com/preparing.html&lt;/p&gt;

&lt;h1&gt;use-instead-of-when-dividing-integers)网站.&lt;/h1&gt;

&lt;hr&gt;

&lt;h3&gt;1.2.2.2 容器&lt;/h3&gt;

&lt;p&gt;Python提供了许多有效的容器类型，其中存储了对象集合。&lt;/p&gt;

&lt;h4&gt;1.2.2.2.1 列表&lt;/h4&gt;

&lt;p&gt;列表是一个有序的对象集合，对象可以有多种类型。例如：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;索引：访问包含在列表中的单个对象：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用负索引，从结尾开始计数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意：索引从0开始&lt;/strong&gt;（和C中一样），而不是1（像在Fortran或Matlab）！&lt;/p&gt;

&lt;p&gt;切片：获得规律分布元素的子列表：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：L[start:stop]包含索引start&amp;lt;= i &amp;lt;
stop的元素（i的范围从start到stop-1）。因此，L[start:stop]包含（stop-start）个元素。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;切片语法&lt;/strong&gt;：&lt;code&gt;L[start:stop:stride]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;所有切片参数都是可选的：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;列表是可变对象，可以被改变：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;purple&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;purple&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;一个列表的元素可以有不同的类型：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于一个所有类型都相同的数值数据集合，使用Numpy模块提供的数组类型通常更有效。Numpy数组是包含固定大小项目的内存组块。使用Numpy数组，元素上的操作可
以非常快速，因为元素均匀分布在内存上并且更多的操作是通过特殊的C函数而不是Python循环。&lt;/p&gt;

&lt;p&gt;Python提供了一大组函数来修改或查询列表。这里是一些例子，更多内容，请见：http://docs.python.org/tutorial/datastruc
tures.html#more-on-lists&lt;/p&gt;

&lt;p&gt;添加和删除元素：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 删除并返回最后一个项目&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;purple&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 扩展列表L，原地&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;反转：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 原对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;串联和重复列表：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;排序：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 新对象&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 原对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;方法和面向对象编程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;符号r.method() (即 r.append(3) and L.pop())
是我们第一个关于面向对象编程的例子（OOP）。作为列表，对象r有可以以这种方式调用的方法函数。对于这篇教程不需要关于面向对象编程的更多知识，只需要理解这种符号。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;发现方法&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;提醒：在IPython中：tab完成 (按tab)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__add__&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__iadd__&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__setattr__&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__class__&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__imul__&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__setitem__&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__contains__&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__setslice__&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__delattr__&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__iter__&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__sizeof__&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__delitem__&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__le__&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__str__&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__delslice__&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__len__&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__subclasshook__&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__doc__&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__lt__&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__eq__&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__mul__&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__format__&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__ne__&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__ge__&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__new__&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__getattribute__&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__reduce__&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__getitem__&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__reduce_ex__&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__getslice__&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__repr__&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__gt__&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__reversed__&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__hash__&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__rmul__&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.2.2.2.2 字符&lt;/h4&gt;

&lt;p&gt;不同的字符语法（单引号、双引号或三个引号）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Hello, how are you?&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hi, what&amp;#39;s up&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&amp;#39;Hello,                 &lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;       how are you&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# 三个引号可以允许字符跨行&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Hi,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;what&amp;#39;s up?&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;Hi, what&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;ipython-input-58-dfe00f996c26&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;Hi, what&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;SyntaxError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invalid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;syntax&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果在字符中要是使用引号，那么应该嵌套使用，或者使用&amp;quot;\&amp;quot;进行转义，否则会报错。&lt;/p&gt;

&lt;p&gt;换行的符号为 \n，tab符号是\t。&lt;/p&gt;

&lt;p&gt;字符也是类似与列表的结合。因此，也可以使用相同的语法和规则索引和切片。&lt;/p&gt;

&lt;p&gt;索引：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;h&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（记住负索引从右侧开始计数。）&lt;/p&gt;

&lt;p&gt;切片：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;hello, world!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 第三到第六个（不包含）元素：元素3、4、5&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;lo,&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 语法：a[开始：结束：步幅]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;lo o&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 从开始到结尾，每隔3个字母&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;hl r!&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重音符号和特殊字符也可以被处理为Unicode字符（请见 http://docs.python.org/tutorial/introduction.html#unicode-strings）。&lt;/p&gt;

&lt;p&gt;字符是&lt;strong&gt;不可变&lt;/strong&gt;对象，不可能修改内容。不过可以从原始的字符中创建一个新的字符。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;a = &amp;quot;hello, world!&amp;quot;
a[2] = &amp;#39;z&amp;#39;
-----------------------------------------------------   ----------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-68-8f124c87c8cf&amp;gt; in &amp;lt;module&amp;gt;()
      1 a = &amp;quot;hello, world!&amp;quot;
----&amp;gt; 2 a[2] = &amp;#39;z&amp;#39;
TypeError: &amp;#39;str&amp;#39; object does not support item assignment
a.replace(&amp;#39;l&amp;#39;, &amp;#39;z&amp;#39;, 1)
&amp;#39;hezlo, world!&amp;#39;
a.replace(&amp;#39;l&amp;#39;, &amp;#39;z&amp;#39;)
&amp;#39;hezzo, worzd!&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;字符有许多有用的方法，比如上面的a.replace。回忆一下a.面向对象的符号，并且使用tab完成或者help(str)来搜索新的方法。and use tab
completion or&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;更多内容&lt;/strong&gt; Python提供了操作的字符的高级可能性，看一下模式或格式。感兴趣的读者请参考：http://docs.python.org/library/
stdtypes.html#string-methods 和 http://docs.python.org/library/string.html#new-
string-formatting。&lt;/p&gt;

&lt;p&gt;字符格式：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;#39;An integer: %i; a float: %f; another string: %s&amp;#39; % (1, 0.1, &amp;#39;string&amp;#39;)

&amp;#39;An integer: 1; a float: 0.100000; another string: string&amp;#39;

i = 102
filename = &amp;#39;processing_of_dataset_%d.txt&amp;#39; % i
filename

&amp;#39;processing_of_dataset_102.txt&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.2.2.2.3. Dictionaries&lt;/h4&gt;

&lt;p&gt;字典本质上是一个&lt;strong&gt;映射键值&lt;/strong&gt;的高效表格。它是一个&lt;strong&gt;无序&lt;/strong&gt;的容器&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tel = {&amp;#39;emmanuelle&amp;#39;: 5752, &amp;#39;sebastian&amp;#39;: 5578}
tel[&amp;#39;francis&amp;#39;] = 5915
tel

{&amp;#39;emmanuelle&amp;#39;: 5752, &amp;#39;francis&amp;#39;: 5915, &amp;#39;sebastian&amp;#39;: 5578}

tel[&amp;#39;sebastian&amp;#39;]

5578

tel.keys()

[&amp;#39;sebastian&amp;#39;, &amp;#39;francis&amp;#39;, &amp;#39;emmanuelle&amp;#39;]

tel.values()

[5578, 5915, 5752]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;它可以方便的以名字（日期的字符和名称等）存储和获取值。更多信息见
http://docs.python.org/tutorial/datastructures.html#dictionaries。&lt;/p&gt;

&lt;p&gt;一个字典的键（代表值）可以有不同的类型：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;d = {&amp;#39;a&amp;#39;:1, &amp;#39;b&amp;#39;:2, 3:&amp;#39;hello&amp;#39;}
d

{3: &amp;#39;hello&amp;#39;, &amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;: 2}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.2.2.2.4. More container types&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;元组&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;元组本质上是不可变列表。元组的元素用括号包起来，或者只是用逗号分割：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;t = 12345, 54321, &amp;#39;hello!&amp;#39;
t[0]

12345

t

(12345, 54321, &amp;#39;hello!&amp;#39;)

u = (0, 2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;集合&lt;/strong&gt;：无序，惟一项目：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;s = set((&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;a&amp;#39;))
s

{&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;}

s.difference((&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;))

{&amp;#39;c&amp;#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.2.2.3. 赋值运算&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.python.org/reference/simple_stmts.html#assignment-%0Astatements&quot;&gt;Python类库参考：&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;赋值语句被用于（重）绑定名称与值，以及修改可变对象的项目或属性。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;简单来说，它这样工作（简单赋值）：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;右侧表达式被评估，创建或获得产生的对象&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;左侧的名字被赋值或绑定到右侧的对象&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;需要注意的事情：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;单个对象可以有多个绑定的名称：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;a = [1, 2, 3]
b = a
a

[1, 2, 3]

b

[1, 2, 3]

a is b

True

b[1] = &amp;#39;hi!&amp;#39;
a

[1, &amp;#39;hi!&amp;#39;, 3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要在&lt;strong&gt;原地&lt;/strong&gt;改变列表，请使用索引或切片：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;a = [1, 2, 3]
a

[1, 2, 3]

a = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;] # 创建另一个对象
a

[&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]

id(a)

4394695640

a[:] = [1, 2, 3] # 在原地修改对象
a

[1, 2, 3]

id(a)

4394695640
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;与上一个id相同，你的可能有所不同...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;这里的关键观点是可变 vs. 不可变&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可变对象可以在原地修改&lt;/li&gt;
&lt;li&gt;不可变对象一旦被创建就不可修改&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;更多内容&lt;/strong&gt;在David M. Beazley的文章&lt;a href=&quot;http://www.informit.com/articles/art%0Aicle.aspx?p=453682&quot;&gt;Python中的类型和对象&lt;/a&gt;中也可以找到关于以上问题非常不错的详尽解释。&lt;/p&gt;

&lt;h2&gt;1.2.3 流程控制&lt;/h2&gt;

&lt;p&gt;控制代码执行顺序。&lt;/p&gt;

&lt;h3&gt;1.2.3.1 if/elif/else&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if 2**2 == 4:
    print &amp;#39;Obvious!&amp;#39;

Obvious!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;代码块用缩进限定&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;小技巧&lt;/strong&gt;：在你的Python解释器内输入下列行，并且注意保持缩进深度。IPython shell会在一行的 :
符号后自动增加缩进，如果要减少缩进，向左侧移动4个空格使用后退键。按两次回车键离开逻辑块。&lt;/p&gt;

&lt;hr&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;a = 10
if a == 1:
    print(1)
elif a == 2:
    print(2)
else:
    print(&amp;#39;A lot&amp;#39;)

A lot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在脚本中也是强制缩进的。作为练习，在condition.py脚本中以相同的缩进重新输入之前几行，并在IPython中用&lt;code&gt;run
condition.py&lt;/code&gt;执行脚本。&lt;/p&gt;

&lt;h3&gt;1.2.3.2 for/range&lt;/h3&gt;

&lt;p&gt;在索引上迭代：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;for i in range(4):
    print(i)

0
1
2
3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是最经常使用，也更易读的是在值上迭代：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;for word in (&amp;#39;cool&amp;#39;, &amp;#39;powerful&amp;#39;, &amp;#39;readable&amp;#39;):
    print(&amp;#39;Python is %s&amp;#39; % word)

Python is cool
Python is powerful
Python is readable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.2.3.3 while/break/continue&lt;/h3&gt;

&lt;p&gt;典型的C式While循环（Mandelbrot问题）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;z = 1 + 1j
while abs(z) &amp;lt; 100: 
    z = z**2 + 1
z

(-134+352j)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;更高级的功能&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;bread 跳出for/while循环：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;z = 1 + 1j
while abs(z) &amp;lt; 100:
    if z.imag == 0:
        break
    z = z**2 + 1
    print z

(1+2j)
(-2+4j)
(-11-16j)
(-134+352j)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;continue 继续下一个循环迭代：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;a = [1, 0, 2, 4]
for element in a:
    if element == 0:
        continue
    print 1. / element

1.0
0.5
0.25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.2.3.4 条件表达式&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;if [OBJECT]：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;评估为False：
    - 任何等于0的数字 (0、0.0、0+0j)
    - 空容器（列表、元组、集合、字典, ...）
    - False，None&lt;/p&gt;

&lt;p&gt;评估为True：
    - 任何其他的东西&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a == b：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;判断逻辑是否相等：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1 == 1

True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;a is b：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;测试同一性：两边是相同的对象：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1 is 1
True

a = 1
b = 1
a is b

True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;a in b：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对于任何集合b：b包含a&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;b = [1, 2, 3]
2 in b

True

5 in b

False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果b是字典，这个语法测试a是否是b的一个键。&lt;/p&gt;

&lt;h3&gt;1.2.3.5. 高级循环&lt;/h3&gt;

&lt;h4&gt;1.2.3.5.1 序列循环&lt;/h4&gt;

&lt;p&gt;你可以在任何序列上进行循环（字符、列表、字典的键，文件的行...）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vowels = &amp;#39;aeiouy&amp;#39;
for i in &amp;#39;powerful&amp;#39;:
    if i in vowels:
        print(i),

o e u

message = &amp;quot;Hello how are you?&amp;quot;
message.split() # 返回一个列表

[&amp;#39;Hello&amp;#39;, &amp;#39;how&amp;#39;, &amp;#39;are&amp;#39;, &amp;#39;you?&amp;#39;]

for word in message.split():
    print word

Hello
how
are
you?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;很少有语言（特别是科学计算语言）允许在整数或索引之外的循环。在Python中，可以在感兴趣的对象上循环，而不用担心你通常不关心的索引。这个功能通常用来让代码更易
读。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;：改变正在循环的序列是不安全的。&lt;/p&gt;

&lt;h4&gt;1.2.3.5.2 跟踪列举数&lt;/h4&gt;

&lt;p&gt;通常任务是在一个序列上循环，同时跟踪项目数。
    - 可以像上面，使用带有计数器的while循环。或者一个for循环：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;words = (&amp;#39;cool&amp;#39;, &amp;#39;powerful&amp;#39;, &amp;#39;readable&amp;#39;)
for i in range(0, len(words)):
    print i, words[i]

0 cool
1 powerful
2 readable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是，Python为这种情况提供了enumerate关键词：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;for index, item in enumerate(words):
    print index, item

0 cool
1 powerful
2 readable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.2.3.5.3 字典循环&lt;/h4&gt;

&lt;p&gt;使用&lt;strong&gt;iteritems&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;d = {&amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;:1.2, &amp;#39;c&amp;#39;:1j}
for key, val in d.iteritems():
    print(&amp;#39;Key: %s has value: %s&amp;#39; % (key, val))

Key: a has value: 1
Key: c has value: 1j
Key: b has value: 1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.2.3.5.4 列表理解&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[i**2 for i in range(4)]

[0, 1, 4, 9]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;练习&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用Wallis公式，计算π的小数&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/math/31913b3982be13ed2063b0ffccbcab9cf4931fdb.png&quot; alt=&quot;Wallis公式&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;1.2.4. 定义函数&lt;/h2&gt;

&lt;h3&gt;1.2.4.1 函数的定义&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def test():
    print(&amp;#39;in test function&amp;#39;)

test()

in test function
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：函数块必须像其他流程控制块一样缩进&lt;/p&gt;

&lt;h3&gt;1.2.4.2 返回语句&lt;/h3&gt;

&lt;p&gt;函数&lt;strong&gt;可以选择&lt;/strong&gt;返回值。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def disk_area(radius):
    return 3.14 * radius * radius

disk_area(1.5)

7.0649999999999995
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：默认函数返回&lt;code&gt;None&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：注意定义函数的语法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;def关键字：&lt;/li&gt;
&lt;li&gt;接下来是函数的名称，然后&lt;/li&gt;
&lt;li&gt;在冒号后是在括号中的函数的参数。&lt;/li&gt;
&lt;li&gt;函数体；&lt;/li&gt;
&lt;li&gt;以及可选返回值的返回对象&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;1.2.4.3 参数&lt;/h3&gt;

&lt;p&gt;必选参数（位置参数）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def double_it(x):
    return x * 2

double_it(3)

6

double_it()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)

&amp;lt;ipython-input-25-51cdedbb81b0&amp;gt; in &amp;lt;module&amp;gt;()
----&amp;gt; 1 double_it()

TypeError: double_it() takes exactly 1 argument (0 given)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可选参数（关键词和命名参数）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def double_it(x=2):
    return x * 2

double_it()

4

double_it(3)

6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关键词参数允许你设置特定默认值。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;警告：&lt;/strong&gt;默认值在函数定义时被评估，而不是在调用时。如果使用可变类型（即字典或列表）并在函数体内修改他们，这可能会产生问题，因为这个修改会在函数被引用的时候
一直持续存在。&lt;/p&gt;

&lt;p&gt;在关键词参数中使用不可变类型：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bigx = 10
def double_it(x=bigx):
    return x * 2
bigx = 1e9  # 现在真的非常大
double_it()

20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在关键词参数中使用可变类型（并且在函数体内修改它）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def add_to_dict(args={&amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;: 2}):
    for i in args.keys():
        args[i] += 1
    print args

add_to_dict

&amp;lt;function __main__.add_to_dict&amp;gt;

add_to_dict()

{&amp;#39;a&amp;#39;: 2, &amp;#39;b&amp;#39;: 3}

add_to_dict()

{&amp;#39;a&amp;#39;: 3, &amp;#39;b&amp;#39;: 4}

add_to_dict()

{&amp;#39;a&amp;#39;: 4, &amp;#39;b&amp;#39;: 5}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更复杂的例子，实现Python的切片：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def slicer(seq, start=None, stop=None, step=None):
    &amp;quot;&amp;quot;&amp;quot;Implement basic python slicing.&amp;quot;&amp;quot;&amp;quot;
    return seq[start:stop:step]

rhyme = &amp;#39;one fish, two fish, red fish, blue fish&amp;#39;.split()

rhyme

[&amp;#39;one&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;red&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;blue&amp;#39;, &amp;#39;fish&amp;#39;]

slicer(rhyme)

[&amp;#39;one&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;red&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;blue&amp;#39;, &amp;#39;fish&amp;#39;]

slicer(rhyme, step=2)

[&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;red&amp;#39;, &amp;#39;blue&amp;#39;]

slicer(rhyme, 1, step=2)

[&amp;#39;fish,&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;fish,&amp;#39;, &amp;#39;fish&amp;#39;]

slicer(rhyme, start=1, stop=4, step=2)

[&amp;#39;fish,&amp;#39;, &amp;#39;fish,&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关键词参数的顺序&lt;strong&gt;不&lt;/strong&gt;重要：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;slicer(rhyme, step=2, start=1, stop=4)

[&amp;#39;fish,&amp;#39;, &amp;#39;fish,&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是，最好是使用与函数定义相同的顺序。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;关键词参数&lt;/em&gt;是特别方便的功能，可以用可变数量的参数来定义一个函数，特别是当函数据绝大多数调用都会使用默认值时。&lt;/p&gt;

&lt;h3&gt;1.2.4.4 值传递&lt;/h3&gt;

&lt;p&gt;可以在一个函数内部改变变量的值吗？大多数语言（C、Java...）区分了“值传递“和”引用传递“。在Python中，没有严格的这种区分，并且视你的变量是否会修改
而有一些不同。幸运的是，这些情况存在明确的规则。&lt;/p&gt;

&lt;p&gt;函数的参数是对象的引用，传递的是值。当你像一个函数传递了一个变量，Python传递的是对象的引用，这个对象引用的变量（值）。而不是变量本身。&lt;/p&gt;

&lt;p&gt;如果&lt;strong&gt;值&lt;/strong&gt;传递给函数的值是不可变的，那么这个函数并不会改变调用者的变量。如果&lt;strong&gt;值&lt;/strong&gt;是可变的，那么函数将可能在原地修改调用者的变量。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def try_to_modify(x, y, z):
    x = 23
    y.append(42)
    z = [99] # 新引用
    print(x)
    print(y)
    print(z)

a = 77    # 不可变变量
b = [99]  # 可变变量
c = [28]
try_to_modify(a, b, c)

23
[99, 42]
[99]

print(a)

77

print(b)

[99, 42]

print(c)

[28]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数有名为&lt;em&gt;local namespace&lt;/em&gt;的本地变量表。&lt;/p&gt;

&lt;p&gt;变量X只存在于函数try&lt;em&gt;to&lt;/em&gt;modify内部。&lt;/p&gt;

&lt;h3&gt;1.2.4.5 全局变量&lt;/h3&gt;

&lt;p&gt;在函数外定义的变量可以在函数内引用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;x = 5
def addx(y):
    return x + y

addx(10)

15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是，这些全局变量不能在函数内修改，除非在函数内声明&lt;strong&gt;global&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;这样没用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def setx(y):
    x = y
    print(&amp;#39;x is %d&amp;#39; % x)

setx(10)

x is 10

x

5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样可以：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def setx(y):
    global x
    x = y
    print(&amp;#39;x is %d&amp;#39; % x)

setx(10)

x is 10

x

10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.2.4.6 可变数量参数&lt;/h3&gt;

&lt;p&gt;函数的特殊形式：
    - &lt;em&gt;args：封装成元组的任意数量的位置参数
    - *&lt;/em&gt;kwargs：封装成字典的任意数量的关键词参数&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def variable_args(*args, **kwargs):
    print &amp;#39;args is&amp;#39;, args
    print &amp;#39;kwargs is&amp;#39;, kwargs

variable_args(&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, x=1, y=2, z=3)

args is (&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;)
kwargs is {&amp;#39;y&amp;#39;: 2, &amp;#39;x&amp;#39;: 1, &amp;#39;z&amp;#39;: 3}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.2.4.7 Docstrings&lt;/h3&gt;

&lt;p&gt;关于函数作用及参数的文档。通常惯例：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def funcname(params):
    &amp;quot;&amp;quot;&amp;quot;Concise one-line sentence describing the function.
    Extended summary which can contain multiple paragraphs.
    &amp;quot;&amp;quot;&amp;quot;
    # 函数体
    pass

funcname?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;           &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;function&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;funcname&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xeaa0f0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;Interactive&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ipython&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Definition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;funcname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Docstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Concise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sentence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;describing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Extended&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paragraphs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;注 Docstring 指导&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;为了标准化，Docstring 惯例页面为Python Docstring相关的含义及惯例提供了文档。&lt;/p&gt;

&lt;p&gt;Numpy和Scipy模块也为科学计算函数定义了清晰的标准，你可能想要在自己的函数中去遵循，这个标准有参数部分，例子部分等。见http://projects.s
cipy.org/numpy/wiki/CodingStyleGuidelines#docstring-standard 及
http://projects.scipy.org/numpy/browser/trunk/doc/example.py#L37&lt;/p&gt;

&lt;h3&gt;1.2.4.8 函数作为对象&lt;/h3&gt;

&lt;p&gt;函数是一级对象，这意味着他们可以是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可以被赋值给变量&lt;/li&gt;
&lt;li&gt;列表的一个项目（或任何集合）&lt;/li&gt;
&lt;li&gt;&lt;p&gt;作为参数传递给另一个函数&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;va = variable_args

va(&amp;#39;three&amp;#39;, x=1, y=2)

args is (&amp;#39;three&amp;#39;,)
kwargs is {&amp;#39;y&amp;#39;: 2, &amp;#39;x&amp;#39;: 1}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;1.2.4.9 方法&lt;/h3&gt;

&lt;p&gt;方法是对象的函数。你已经在我们关于列表、字典和字符等...的例子上看到了。&lt;/p&gt;

&lt;h3&gt;1.2.4.10. 练习&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;练习：斐波那契数列&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;写一个函数来展示斐波那契数列的前n个项目，定义如下：
    - u&lt;em&gt;0 = 1; u&lt;/em&gt;1 = 1
    - u_(n+2) = u&lt;em&gt;(n+1) + u&lt;/em&gt;n&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;练习：快速排序&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;实现快速排序算法，定义来自wikipedia：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greater&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;array&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;less&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;append&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greater&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatenate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greater&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>1.1科学计算工具及流程-Python科学讲座笔记</title>
   <link href="http://cloga.github.io/python_scientific_lecture_notes/2014/12/15/Scientific_computing_with_tools_and_workflow"/>
   <updated>2014-12-15T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python_scientific_lecture_notes/2014/12/15/Scientific_computing_with_tools_and_workflow</id>
   <content type="html">&lt;p&gt;Cloga：这份文档是euroscipy关于Python科学计算资源的一个教程。英文版地址为：&lt;a href=&quot;http://scipy-lectures.github.io/&quot;&gt;http://scipy-lectures.github.io/&lt;/a&gt;，是学习Python科学计算生态体系很好的资料，因此，我会陆续将它翻译为中文，相关Gitbub地址为：&lt;a href=&quot;https://github.com/cloga/scipy-lecture-notes_cn&quot;&gt;https://github.com/cloga/scipy-lecture-notes_cn&lt;/a&gt;，&lt;a href=&quot;http://cloga.info/python_scientific_lecture_notes/2014/12/14/python_scientific_lecture_notes_cn/&quot;&gt;完整的中文目录&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/cloga/scipy-lecture-notes_cn/blob/master/1.1%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E5%B7%A5%E5%85%B7%E5%8F%8A%E6%B5%81%E7%A8%8B.ipynb&quot;&gt;本文的IPython版本&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;作者 : Fernando Perez, Emmanuelle Gouillart, Gaël Varoquaux, Valentin Haenel&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;1.1 为什么是Python？&lt;/h1&gt;

&lt;h2&gt;1.1.1 科学家的需求&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;获得数据（模拟，实验控制）&lt;/li&gt;
&lt;li&gt;操作及处理数据&lt;/li&gt;
&lt;li&gt;可视化结果... 理解我们在做什么！&lt;/li&gt;
&lt;li&gt;沟通结果：生成报告或出版物的图片，写报告&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;1.1.2 要求&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;对于经典的数学方法及基本的方法，有丰富的现成工具：我们不希望重新编写程序去画出曲线、傅立叶变换或者拟合算法。不要重复发明轮子！&lt;/li&gt;
&lt;li&gt;易于学习：计算机科学不是我们的工作也不是我们的教育背景。我们想要在几分钟内画出曲线，平滑一个信号或者做傅立叶变换，&lt;/li&gt;
&lt;li&gt;可以方便的与合作者、学生、客户进行交流，代码可以存在于实验室或公司里面：代码的可读性应该像书一样。因此，这种语言应该包含尽可能少的语法符号或者不必要的常规规
定，使来自数学或科学领域读者愉悦的理解这些代码。&lt;/li&gt;
&lt;li&gt;语言高效，执行快...但是不需要是非常快的代码，因为如果我们花费了太多的时间来写代码，非常快的代码也是无用的。&lt;/li&gt;
&lt;li&gt;一个单一的语言/环境做所有事，如果可能的话，避免每个新问题都要学习新软件&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;1.1.3 现有的解决方案&lt;/h2&gt;

&lt;p&gt;科学家用哪种解决方案进行工作？&lt;/p&gt;

&lt;h3&gt;编译语言：C、C++、Fortran等。&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;非常快。极度优化的编译器。对于大量的计算来说，很难比这些语言的性能更好。&lt;/li&gt;
&lt;li&gt;一些非常优化的科学计算包。比如：BLAS（向量/矩阵操作）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不足：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用起来令人痛苦：开发过程中没有任何互动，强制编译步骤，啰嗦的语法（&amp;amp;, ::, }}, ;
等），手动内存管理（在C中非常棘手）。对于非计算机学家他们是&lt;strong&gt;艰深的语言&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;脚本语言：Matlab&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;对不同的领域的多种算法都有非常的类库。执行很快，因为这些类库通常使用编译语言写的。&lt;/li&gt;
&lt;li&gt;友好的开发环境：完善的、组织良好的帮助，整合的编辑器等&lt;/li&gt;
&lt;li&gt;有商业支持&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不足：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;基础语言非常欠缺，会限制高级用户&lt;/li&gt;
&lt;li&gt;不是免费的&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;其他脚本语言：Scilab、Octave、Igor、R、IDL等。&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;开源、免费，或者至少比Matlba便宜。&lt;/li&gt;
&lt;li&gt;一些功能非常高级（R的统计，Igor的图形等。）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不足：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;比Matlab更少的可用算法，语言也并不更高级&lt;/li&gt;
&lt;li&gt;一些软件更专注于一个领域。比如，Gnuplot或xmgrace画曲线。这些程序非常强大，但是他们只限定于一个单一用途，比如作图。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;那Python呢？&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;优势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;非常丰富的科学计算包（尽管比Matlab少一些）&lt;/li&gt;
&lt;li&gt;精心设计的语言，允许写出可读性非常好并且结构良好的代码：我们“按照我们所想去写代码”。&lt;/li&gt;
&lt;li&gt;对于科学计算外的其他任务也有许多类库（网站服务器管理，串口接收等等。）&lt;/li&gt;
&lt;li&gt;免费的开源软件，广泛传播，有一个充满活力的社区。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不足：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不太友好的开发环境，比如与Matlab相比。（更加极客向）。&lt;/li&gt;
&lt;li&gt;并不是在其他专业软件或工具箱中可以找到算法都可以找到&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;1.2 Python科学计算的构成&lt;/h1&gt;

&lt;p&gt;与Matlba，Scilab或者R不同，Python并没有预先绑定的一组科学计算模块。下面是可以组合起来获得科学计算环境的基础的组件。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;，通用的现代计算语言&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python语言：数据类型（字符string，整型int），流程控制，数据集合（列表list，字典dict），模式等等。&lt;/li&gt;
&lt;li&gt;标准库及模块&lt;/li&gt;
&lt;li&gt;用Pyhon写的大量专业模块及应用：网络协议、网站框架等...以及科学计算。&lt;/li&gt;
&lt;li&gt;开发工具（自动测试，文档生成）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;IPython&lt;/strong&gt;, 高级的&lt;strong&gt;Python Shell&lt;/strong&gt; &lt;a href=&quot;http://ipython.org/&quot;&gt;http://ipython.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/snapshot_ipython.png&quot; alt=&quot;ipython&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Numpy&lt;/strong&gt; :
提供了强大数值数组对象以及程序去操作它们。&lt;a href=&quot;http://www.numpy.org/&quot;&gt;http://www.numpy.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scipy&lt;/strong&gt; : 高级的数据处理程序。优化、回归插值等&lt;a href=&quot;http://www.scipy.org/&quot;&gt;http://www.scipy.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Matplotlib&lt;/strong&gt; : 2D可视化，“出版级”的图表&lt;a href=&quot;http://mat%0Aplotlib.sourceforge.net/&quot;&gt;http://matplotlib.sourceforge.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/random_c.jpg&quot; alt=&quot;Matplotlib&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mayavi&lt;/strong&gt; : 3D可视化&lt;a href=&quot;http://code.ent%0Ahought.com/projects/mayavi/&quot;&gt;http://code.enthought.com/projects/mayavi/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://scipy-lectures.github.io/_images/example_surface_from_irregular_data.jpg&quot; alt=&quot;Mayavi&quot;&gt;&lt;/p&gt;

&lt;h1&gt;1.3 交互工作流：IPython和文本编辑器&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;测试和理解算法的交互工作&lt;/strong&gt;：在这个部分我们描述一下用&lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt;的交互工作流来方便的研究和理解算法。&lt;/p&gt;

&lt;p&gt;Python是一门通用语言。与其他的通用语言一样，没有一个绝对权威的工作环境，也不止一种方法使用它。尽管这对新人来说不太好找到适合自己的方式，但是，这使得Pyt
hon被用于在网站服务器或嵌入设备中编写程序。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;本部分的参考文档&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IPython用户手册&lt;/strong&gt;：&lt;a href=&quot;http://ipython.org/ipython-doc/dev/index.html&quot;&gt;http://ipython.org/ipython-
doc/dev/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;1.3.1 命令行交互&lt;/h2&gt;

&lt;p&gt;启动ipython:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在对象后使用？运算符获得帮助:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;builtin_function_or_method&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builtin_function_or_method&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builtin&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Docstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Prints&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inserted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appended&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;1.3.2 在编辑器中详尽描述算法&lt;/h2&gt;

&lt;p&gt;在文本编辑器中，创建一个my_file.py文件。在EPD（&lt;a href=&quot;https://www.enthou%0Aght.com/products/epd/&quot;&gt;Enthought Python Distribution&lt;/a&gt;）中，你可以从开始按钮使用&lt;em&gt;Scite&lt;/em&gt;。在&lt;a href=&quot;https://code.google.co%0Am/p/pythonxy/&quot;&gt;Python(x,y)&lt;/a&gt;中, 你可以使用Spyder。在Ubuntu中, 如果你还没有最喜欢的编辑器，我们建议你安装&lt;a href=&quot;http://sourceforge.net/projects/spe/&quot;&gt;Stani’s Python
editor&lt;/a&gt;。在这个文件中，输入如下行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在，你可以在IPython中运行它，并研究产生的变量：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;%whos
Variable   Type    Data/Info
----------------------------
s          str     Hello world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;从脚本到函数&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;尽管仅使用脚本工作很诱人，即一个满是一个接一个命令的文件，但是要有计划的逐渐从脚本进化到一组函数：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;脚本不可复用，函数可复用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以函数的角度思考，有助于将问题拆分为小代码块。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;1.3.3 IPython提示与技巧&lt;/h2&gt;

&lt;p&gt;IPython用户手册包含关于使用IPython的大量信息，但是，为了帮你你更快的入门，这里快速介绍三个有用的功能：&lt;em&gt;历史&lt;/em&gt;，&lt;em&gt;魔法函数&lt;/em&gt;，&lt;em&gt;别称&lt;/em&gt;和&lt;em&gt;tab完成&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;与Unix Shell相似，IPython支持命令历史。按上下在之前输入的命令间切换：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IPython通过在命令前加&lt;em&gt;%&lt;/em&gt;字符的前缀，支持所谓魔法函数。例如，前面部分的函数&lt;em&gt;run&lt;/em&gt;和&lt;em&gt;whos&lt;/em&gt;都是魔法函数。请注意&lt;em&gt;automagic&lt;/em&gt;设置默认是
启用，允许你忽略前面的&lt;em&gt;%&lt;/em&gt;。因此，你可以只输入魔法函数仍然是有效的。&lt;/p&gt;

&lt;p&gt;其他有用的魔法函数：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;%cd&lt;/strong&gt; 改变当前目录&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cloga&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Documents&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;%timeit&lt;/strong&gt; 允许你使用来自标准库中的timeit模块来记录执行短代码端的运行时间&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10000000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;26.7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;%cpaste&lt;/strong&gt; 允许你粘贴代码，特别是来自网站的代码，前面带有标准的Python提示符 (即 &amp;gt;&amp;gt;&amp;gt;) 或ipython提示符的代码(即 in
[3])：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpaste&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Pasting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enter&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ctrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10000000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;85.9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpaste&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Pasting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enter&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ctrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10000000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;%debug&lt;/strong&gt; 允许你进入事后除错。也就是说，如果你想要运行的代码抛出了一个异常，使用&lt;strong&gt;%debug&lt;/strong&gt;将在抛出异常的位置进入排错程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;ipython-input-6-12fd421b5f28&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;
  &lt;span class=&quot;ne&quot;&gt;SyntaxError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invalid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;syntax&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;esc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anaconda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;python2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPython&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compilerop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ast_parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
       &lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;         &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;built&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  ---&amp;gt; 87         return compile(source, filename, symbol, self.flags |&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;PyCF_ONLY_AST, 1)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;88&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  ipdb&amp;gt;locals()&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {’source’: u’x === 10&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;’, ’symbol’: ’exec’, ’self’:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  &amp;lt;IPython.core.compilerop.CachingCompiler instance at 0x2ad8ef0&amp;gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  ’filename’: ’&amp;lt;ipython-input-6-12fd421b5f28&amp;gt;’}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IPython help&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内置的IPython手册可以通过&lt;em&gt;%quickref&lt;/em&gt;魔法函数进入。&lt;/li&gt;
&lt;li&gt;输入&lt;em&gt;%magic&lt;/em&gt;会显示所有可用魔法函数的列表。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;而且IPython提供了大量的&lt;em&gt;别称&lt;/em&gt;来模拟常见的UNIX命令行工具比如&lt;em&gt;ls&lt;/em&gt;等于list files，&lt;em&gt;cp&lt;/em&gt;等于copy
files以及&lt;em&gt;rm&lt;/em&gt;等于remove files。输入&lt;em&gt;alias&lt;/em&gt;可以显示所有的别称的列表：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;alias&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Total&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aliases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;cp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;cp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ldir&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ls -F -G -l %l | grep /$&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lf&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ls -F -l -G %l | grep ^-&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lk&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ls -F -l -G %l | grep ^l&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ll&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ls -F -l -G&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ls&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ls -F -G&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ls -F -l -G %l | grep ^-..x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mkdir&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;mkdir&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;mv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;rm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;rm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;rmdir&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;rmdir&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后，提一下&lt;em&gt;tab完成&lt;/em&gt;功能，我们从IPython手册引用它的描述：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tab completion, especially for attributes, is a convenient way to explore the
structure of any object you’re dealing with. Simply type object_name.&lt;TAB&gt; to
view the object’s attributes. Besides Python objects and keywords, tab
completion also works on file and directory names.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit_length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conjugate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;denominator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imag&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit_length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;denominator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conjugate&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imag&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;real&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Python科学讲座笔记目录</title>
   <link href="http://cloga.github.io/python_scientific_lecture_notes/2014/12/14/python_scientific_lecture_notes_cn"/>
   <updated>2014-12-14T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python_scientific_lecture_notes/2014/12/14/python_scientific_lecture_notes_cn</id>
   <content type="html">&lt;p&gt;Cloga：这份文档是euroscipy关于Python科学计算资源的一个教程。英文版地址为：&lt;a href=&quot;http://scipy-lectures.github.io/&quot;&gt;http://scipy-lectures.github.io/&lt;/a&gt;，是学习Python科学计算生态体系很好的资料，因此，我会陆续将它翻译为中文，相关Gitbub地址为：&lt;a href=&quot;https://github.com/cloga/scipy-lecture-notes_cn&quot;&gt;https://github.com/cloga/scipy-lecture-notes_cn&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;这份文档是关于Python科学生态体系的教学资料，关于Python科学计算的核心工具及技术的快速入门。每章包含1到2小时的课程，专业难度从新手到专家不断提升。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Python科学计算入门

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://cloga.info/python_scientific_lecture_notes/2014/12/15/Scientific_computing_with_tools_and_workflow/&quot;&gt;科学计算工具及流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python语言&lt;/li&gt;
&lt;li&gt;NumPy：创建和操作数值数据&lt;/li&gt;
&lt;li&gt;Matplotlib：作图&lt;/li&gt;
&lt;li&gt;Scipy：高级科学计算&lt;/li&gt;
&lt;li&gt;获取帮助及寻找文档&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;高级话题

&lt;ol&gt;
&lt;li&gt;Python高级功能（Constructs）&lt;/li&gt;
&lt;li&gt;高级Numpy&lt;/li&gt;
&lt;li&gt;代码除错&lt;/li&gt;
&lt;li&gt;代码优化&lt;/li&gt;
&lt;li&gt;SciPy中稀疏矩阵&lt;/li&gt;
&lt;li&gt;使用Numpy和Scipy进行图像操作及处理&lt;/li&gt;
&lt;li&gt;数学优化：找到函数的最优解&lt;/li&gt;
&lt;li&gt;与C进行交互&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;包与应用Packages and applications

&lt;ol&gt;
&lt;li&gt;Sympy：Python中的符号数学&lt;/li&gt;
&lt;li&gt;Scikit-image：图像处理&lt;/li&gt;
&lt;li&gt;Traits：创建交互对话&lt;/li&gt;
&lt;li&gt;使用Mayavi进行3D作图&lt;/li&gt;
&lt;li&gt;scikit-learn：Python中的机器学习&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Tag Manger的几个应用实例</title>
   <link href="http://cloga.github.io/google%20tag%20manager/2014/12/13/GTM_use_case"/>
   <updated>2014-12-13T00:00:00+08:00</updated>
   <id>http://cloga.github.io/google%20tag%20manager/2014/12/13/GTM_use_case</id>
   <content type="html">&lt;h1&gt;Google Tag Manager简介&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.google.com.hk/tagmanager/&quot;&gt;Google Tag Manager&lt;/a&gt;是Google提供的一个代码管理工具，准确的说其实在页面上提供了一个容器，在这个容器中可以放置任意的HTML及JS代码。&lt;/p&gt;

&lt;p&gt;可跟踪可量化是Digital Marketing的优势之一，随着而来的问题是需要在很多不同的页面上放置不同Vendor提供的监测代码，网站上要添加网站分析代码，转化页面需要添加Adwords转化代码或其他的Ad Network的转化代码，不同的代码有效期也可能不一致。代码管理工具应运而生，通过代码管理工具，网站分析师或者Digital营销人员可以自己管理页面上的代码，而不用每次都“劳烦”网站管理员。通过代码管理器可以有效的保证监测代码的一致性，也加快了响应速度。&lt;/p&gt;

&lt;p&gt;其实Google在这个领域也只是一个追随者，凭借免费及巨大的用户规模而使Google Tag Manager更广泛的被大家所了解。简单做一下市场调查的话，会发现市场上其实有许多类似的产品：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dtm.adobe.com/&quot;&gt;Dynamic Tag Management&lt;/a&gt;：Adobe的代码管理器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.signal.co/products/tag/&quot;&gt;Universal Tag Management System&lt;/a&gt;：Signal的产品&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.qubitproducts.com/tag-management&quot;&gt;Open Tag&lt;/a&gt;：Qubit的代码管理器，应该是这个领域里面比较早的产品，同时他们还有A/B Test的产品&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://web.tagmanager.cn/&quot;&gt;代码管家&lt;/a&gt;：本地化的代码管理工具&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Google Tag Manager的组成元素&lt;/h1&gt;

&lt;p&gt;GTM在近期更新了UI 2.0，这里的名称以2.0的为准。&lt;/p&gt;

&lt;h4&gt;Account（账户）&lt;/h4&gt;

&lt;p&gt;一个GTM账号可以创建多个容器。&lt;/p&gt;

&lt;h4&gt;Container（容器）&lt;/h4&gt;

&lt;p&gt;每个容器对应于一个网站，一个容器对应一段GTM的代码。一个容器中可以包含若干代码。&lt;/p&gt;

&lt;h4&gt;Tag（代码）&lt;/h4&gt;

&lt;p&gt;一个代码对应于一种监测代码。代码比如指定在特定的条件下（触发器）触发。&lt;/p&gt;

&lt;h4&gt;Trigger | Rule（触发器）&lt;/h4&gt;

&lt;p&gt;触发器是代码的触发条件。触发器可以设定多种条件，比如URL，自定义事件，Dom元素等&lt;/p&gt;

&lt;h4&gt;Variable | Macro（变量）&lt;/h4&gt;

&lt;p&gt;GTM可以从Dom元素，URL及数据层获取一些变量，并将这些变量作为参数在Tag中使用&lt;/p&gt;

&lt;h1&gt;Google Tag Manager的真实应用实例&lt;/h1&gt;

&lt;h4&gt;UA基本监测代码的部署&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;代码
基本的UA Pageview代码，在代码的类型中选择UA，填写对应的Tracking ID即可&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;触发器
默认提供的所有页面触发器，其本质是一个可以匹配所有URL的触发器，.*正则式是匹配所有字符的意思&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;监测点击事件&lt;/h4&gt;

&lt;p&gt;GTM内部会对页面的点击事件进行监听，我们可以在触发器中使用这些事件来达到监测特定点击事件的目的。&lt;/p&gt;

&lt;p&gt;下面用一个实例在具体说明一下，如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/reg_login.png&quot; alt=&quot;reg_login.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在这个页面的右上有登陆和注册的链接，如果想要监测注册链接，在没有使用GTM时，我们需要改动对应页面的元素，在上面添加onclick事件，并在其中调用对应的GA方法。如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/manul_onclick.png&quot; alt=&quot;manul_onclick.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;使用了GTM之后，我们不需要技术同事在原始的HTML页面上添加对应的代码，具体的做法如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;代码
首先要新加一个代码，监听所有的点击事件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/click_listener.png&quot; alt=&quot;click_listener.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;触发条件为所有页面&lt;/p&gt;

&lt;p&gt;接下来要定义点击了这个链接应该触发的GA代码，我在这里选择了事件监测。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/event_config.png&quot; alt=&quot;event_config.png&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;触发器
先来捕捉右上注册点击事件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/reg_right_top_trigger.png&quot; alt=&quot;reg_right_top_trigger.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;第一个条件是触发了Click事件，第二个条件是这个事件发生的Dom元素的类包含navi_login_name navi_hover_bg。结合起来的触发条件就是在在类包含navi_login_name navi_hover_bg的元素上发生Click事件。&lt;/p&gt;

&lt;p&gt;GTM提供了许多的element的属性可以作为条件，比如id，url，text，classes都可以作为触发器的条件，也可以多个属性结合在一起。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/element_conditions.png&quot; alt=&quot;element_conditions.png&quot;&gt;&lt;/p&gt;

&lt;h1&gt;Google Tag Manager测试&lt;/h1&gt;

&lt;p&gt;加好了代码之后接下来就要进行测试并发布，GTM提供了完整的测试和发布流程，首先点击preview&amp;gt;debug，进入测试模式&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/gtm_debug.png&quot; alt=&quot;gtm_debug.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;进入debug模式后在页面下方会出现GTM的debug窗口，当前页面上触发的代码都有提示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/gtm_debug1.png&quot; alt=&quot;gtm_debug1&quot;&gt;&lt;/p&gt;

&lt;p&gt;如图所示，基本的GA代码已经触发了。&lt;/p&gt;

&lt;p&gt;点击一下右上的注册链接，看一下效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/gtm_debug2.png&quot; alt=&quot;gtm_debug2&quot;&gt;&lt;/p&gt;

&lt;p&gt;可以看到我们新建的右上注册butoon点击已经触发了&lt;/p&gt;

&lt;p&gt;在选中这个点击事件时，点击一下debug窗口中的宏看一下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/gtm_debug3.png&quot; alt=&quot;gtm_debug3&quot;&gt;&lt;/p&gt;

&lt;p&gt;啊哈，里面显示了一个事件对应的所有属性，通过这个页面可以很方便的了解定位这个事件的参数。&lt;/p&gt;

&lt;h1&gt;Google Tag Manager发布&lt;/h1&gt;

&lt;p&gt;最后，不要忘记发布当前的代码。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>在Heroku上搭建简单的Python Web 应用</title>
   <link href="http://cloga.github.io/python/2014/10/21/build_a_simple_python_app_on_heroku"/>
   <updated>2014-10-21T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/10/21/build_a_simple_python_app_on_heroku</id>
   <content type="html">&lt;p&gt;开发一个小应用放在互联网上给大家使用是一件成就感很高的事情，不过支持Python的免费空间不是很多，虽然GAE支持Python，不过由于众所周知的原因，在国内是很难打开GAE，这篇文章为大家介绍一下&lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;，heroku是支持Python在数据量不大的情况下是免费。&lt;/p&gt;

&lt;h1&gt;涉及到的工具&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot;&gt;git&lt;/a&gt;：分布式版本管理工具，这里推荐大家看一下&lt;a href=&quot;(http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)&quot;&gt;廖雪峰的GIT教程&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.virtualenv.org/en/latest/&quot;&gt;Virtualenv&lt;/a&gt;，Python的虚拟环境模块&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://virtualenvwrapper.readthedocs.org/en/latest/&quot;&gt;Virtualenvwrapper&lt;/a&gt;，在Virtualenv之上封装了一些更简便的方法&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;，Python的web框架&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/getting-started-with-python#set-up&quot;&gt;Heroku Toolbelt&lt;/a&gt;，Heroku提供的命令行工具&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;搭建本地的环境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;安装Virtualenv和Virtualenvwrapper&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo pip install Virtualenv
sudo pip install Virtualenvwrapper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;安装之后需要在.bash_profile中添加如下两行代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;export WORKON_HOME=$HOME/.virtualenvs
source /Library/Frameworks/Python.framework/Versions/2.7/bin/virtualenvwrapper.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里source的路径可以通过：&lt;code&gt;which virtualenvwrapper.sh&lt;/code&gt;来确定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建一个叫做toyapp的文件夹，用于存放这个项目相关的文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入toyapp，初始化一个git仓库&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd toyapp
git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;用Virtualenvwrapper创建一个名为toyapp虚拟环境&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mkvirtualenv toyapp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建一个虚拟环境好处在于：每个App都有其依赖的特定版本Python模块，不同版本的模块可能导致App无法运行，而在本地的Python主环境中只能安装一个版本的模块，并且不同的App也并不会需要安装主环境中的所有模块。&lt;/p&gt;

&lt;p&gt;通过虚拟环境，我们可以为不同的环境安装不同版本的模块，同时也可以为App只安装需要必须模块的纯净环境。&lt;/p&gt;

&lt;p&gt;通过mkvirtualenv命令创建虚拟环境后会默认进行这个虚拟环境&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过&lt;a href=&quot;http://virtualenvwrapper.readthedocs.org/en/latest/scripts.html#scripts-postactivate&quot;&gt;postactivate&lt;/a&gt;文件添加一些进入虚拟环境的初始命令&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;postactivate中的变量可以在运行workon(virtualenvwrapper提供的切换虚拟环境命令)后运行，比如，对于我们的项目，我们可以在postactivate添加cd命令，这样当我们切换到虚拟就可以进入到项目的目录中&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vi $VIRTUAL_ENV/bin/postactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在虚拟环境中运行上面的命令，就可以编辑postactivate文件，在vim编辑器中，英文模式下输入i进入插入模式，添加cd 项目的路径，比如cd /Users/cloga/Documents/clogatoyapp，添加完毕后，按ESC键退出插入模式，英文模式下输入:wq保存修改并退出vim&lt;/p&gt;

&lt;p&gt;用deactivate命令退出虚拟环境，再用workon toyapp命令进入虚拟环境，这时你会发现目录也会自动进入到项目的路径&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果要删除一个虚拟环境，需要使用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;deactivate
rmvirtualenv 虚拟环境
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是这个命令不会删除安装的模块，如果要删除所有按照的模块需要使用&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rm -r 虚拟环境的文件夹
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如对于我的情况，需要使用&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rm -r /Users/cloga/.virtualenvs/toyapp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;创建一个简单的Flask项目&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;安装Flask，并把当前环境中依赖的python模块输入到requirements.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pip install flask
pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;requirements.txt里面记录了当前环境中安装的各种模块及其对应版本，当上传到Heroku时，Heroku会按照这个文件安装对应的模块，如果以后有新增的模块，也需要及时通过pip freeze命令将模块版本信息添加到这个文件中&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;创建app.py，并在其中添加如下代码&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在terminal中运行 python app.py，这样一个最简单的Flask web app就开始运行了，访问http://localhost:5000/试一下吧&lt;/p&gt;

&lt;p&gt;如果要关闭服务器，按CTRL+C&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;简单解释一下app.py中的代码作用

&lt;ol&gt;
&lt;li&gt;首先，引入了Flask类&lt;/li&gt;
&lt;li&gt;接下来创建了一个Flask类的实例。参数是这个模块或包的名称。当将app.py直接运行时_&lt;em&gt;name\&lt;/em&gt;_等于__main__，如果将app作为一个模块引用则等于引用时为app指定的名字。Flask需要这个名字来了解去哪里查找模板，静态文件等等&lt;/li&gt;
&lt;li&gt;用route修饰器来告诉Flask哪些URL应该触发下面方法&lt;/li&gt;
&lt;li&gt;定义一个hello_world方法，当方法运行时返回‘Hello World!’字符串&lt;/li&gt;
&lt;li&gt;最后是一个Python中很常见的用法，如果这个脚本文件是在python解释器直接运行则运行app()&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以简单来说，app.py的作用就是当有人访问/页面时返回‘Hello World!’字符串&lt;/p&gt;

&lt;h1&gt;将项目部署到Heroku&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;注册&lt;a href=&quot;https://www.heroku.com/&quot;&gt;Herok账号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;免费的Heroku支持一个Dynos和10K以下记录的PgSQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;下载并安装Heroku &lt;a href=&quot;https://toolbelt.heroku.com/&quot;&gt;Toolbelt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Toolbelt提供了Heroku的命令行工具&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;定义 Profile&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;touch Procfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在其中输入以下语句&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;web:gunicorn app:app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Profile是一个在应用根目录的文本文件，用于声明用于启动应用的语句&lt;/p&gt;

&lt;p&gt;上面的一行语句生命了一个单一的进程类型：web以及运行它需要的语句。Web在这里很重要，它表明这个进程类型将隶属于Heroku的HTTP路由栈，并且在部署时接受web流量&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装gunicoin，并将版本信息计入requirements.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pip install gunicorn
pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;登陆Heroku&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;heroku login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入用户名和密码&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在Heroku上创建一个App&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;heroku create toyapp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;将本地的App推送到Heroku上&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add -A
git commot -m &amp;#39;init&amp;#39;
git push heroku master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;你也可以为这个git库同时绑定一个github仓库&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;假设你创建了一个名字为test的github仓库，那么你可以通过下面的代码将本地的代码库与远程的Github库关联&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git remote add origin https://github.com/cloga/test.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过&lt;code&gt;git push orgin master&lt;/code&gt;，就可以将本地的代码库推送到github。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;enjoy你的第一个web app吧&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;heroku open
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS:我在Heroku上放了两个小项目：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://app.cloga.info/&quot;&gt;生成页面标签云&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://app.cloga.info/ca&quot;&gt;对应分析&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>使用Python获取GA数据</title>
   <link href="http://cloga.github.io/python/2014/10/12/retriveing_ga_data_with_python"/>
   <updated>2014-10-12T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/10/12/retriveing_ga_data_with_python</id>
   <content type="html">&lt;h1&gt;开通GA API访问权限&lt;/h1&gt;

&lt;p&gt;首先要为你的google账号开通GA API的访问权限，请保证这个账号同时也有GA账号的访问权限，访问https://console.developers.google.com&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;新建一个项目&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/creatproject.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;使用现有的项目也是可以的，点击项目名称，进入项目中，我这里使用的项目是Cloga_GA&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;开启GA API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;点击右侧的APIS，在其中找到Analytics API，点击off开启GA API&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/enableapi.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;获取Client ID和Client Secret&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;点击Credentials&amp;gt;creat new client ID，有三种类型可以选择，这里我们选择installed application，记下其中的CLIENT ID和CLIENT SECRET&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/Clientid.png&quot; alt=&quot;png&quot;&gt;
&lt;img src=&quot;http://cloga.info/files/Clienttype.png&quot; alt=&quot;png&quot;&gt;
&lt;img src=&quot;http://cloga.info/files/secret.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;到这里GA的API就开通了。&lt;/p&gt;

&lt;h1&gt;找到想要查询数据的view id&lt;/h1&gt;

&lt;p&gt;在查询GA数据时需要指定对应的view id。对于GA来说每个跟踪代码（UA-XXX）对应的是property，可以理解为一个收集到数据集，在这个数据集上可以做一些过滤，重写等操作，操作后产生的就是一个view，因此，view是一个报告集。&lt;/p&gt;

&lt;p&gt;登陆GA账号，点击admin&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/admin.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;点击view setting找到对应的view id&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cloga.info/files/viewid.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;h1&gt;安装需要的module&lt;/h1&gt;

&lt;p&gt;读取GA的数据，这里使用的是Google提供的&lt;a href=&quot;http://code.google.com/p/gdata-python-client/&quot;&gt;gdata&lt;/a&gt;，此外，需要将GA数据保存为excel，这里使用的是Pandas。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo  pip install --upgrade gdata
sudo pip install --upgrade pandas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在http://pandas.pydata.org/ 可以找到pandas的信息&lt;/p&gt;

&lt;h1&gt;认证GA API，获取token&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;EMAIL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;google账号的用户名&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PWD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;google账号的密码&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SOURCE_APP_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Cloga_GA&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gdata.analytics.client&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gdata&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AnalyticsClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOURCE_APP_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#实例化GA Client&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;my_client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EMAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOURCE_APP_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auth_service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;GOOGLE&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;构建GA查询&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data_query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gdata&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFeedQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;ids&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ga: viewid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#替换为要查询的view id&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;dimensions&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ga:source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;metrics&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ga:pageviews&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;start-date&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;2013-5-18&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;end-date&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;2014-10-10&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;prettyprint&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以在http://ga-dev-tools.appspot.com/explorer/ 构建好需要的query条件&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDataFeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;feed是从XML中解析的Data feed，具体的数据格式见https://developers.google.com/analytics/devguides/reporting/core/v2/gdataReferenceDataFeed&lt;/p&gt;

&lt;h1&gt;解析Data Feed&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dimension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;met&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;met&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;met&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_excel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ga_data.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样就实现了用python调用GA API，并将结果存入了excel，通过改变data_query部分的参数来查询你自己的数据吧～&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>用Graphlab Create构建简易的推荐引擎</title>
   <link href="http://cloga.github.io/graphlab%20create/2014/07/26/graphlab_create"/>
   <updated>2014-07-26T00:00:00+08:00</updated>
   <id>http://cloga.github.io/graphlab%20create/2014/07/26/graphlab_create</id>
   <content type="html">&lt;h1&gt;Graphlab Create简介&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://graphlab.com/products/create/&quot;&gt;Graphlab Create&lt;/a&gt;是基于图形数据库的数据挖掘工具，底层是由C++编写
以保证最佳性能，同时提供了一个Python接口。&lt;/p&gt;

&lt;h2&gt;数据结构&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SFrame：类似于Pandas及R的DataFrame，是由行列构成的表格化数据结构。&lt;/li&gt;
&lt;li&gt;SArray：与Pandas的Series类似的数组结构&lt;/li&gt;
&lt;li&gt;SGraph：Graphlab特有的数据结构，类似于NetWorkx的Graph，由节点和边构成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，Graphlab Create对Pandas提供了很好的支持，可以直接读取Pandas的DataFrame来构建模型。&lt;/p&gt;

&lt;h2&gt;支持的数据挖掘算法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;recommender：用于构建推荐引擎&lt;/li&gt;
&lt;li&gt;graph_analytics：用于进行网络分析，比如团体发现，寻找有影响力的个体或者虚假交易&lt;/li&gt;
&lt;li&gt;clustering：目前支持K-Means聚类&lt;/li&gt;
&lt;li&gt;regression：目前支持线性回归&lt;/li&gt;
&lt;li&gt;classification：目前支持SVM&lt;/li&gt;
&lt;li&gt;text：文本挖掘模型，目前支持主题模型&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里主要为大家介绍一下如何用Graphlab
Create构建一个推荐引擎，其他的算法其实在其他的Python包里都有很好的支持。比如聚类回归判别这类常规的数据挖掘算法Sklearn也提供了丰富的方法，Graphlab
Create的优势在于性能及可扩展性；对于Graph Analytics而言，networkx也已经给出了全面的算法支持；而主题模型则有gensim。&lt;/p&gt;

&lt;h1&gt;用Graphlab Create创建推荐引擎&lt;/h1&gt;

&lt;p&gt;我这里使用的数据是豆瓣的电影数据，最近刚好与豆瓣的项目有合作，拿到了一部分匿名用户的电影偏好数据。&lt;/p&gt;

&lt;h2&gt;数据清洗&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;graphlab&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gl&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;movie_info_v2_gb18030.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;gb18030&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error_bad_lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warn_bad_lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这部分数据是电影属性数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;movie_user_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;beetle_user_movie_v2_gb18030.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;gb18030&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error_bad_lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warn_bad_lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_user_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;class &amp;#39;pandas.core.frame.DataFrame&amp;#39;&amp;gt;
Int64Index: 1405556 entries, 0 to 1405555
Data columns (total 6 columns):
用户编号     1405556 non-null int64
 电影ID    1405556 non-null int64
 电影名称    1405556 non-null object
 电影连接    1405556 non-null object
 用户状态    1405556 non-null object
 用户评分    1405556 non-null object
dtypes: int64(2), object(4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这部分数据是电影的偏好数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;movie_url_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_user_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影连接&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_url_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;连接&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影连接&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;class &amp;#39;pandas.core.frame.DataFrame&amp;#39;&amp;gt;
Int64Index: 52660 entries, 0 to 52659
Data columns (total 15 columns):
片名       52660 non-null object
连接       52660 non-null object
类型       44974 non-null object
国家       52333 non-null object
年份       48303 non-null object
主演       44064 non-null object
导演       50367 non-null object
编剧       36671 non-null object
片长       37592 non-null object
用户编号     52660 non-null int64
 电影ID    52660 non-null object
 电影名称    52660 non-null object
 电影连接    52660 non-null object
 用户状态    52660 non-null object
 用户评分    52660 non-null object
dtypes: int64(1), object(14)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_user_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;用户编号&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39; 用户评分&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;class &amp;#39;pandas.core.frame.DataFrame&amp;#39;&amp;gt;
Int64Index: 1405556 entries, 0 to 1405555
Data columns (total 3 columns):
movie_id    1405556 non-null int64
uid         1405556 non-null int64
rating      1405556 non-null object
dtypes: int64(2), object(1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先我将电影的偏好数据进行了处理只保留的了电影ID，用户ID及对应的用户偏好分数。简单来说就是人与物的关系，这是构建推荐引擎最基础的数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nan&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nan&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isnull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;class &amp;#39;pandas.core.frame.DataFrame&amp;#39;&amp;gt;
Int64Index: 712200 entries, 0 to 712199
Data columns (total 3 columns):
movie_id    712200 non-null int64
uid         712200 non-null int64
rating      712200 non-null object
dtypes: int64(2), object(1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于不是每个用户对每一部关注的电影都会评分，因此有一些评分数据是空的，这部分数据对我们来说是没用，这里直接将这些数据删除。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里对数据的类型进行了处理，将用户及物品标识处理为字符，而评分处理为整数。&lt;/p&gt;

&lt;h2&gt;将数据读入Graphlab Create&lt;/h2&gt;

&lt;p&gt;以上的数据操作都是在Pandas中进行，数据的最终形式是Pandas的DataFrame，接下来将数据读入Graphlab Create。&lt;/p&gt;

&lt;p&gt;上面的介绍中提到Graphlab Create是基于图形数据库的，这也就是为什么会叫做Graphlab，图形数据库是No
SQL的一种将数据结构抽象用节点与节点之间的关系（边）来表示的图形。&lt;/p&gt;

&lt;p&gt;具体到这里的任务，每个电影与用户都是一个个的节点，而电影与用户直接的关系就是用户对电影的评分。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SGraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dst_field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src_field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src_field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dst_field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按照Graphlab Create的Sample代码，通过以上两句代码就可以将DataFrame转化SGraph。这里Graphlab
Create似乎使用的是有向图，因此需要添加两次不同方向的边。&lt;/p&gt;

&lt;p&gt;转化为图形之后，我们就可以用Graphlab Create提供的一些图形分析方法对数据进行分析，比如下面我们通过pagerank，找出热门的影片。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pagerank&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pagerank&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Columns:
    __id    str
    pagerank    float

Rows: 34004

Data:
       __id  pagerank
0  10001444  0.179899
1      1005  9.820545
2  10060293  0.175111
3  10199330  0.215555
4  10332552  0.287221
5  10344747  0.221428
6      1035  3.849069
7  10355329  0.539630
8  10429695  0.530874
...
[34004 rows x 2 columns]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;stats_pr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dataframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stats_pr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtypes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;__id         object
pagerank    float64
dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stats_pr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;__id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;pagerank&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;__id&lt;/th&gt;
      &lt;th&gt;pagerank&lt;/th&gt;
      &lt;th&gt;片名&lt;/th&gt;
      &lt;th&gt;连接&lt;/th&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;国家&lt;/th&gt;
      &lt;th&gt;年份&lt;/th&gt;
      &lt;th&gt;主演&lt;/th&gt;
      &lt;th&gt;导演&lt;/th&gt;
      &lt;th&gt;编剧&lt;/th&gt;
      &lt;th&gt;片长&lt;/th&gt;
      &lt;th&gt;用户编号&lt;/th&gt;
      &lt;th&gt; 电影ID&lt;/th&gt;
      &lt;th&gt; 电影名称&lt;/th&gt;
      &lt;th&gt; 电影连接&lt;/th&gt;
      &lt;th&gt; 用户状态&lt;/th&gt;
      &lt;th&gt; 用户评分&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;7899 &lt;/th&gt;
      &lt;td&gt;  1295644&lt;/td&gt;
      &lt;td&gt; 27.960225&lt;/td&gt;
      &lt;td&gt;                     Léon&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1295644/&lt;/td&gt;
      &lt;td&gt;    犯罪、剧情、惊悚&lt;/td&gt;
      &lt;td&gt;    法国&lt;/td&gt;
      &lt;td&gt; 1994&lt;/td&gt;
      &lt;td&gt;                让·雷诺、娜塔莉·波特曼、加里·奥德曼、丹尼·爱罗、麦温·勒·贝斯柯&lt;/td&gt;
      &lt;td&gt;    吕克·贝松&lt;/td&gt;
      &lt;td&gt;          吕克·贝松&lt;/td&gt;
      &lt;td&gt; 110 分钟&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt;  1295644&lt;/td&gt;
      &lt;td&gt;                     Léon&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1295644/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5510 &lt;/th&gt;
      &lt;td&gt;  1929463&lt;/td&gt;
      &lt;td&gt; 26.480632&lt;/td&gt;
      &lt;td&gt;               Life of Pi&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1929463/&lt;/td&gt;
      &lt;td&gt;    剧情、奇幻、冒险&lt;/td&gt;
      &lt;td&gt;    美国&lt;/td&gt;
      &lt;td&gt; 2012&lt;/td&gt;
      &lt;td&gt; 苏拉·沙玛、拉菲·斯波、伊尔凡·可汗、杰拉尔·德帕迪约、塔布、阿迪勒·侯赛因、阿尤什·坦东、...&lt;/td&gt;
      &lt;td&gt;       李安&lt;/td&gt;
      &lt;td&gt;    扬·马特尔、大卫·麦基&lt;/td&gt;
      &lt;td&gt;  127分钟&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt;  1929463&lt;/td&gt;
      &lt;td&gt;               Life of Pi&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1929463/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18058&lt;/th&gt;
      &lt;td&gt;  3541415&lt;/td&gt;
      &lt;td&gt; 26.400179&lt;/td&gt;
      &lt;td&gt;                Inception&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/3541415/&lt;/td&gt;
      &lt;td&gt; 动作、科幻、悬疑、冒险&lt;/td&gt;
      &lt;td&gt; 美国、英国&lt;/td&gt;
      &lt;td&gt; 2010&lt;/td&gt;
      &lt;td&gt; 莱昂纳多·迪卡普里奥、约瑟夫·高登-莱维特、艾伦·佩吉、渡边谦、汤姆·哈迪、迪利普·劳、玛丽...&lt;/td&gt;
      &lt;td&gt; 克里斯托弗·诺兰&lt;/td&gt;
      &lt;td&gt;       克里斯托弗·诺兰&lt;/td&gt;
      &lt;td&gt;  148分钟&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt;  3541415&lt;/td&gt;
      &lt;td&gt;                Inception&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/3541415/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;22812&lt;/th&gt;
      &lt;td&gt; 10574622&lt;/td&gt;
      &lt;td&gt; 25.470634&lt;/td&gt;
      &lt;td&gt;                  人再囧途之泰囧&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/10574622/&lt;/td&gt;
      &lt;td&gt;          喜剧&lt;/td&gt;
      &lt;td&gt;  中国大陆&lt;/td&gt;
      &lt;td&gt; 2012&lt;/td&gt;
      &lt;td&gt;                               徐峥、王宝强、黄渤、陶虹、谢楠、范冰冰&lt;/td&gt;
      &lt;td&gt;       徐峥&lt;/td&gt;
      &lt;td&gt;       徐峥、丁丁、束焕&lt;/td&gt;
      &lt;td&gt;  105分钟&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt; 10574622&lt;/td&gt;
      &lt;td&gt;                  人再囧途之泰囧&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/10574622/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19130&lt;/th&gt;
      &lt;td&gt;  1292052&lt;/td&gt;
      &lt;td&gt; 25.349502&lt;/td&gt;
      &lt;td&gt; The Shawshank Redemption&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1292052/&lt;/td&gt;
      &lt;td&gt;       犯罪、剧情&lt;/td&gt;
      &lt;td&gt;    美国&lt;/td&gt;
      &lt;td&gt; 1994&lt;/td&gt;
      &lt;td&gt;                蒂姆·罗宾斯、摩根·弗里曼、鲍勃·冈顿、威廉姆·赛德勒、克兰西·布朗&lt;/td&gt;
      &lt;td&gt; 弗兰克·德拉邦特&lt;/td&gt;
      &lt;td&gt; 弗兰克·德拉邦特、斯蒂芬·金&lt;/td&gt;
      &lt;td&gt; 142 分钟&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt;  1292052&lt;/td&gt;
      &lt;td&gt; The Shawshank Redemption&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1292052/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt; None&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;其实这个结果和简单的value_counts结果一致，因为我们数据不是复杂的关系，人与人之间，电影与电影之前其实不存在直接的关系，只是用图形数据库进行了存储，用
微博的关注数据，应该可以找到更有趣的结果。&lt;/p&gt;

&lt;h2&gt;创建推荐引擎&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie_rate_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;MatrixFactorizationModel

Schema
  user column:   uid
  item column:   movie_id
  target column: rating

Statistics
  Training set:          712200 obs        2465 users       31539 items

Training summary
  training time:       11.938670s
  training_rmse:       0.614150316577

Settings
  sgd step size:         0.048828125                   
  regularization:        0.0001                        
  optimization method:   sgd                           
  sgd convergence threshold: 0.001                         
  step size decrease rate: 0.75                          
  nmf:                   0                             
  binary targets:        0                             
  sgd trial sample size: 10000                         
  sgd convergence interval: 8                             
  n factors:             8                             
  linear regularization: 0                             
  init random sigma:     0.001                         
  max iterations:        50                            
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;只用一行代码我们就构建了推荐引擎，看一下相关的性能数据，我们使用了71W的数据，来自2465个用户，评论了3W+的物品，训练的时间为12s不到，还是相当给力的。&lt;/p&gt;

&lt;p&gt;接下来让我们实际做几个推荐看一下。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;movie_user_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;class &amp;#39;pandas.core.frame.DataFrame&amp;#39;&amp;gt;
Int64Index: 1405556 entries, 0 to 1405555
Data columns (total 6 columns):
用户编号     1405556 non-null int64
 电影ID    1405556 non-null int64
 电影名称    1405556 non-null object
 电影连接    1405556 non-null object
 用户状态    1405556 non-null object
 用户评分    1405556 non-null object
dtypes: int64(2), object(4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;movie_user_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;用户编号&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value_counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2621    15580
2733     8366
2378     7445
851      7104
2387     6605
dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我挑选了观看电影较多的用户。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;2621&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Columns:
    uid str
    movie_id    str
    score   float
    rank    int

Rows: 10

Data:
    uid  movie_id     score  rank
0  2621   1299932  6.707543     1
1  2621   1310179  6.474720     2
2  2621   1303418  6.424343     3
3  2621   1295287  6.415932     4
4  2621   3713664  6.401849     5
5  2621   2216966  6.384994     6
6  2621   2224447  6.354351     7
7  2621  10558405  6.261696     8
8  2621   3188272  6.260818     9
[10 rows x 4 columns]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;2621&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dataframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;uid&lt;/th&gt;
      &lt;th&gt;movie_id&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;rank&lt;/th&gt;
      &lt;th&gt;片名&lt;/th&gt;
      &lt;th&gt;连接&lt;/th&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;国家&lt;/th&gt;
      &lt;th&gt;年份&lt;/th&gt;
      &lt;th&gt;主演&lt;/th&gt;
      &lt;th&gt;导演&lt;/th&gt;
      &lt;th&gt;编剧&lt;/th&gt;
      &lt;th&gt;片长&lt;/th&gt;
      &lt;th&gt;用户编号&lt;/th&gt;
      &lt;th&gt; 电影ID&lt;/th&gt;
      &lt;th&gt; 电影名称&lt;/th&gt;
      &lt;th&gt; 电影连接&lt;/th&gt;
      &lt;th&gt; 用户状态&lt;/th&gt;
      &lt;th&gt; 用户评分&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt; 2621&lt;/td&gt;
      &lt;td&gt; 1299932&lt;/td&gt;
      &lt;td&gt; 6.707543&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt;                            Le salaire de la peur&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1299932/&lt;/td&gt;
      &lt;td&gt;       剧情、惊悚&lt;/td&gt;
      &lt;td&gt; 法国、意大利&lt;/td&gt;
      &lt;td&gt; 1953&lt;/td&gt;
      &lt;td&gt;           伊夫·蒙当、查尔斯·文恩、彼得·范·埃克、Folco Lulli、薇拉·克劳佐&lt;/td&gt;
      &lt;td&gt;                                         亨利-乔治·克鲁佐&lt;/td&gt;
      &lt;td&gt;                      亨利-乔治·克鲁佐、Jér?me Géronimi&lt;/td&gt;
      &lt;td&gt;                                 131 分钟&lt;/td&gt;
      &lt;td&gt;  34&lt;/td&gt;
      &lt;td&gt; 1299932&lt;/td&gt;
      &lt;td&gt;                            Le salaire de la peur&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1299932/&lt;/td&gt;
      &lt;td&gt; 想看&lt;/td&gt;
      &lt;td&gt; None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt; 2621&lt;/td&gt;
      &lt;td&gt; 1310179&lt;/td&gt;
      &lt;td&gt; 6.474720&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt;                                         Fantasia&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1310179/&lt;/td&gt;
      &lt;td&gt; 动画、家庭、奇幻、音乐&lt;/td&gt;
      &lt;td&gt;     美国&lt;/td&gt;
      &lt;td&gt; 1940&lt;/td&gt;
      &lt;td&gt; 华特·迪斯尼、列奥波德·斯托科夫斯基、Deems Taylor、Corey Burton、J...&lt;/td&gt;
      &lt;td&gt; 詹姆斯·阿尔格、福特·毕比、Samuel Armstrong、Norman Ferguson...&lt;/td&gt;
      &lt;td&gt; Lee Blair、Elmer Plummer、Sylvia Moberly-Holland&lt;/td&gt;
      &lt;td&gt; USA: 124 分钟(restored roadshow version)&lt;/td&gt;
      &lt;td&gt;  47&lt;/td&gt;
      &lt;td&gt; 1310179&lt;/td&gt;
      &lt;td&gt;                                         Fantasia&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1310179/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt; None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt; 2621&lt;/td&gt;
      &lt;td&gt; 1303418&lt;/td&gt;
      &lt;td&gt; 6.424343&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt;                               To Be or Not to Be&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1303418/&lt;/td&gt;
      &lt;td&gt;       喜剧、战争&lt;/td&gt;
      &lt;td&gt;     美国&lt;/td&gt;
      &lt;td&gt; 1942&lt;/td&gt;
      &lt;td&gt;           卡洛·朗白、杰克·本尼、罗伯特·斯塔克、菲利克斯·布雷萨特、莱昂内尔·阿特威尔&lt;/td&gt;
      &lt;td&gt;                                           恩斯特·刘别谦&lt;/td&gt;
      &lt;td&gt;    Edwin Justus Mayer、Melchior Lengyel、恩斯特·刘别谦&lt;/td&gt;
      &lt;td&gt;                                  99 分钟&lt;/td&gt;
      &lt;td&gt;  32&lt;/td&gt;
      &lt;td&gt; 1303418&lt;/td&gt;
      &lt;td&gt;                               To Be or Not to Be&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1303418/&lt;/td&gt;
      &lt;td&gt; 想看&lt;/td&gt;
      &lt;td&gt; None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt; 2621&lt;/td&gt;
      &lt;td&gt; 1295287&lt;/td&gt;
      &lt;td&gt; 6.415932&lt;/td&gt;
      &lt;td&gt; 4&lt;/td&gt;
      &lt;td&gt; Intolerance: Love&#39;s Struggle Throughout the Ages&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1295287/&lt;/td&gt;
      &lt;td&gt;    剧情、历史、爱情&lt;/td&gt;
      &lt;td&gt;     美国&lt;/td&gt;
      &lt;td&gt; 1916&lt;/td&gt;
      &lt;td&gt;                           梅·马什、罗伯特·哈伦、F.A. Turner&lt;/td&gt;
      &lt;td&gt;                                          D·W·格里菲斯&lt;/td&gt;
      &lt;td&gt;      Anita Loos、Hettie Grey Baker、D·W·格里菲斯、惠特曼&lt;/td&gt;
      &lt;td&gt;                                 163 分钟&lt;/td&gt;
      &lt;td&gt;  60&lt;/td&gt;
      &lt;td&gt; 1295287&lt;/td&gt;
      &lt;td&gt; Intolerance: Love&#39;s Struggle Throughout the Ages&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/1295287/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt; 2621&lt;/td&gt;
      &lt;td&gt; 3713664&lt;/td&gt;
      &lt;td&gt; 6.401849&lt;/td&gt;
      &lt;td&gt; 5&lt;/td&gt;
      &lt;td&gt;                                          一寸河山一寸血&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/3713664/&lt;/td&gt;
      &lt;td&gt;         纪录片&lt;/td&gt;
      &lt;td&gt;     台湾&lt;/td&gt;
      &lt;td&gt; 1997&lt;/td&gt;
      &lt;td&gt;                                               NaN&lt;/td&gt;
      &lt;td&gt;                                           陈君天、刘侃如&lt;/td&gt;
      &lt;td&gt;                                            NaN&lt;/td&gt;
      &lt;td&gt;                                    42集&lt;/td&gt;
      &lt;td&gt; 230&lt;/td&gt;
      &lt;td&gt; 3713664&lt;/td&gt;
      &lt;td&gt;                                          一寸河山一寸血&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/3713664/&lt;/td&gt;
      &lt;td&gt; 想看&lt;/td&gt;
      &lt;td&gt; None&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;2387&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dataframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;movie_data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;movie_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39; 电影ID&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;uid&lt;/th&gt;
      &lt;th&gt;movie_id&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;rank&lt;/th&gt;
      &lt;th&gt;片名&lt;/th&gt;
      &lt;th&gt;连接&lt;/th&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;国家&lt;/th&gt;
      &lt;th&gt;年份&lt;/th&gt;
      &lt;th&gt;主演&lt;/th&gt;
      &lt;th&gt;导演&lt;/th&gt;
      &lt;th&gt;编剧&lt;/th&gt;
      &lt;th&gt;片长&lt;/th&gt;
      &lt;th&gt;用户编号&lt;/th&gt;
      &lt;th&gt; 电影ID&lt;/th&gt;
      &lt;th&gt; 电影名称&lt;/th&gt;
      &lt;th&gt; 电影连接&lt;/th&gt;
      &lt;th&gt; 用户状态&lt;/th&gt;
      &lt;th&gt; 用户评分&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt; 2387&lt;/td&gt;
      &lt;td&gt; 24891524&lt;/td&gt;
      &lt;td&gt; 7.613149&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt;                                         5月天诺亚方舟&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/24891524/&lt;/td&gt;
      &lt;td&gt;   纪录片、音乐&lt;/td&gt;
      &lt;td&gt; 台湾&lt;/td&gt;
      &lt;td&gt; 2013&lt;/td&gt;
      &lt;td&gt;                   陈信宏、刘冠佑、言承旭、林依晨、林晖闵、温尚翊、蔡升晏、石锦航&lt;/td&gt;
      &lt;td&gt;             刘名峰&lt;/td&gt;
      &lt;td&gt;                               陈信宏、黄中平&lt;/td&gt;
      &lt;td&gt; 114分钟&lt;/td&gt;
      &lt;td&gt;  35&lt;/td&gt;
      &lt;td&gt; 24891524&lt;/td&gt;
      &lt;td&gt;                                         5月天诺亚方舟&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/24891524/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt; 2387&lt;/td&gt;
      &lt;td&gt;  1294132&lt;/td&gt;
      &lt;td&gt; 6.223292&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt; Wallace &amp;amp; Gromit: The Best of Aardman Animation&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1294132/&lt;/td&gt;
      &lt;td&gt; 动画、喜剧、家庭&lt;/td&gt;
      &lt;td&gt; 英国&lt;/td&gt;
      &lt;td&gt; 1996&lt;/td&gt;
      &lt;td&gt;                                               NaN&lt;/td&gt;
      &lt;td&gt;           尼克·帕克&lt;/td&gt;
      &lt;td&gt;                                   NaN&lt;/td&gt;
      &lt;td&gt;   NaN&lt;/td&gt;
      &lt;td&gt;  47&lt;/td&gt;
      &lt;td&gt;  1294132&lt;/td&gt;
      &lt;td&gt; Wallace &amp;amp; Gromit: The Best of Aardman Animation&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1294132/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt; None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt; 2387&lt;/td&gt;
      &lt;td&gt; 25800837&lt;/td&gt;
      &lt;td&gt; 6.200432&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt;                                  Gangsta Granny&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/25800837/&lt;/td&gt;
      &lt;td&gt;    剧情、喜剧&lt;/td&gt;
      &lt;td&gt; 英国&lt;/td&gt;
      &lt;td&gt; 2013&lt;/td&gt;
      &lt;td&gt; India Ria Amarteifio、Tim Bentinck、Miranda Hart...&lt;/td&gt;
      &lt;td&gt;     Matt Lipsey&lt;/td&gt;
      &lt;td&gt; Kevin Cecil、Andy Riley、David Walliams&lt;/td&gt;
      &lt;td&gt;  68分钟&lt;/td&gt;
      &lt;td&gt;  55&lt;/td&gt;
      &lt;td&gt; 25800837&lt;/td&gt;
      &lt;td&gt;                                  Gangsta Granny&lt;/td&gt;
      &lt;td&gt; http://movie.douban.com/subject/25800837/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt; 2387&lt;/td&gt;
      &lt;td&gt;  1926142&lt;/td&gt;
      &lt;td&gt; 6.180763&lt;/td&gt;
      &lt;td&gt; 4&lt;/td&gt;
      &lt;td&gt;                                  Ashes and Snow&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1926142/&lt;/td&gt;
      &lt;td&gt;   纪录片、剧情&lt;/td&gt;
      &lt;td&gt; 美国&lt;/td&gt;
      &lt;td&gt; 2005&lt;/td&gt;
      &lt;td&gt;                      劳伦斯·菲什伯恩、让娜·莫罗、Enrique Rocha&lt;/td&gt;
      &lt;td&gt; Gregory Colbert&lt;/td&gt;
      &lt;td&gt;                       Gregory Colbert&lt;/td&gt;
      &lt;td&gt;  63分钟&lt;/td&gt;
      &lt;td&gt;  16&lt;/td&gt;
      &lt;td&gt;  1926142&lt;/td&gt;
      &lt;td&gt;                                  Ashes and Snow&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/1926142/&lt;/td&gt;
      &lt;td&gt; 看过&lt;/td&gt;
      &lt;td&gt;    4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt; 2387&lt;/td&gt;
      &lt;td&gt;  4038241&lt;/td&gt;
      &lt;td&gt; 6.142380&lt;/td&gt;
      &lt;td&gt; 5&lt;/td&gt;
      &lt;td&gt;                              The Sunset Limited&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/4038241/&lt;/td&gt;
      &lt;td&gt;       剧情&lt;/td&gt;
      &lt;td&gt; 美国&lt;/td&gt;
      &lt;td&gt; 2011&lt;/td&gt;
      &lt;td&gt;                                   汤米·李·琼斯、塞缪尔·杰克逊&lt;/td&gt;
      &lt;td&gt;         汤米·李·琼斯&lt;/td&gt;
      &lt;td&gt;                               考麦克·麦卡锡&lt;/td&gt;
      &lt;td&gt;  90分钟&lt;/td&gt;
      &lt;td&gt; 116&lt;/td&gt;
      &lt;td&gt;  4038241&lt;/td&gt;
      &lt;td&gt;                              The Sunset Limited&lt;/td&gt;
      &lt;td&gt;  http://movie.douban.com/subject/4038241/&lt;/td&gt;
      &lt;td&gt; 想看&lt;/td&gt;
      &lt;td&gt; None&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;通过一行代码就可以获得推荐结果。这两位都属于电影发烧友级别，因此推荐出的电影都是相对小众的电影，反正博主基本上都没有看过。&lt;/p&gt;

&lt;p&gt;以上就是Graphlab Create构建推荐引擎的介绍，希望对大家有所帮助。&lt;/p&gt;

&lt;h1&gt;寻找喜欢一起研究数据的小伙伴&lt;/h1&gt;

&lt;p&gt;最后打一个广告，博主所在的Team寻找两位喜欢一起研究数据的小伙伴。&lt;/p&gt;

&lt;p&gt;我们是一家4A广告公司的Data Team，服务各类的客户：快消、汽车、手机等等，数据项目包含Digital Analytics（网站分析），Social
Listening（舆情监测），CRM 数据分析。因此，在这里你可以了解以上领域的数据分析。&lt;/p&gt;

&lt;p&gt;这里会接触到数据分析技术与工具有：&lt;/p&gt;

&lt;p&gt;网站分析技术：Google Analytics，WebTrends，Omniture等&lt;/p&gt;

&lt;p&gt;数据分析建模：Python，R， SPSS，Excel、Access、SQL Server&lt;/p&gt;

&lt;p&gt;在这个Team中，Bussiness，Computer Science，Stastics三个方面的知识你都会需要了解，并且将其中的一个方向作为自己的主攻方向。&lt;/p&gt;

&lt;p&gt;我们的要求：&lt;/p&gt;

&lt;p&gt;对数据行业感兴趣是第一优先级，其他的方面都是可以培养的。&lt;/p&gt;

&lt;p&gt;欢迎各位小伙伴把简历砸过来（Cloga0216@gmail.com）。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics 不同版本的JS方法介绍</title>
   <link href="http://cloga.github.io/ga%20js%20function/2014/05/30/ga_functions"/>
   <updated>2014-05-30T00:00:00+08:00</updated>
   <id>http://cloga.github.io/ga%20js%20function/2014/05/30/ga_functions</id>
   <content type="html">&lt;p&gt;经常有同学会问GA几个版本的方法有什么不同?为什么感觉差异很大?其实这个问题只要了解一点点JS编程基础知识就可以解答。可能有的同学会说我是做网站分析的，了解这些JS编程知识有用吗？我的观点是在没有认知负担的情况下，适当了解一下网站分析的工作原理对职业发展大有裨益。&lt;/p&gt;

&lt;h2&gt;常见的几种GA方法&lt;/h2&gt;

&lt;p&gt;先来看一下市面上常见的几种GA代码：&lt;/p&gt;

&lt;h3&gt;最新的UA代码&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GoogleAnalyticsObject&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;//www.google-analytics.com/analytics.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ga&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;create&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UA-xxxxxx-x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;send&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pageview&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;GA异步版本&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_setAccount&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UA-xxxxxx-x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_trackPageview&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https:&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://ssl&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.google-analytics.com/ga.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;更早版本的GA代码－姑且叫它GA同步代码&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gaJsHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;https:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://ssl.&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%3Cscript src=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gaJsHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;google-analytics.com/ga.js&amp;#39; type=&amp;#39;text/javascript&amp;#39;%3E%3C/script%3E&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_getTracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;UA-xxxxxx-x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pageTracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_trackPageview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这三个版本的代码应该是市面上比较常见的GA代码。按照发布时间降序排列。当然不排除还有使用古董级GA代码或者urchin代码的网站，不过那些不在本文的探讨范围以内。&lt;/p&gt;

&lt;h2&gt;GA代码的基本结构&lt;/h2&gt;

&lt;p&gt;三个代码虽然看上去有一些差异，但是代码的基本机构是一致。从大的方面来说，代码分为两个部分。
1、引入GA的JS库，所有的GA方法都是在整个库中定义
2、定义GA账号及其他初始的代码状态，并触发一个页面跟踪（trackPageview）&lt;/p&gt;

&lt;h3&gt;引入GA的JS库&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GoogleAnalyticsObject&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;//www.google-analytics.com/analytics.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ga&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https:&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://ssl&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.google-analytics.com/ga.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gaJsHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;https:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://ssl.&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%3Cscript src=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gaJsHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;google-analytics.com/ga.js&amp;#39; type=&amp;#39;text/javascript&amp;#39;%3E%3C/script%3E&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这三段代码虽然看上去差异很大，其实相当于在页面中引入一段JS。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www.google-analytics.com/ga.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.google-analytics.com/analytics.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面的GA的JS库，下面是UA的JS库。&lt;/p&gt;

&lt;p&gt;GA实现的所有方法都是在这个JS库中。&lt;/p&gt;

&lt;p&gt;当然Google的工程师也不是没事闲的把简单事情复杂化，非要写各种高大上的版本让大家看不懂，其实不同版本的演化过程也在一定程度上体现了互联网技术的发展的方向。&lt;/p&gt;

&lt;h4&gt;GA同步代码&lt;/h4&gt;

&lt;p&gt;GA同步代码的部分是最好理解的，&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gaJsHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;https:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://ssl.&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这句语句是根据当前URL的协议，定义Google JS的host，如果是http协议就用http协议，如果是https就用https协议。&lt;/p&gt;

&lt;p&gt;感兴趣的同学可以使用chrome自带的JS调试工具测试一下这段代码。打开Chrome控制台的快捷键在Windows是F12，Mac下是option＋command＋J。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/ga1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%3Cscript src=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gaJsHost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;google-analytics.com/ga.js&amp;#39; type=&amp;#39;text/javascript&amp;#39;%3E%3C/script%3E&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这句语句的作用就是在页面上输入:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www.google-analytics.com/ga.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要注意的是这里使用的方式是使用document.write直接在页面html代码中输出字符串。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/ga2.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;综上，GA的同步代码通过对当前页面协议对判断，针对http协议和https引用不同版本对JS库，而不是笨拙对采用对不用对协议页面给出不同对跟踪代码的方式，其目的是便利网站管理员的代码部署。不过由于使用的是document.write方式在页面上字符串，如果请求的JS库地址相应比较慢会影响整个网页的加载速度，因此，衍生出异步代码。&lt;/p&gt;

&lt;h4&gt;GA异步代码&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https:&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://ssl&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://www&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.google-analytics.com/ga.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GA这里使用的方式是定义一个匿名的方法，方法的作用是在第一个script元素前创建一个script用于引用ga.js。&lt;/p&gt;

&lt;p&gt;这里需要简单提一下JS定义方法（函数）的基本语法结构。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;函数名&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;参数&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;函数体&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面就是JS定义方法（函数）的基本语法结构，具体来说是有关键字（function），函数的参数，由定界符（大括号）包裹的函数体构成。&lt;/p&gt;

&lt;p&gt;先来看函数体的内容一共是三行。&lt;/p&gt;

&lt;p&gt;第一行定义了ga这个对象（物品）（var ga = document.createElement(&amp;#39;script&amp;#39;);），并且为ga这个物品增加了type和async的属性值（ga.type = &amp;#39;text/javascript&amp;#39;; ga.async = true;）。&lt;/p&gt;

&lt;p&gt;第二行定义了ga这个物品的scr属性，src属性值的定义与同步代码类型，不同协议下调用不同的协议。&lt;/p&gt;

&lt;p&gt;第三行先搜索了页面上的script数组的第一个元素（var s = document.getElementsByTagName(&amp;#39;script&amp;#39;)[0];），[0]这种形式叫做下标，用来按位置选取数组的元素，第一个元素的下标是0；将ga插入到了s的前面（s.parentNode.insertBefore(ga, s)）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/ga3.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;再来看一下完整的代码。这个函数没有函数名，而且在后面还有()，这种方式定义的方式定义了一个没用名字的函数，并且在调用后马上调用它（匿名函数闭包有木有）。&lt;/p&gt;

&lt;h4&gt;UA代码&lt;/h4&gt;

&lt;p&gt;有了上面的JS函数基础知识，我们再来看一下UA代码，为了便于理解我整理了一下代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GoogleAnalyticsObject&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;//www.google-analytics.com/analytics.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ga&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到这段JS最外层也是匿名函数，所不同的是这个匿名函数是有参数的。&lt;/p&gt;

&lt;p&gt;i：window&lt;/p&gt;

&lt;p&gt;s：document&lt;/p&gt;

&lt;p&gt;o：&amp;#39;script&amp;#39;&lt;/p&gt;

&lt;p&gt;g：&amp;#39;//www.google-analytics.com/analytics.js&amp;#39;&lt;/p&gt;

&lt;p&gt;r：&amp;#39;ga&amp;#39;&lt;/p&gt;

&lt;p&gt;函数体的第一句是定义了i的GoogleAnalyticsObject属性等于r，这里的i是window，window是一个对象代表的使整个页面。获取对象属性的方式可以使用下标的数字（前面提到过获取数组第一个元素是通过下标0，好吧，数组也是对象），也可以使用对应属性的字符串。这里是使用后者。翻译过来后第一行变成：window[&amp;#39;GoogleAnalyticsObject&amp;#39;]=&amp;#39;ga&amp;#39;&lt;/p&gt;

&lt;p&gt;函数体的第二句这里是用一个逻辑或二元操作对i[r]进行，其实就是对window[&amp;#39;ga&amp;#39;]进行赋值，||表示的是逻辑与，如果表达式前面为真，则返回前一个表达式，否则返回后一个表达式的值。这种表达方式其实JS的小技巧，为函数指定默认值。||右侧的表达式其实就是默认值。a ＝ a||表达式，这种表达式翻译过来就是如果a不存在就给定义一个a＝表达式。&lt;/p&gt;

&lt;p&gt;正如你注意到的逻辑或表达式的右侧即参数的默认值又是一个匿名函数，函数体里面还有默认值赋值的方式。看起来有一些小复杂，还好我们有上面的基础。function(){(i[r].q=i[r].q||[]).push(arguments)}这里也是定义匿名函数，不过没有马上调用，实际上是将i[r]定义为了一个函数。函数体中i[r].q=i[r].q||[]是i[r].q默认值定义一个数组（[]代表的是空数组）。push方式是以先进先出的方式向数组中添加元素。后面的是将当前时间转化为数字赋值给i[r]的r属性。&lt;/p&gt;

&lt;p&gt;这里其实定义了一个ga对象，其实是一个方法，其的作用就是向i[r].q（window[&amp;#39;ga&amp;#39;].q）中添加元素。&lt;/p&gt;

&lt;p&gt;后面的三句与前面的GA代码功能一致，找到script的对象的第一个元素，在其前面插入一个src为analtics.js的script。&lt;/p&gt;

&lt;h3&gt;定义GA账号及其他初始的代码状态，并触发一个页面跟踪（trackPageview）&lt;/h3&gt;

&lt;p&gt;引入了GA|UA的JS库后，一些基本的对象方法函数就都定义好了。下一步就是实例化跟踪对象，监测网站数据。&lt;/p&gt;

&lt;h4&gt;GA同步代码&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageTracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_getTracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;UA-xxxxxx-x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pageTracker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_trackPageview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先介绍一下JS里面的try，catch机制。其基本的语法形式为:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;要运行的语句&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;错误变量&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其作用是运行try语法块中的语句，如果报错则，将作为记录在错误变量中，同时也可以运行catch语法块的语句。&lt;/p&gt;

&lt;p&gt;GA使用这个语句主要是为了容错处理，也没有后续做任何的处理。&lt;/p&gt;

&lt;p&gt;对于同步代码做这个容错处理，主要是因为使用document.write这种同步方式加载js，如果GA JS加载较慢，GA的基本对象方法还没有加载就调用跟踪对象的实例化代码会报错。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ReferenceError: _gat is not defined
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;try中的第一行语句是实例化了一个跟踪对象，并且定义GA账号为UA-xxxxxx-x，跟踪对象的名称为pageTracker。这里要说一下一个页面上如果使用多个GA账号，则需要为每个跟踪对象指定不同的名称，否则，调用数据只会收集到最后定义的跟踪对象中。&lt;/p&gt;

&lt;p&gt;try中的第二行语句触发一个PV计数。&lt;/p&gt;

&lt;h4&gt;GA异步代码&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_setAccount&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UA-xxxxxx-x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_trackPageview&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到异步代码没有使用try catch做错误处理。因为在GA异步代码中做了一些特殊的处理，如果ga.js没有加载成功，定义的ga方法只会是_gaq这个数组的一个元素而已。&lt;/p&gt;

&lt;p&gt;第一行代码是验证_gaq这个数组是否存在，如果不存在则初始化为一个数组。&lt;/p&gt;

&lt;p&gt;第二行代码是将定义收集数据的GA账号的方法作为数组元素添加到_gaq中。&lt;/p&gt;

&lt;p&gt;第三行代码是将收集PV数据的方法作为数组元素添加到_gaq中。&lt;/p&gt;

&lt;p&gt;如果需要部署多个GA代码的话，同样也需要定义不同跟踪器名称，默认的跟踪器为匿名的。&lt;/p&gt;

&lt;h4&gt;UA代码&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;create&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UA-xxxxxx-x&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;send&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pageview&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过前面对UA代码加载UA JS库对分析我们已经知道ga已经是一个方法其作用就是向window[&amp;#39;ga&amp;#39;].q中添加元素，也就是说其实UA与GA的异步代码没有本质上的差别，都是在JS库未加载前，用数组的元素在存储相关的跟踪方法及参数，等到JS库加载完毕，就转化为实际的方法向GA服务器提交数据。&lt;/p&gt;

&lt;p&gt;关于Google Analytics不同版本的方法介绍就到这里，希望对各位的工作有所帮助，如果你还有问题欢迎给我留言，也可以通过cloga在路上@新浪微博找到我。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>代友招聘-顶级4A数据分析，待遇福利一样顶级，急等你来！</title>
   <link href="http://cloga.github.io/%E6%8B%9B%E8%81%98%E4%BF%A1%E6%81%AF/2014/03/26/recruitment"/>
   <updated>2014-03-26T00:00:00+08:00</updated>
   <id>http://cloga.github.io/%E6%8B%9B%E8%81%98%E4%BF%A1%E6%81%AF/2014/03/26/recruitment</id>
   <content type="html">&lt;p&gt;本职位为4A广告公司核心职位，公司的待遇和福利在4A均为一流。 &lt;/p&gt;

&lt;h2&gt;职位名称： 数据分析经理/总监&lt;/h2&gt;

&lt;p&gt;职位描述： &lt;/p&gt;

&lt;p&gt;1、根据广告推广活动目标，为其建立合理的监控体系，全面衡量活动效果和提升用户体验； &lt;/p&gt;

&lt;p&gt;2、从多种数据源组合数据进行深度诊断分析；在发现问题的基础上，能够对广告活动优化、业务机会提供高价值的策略和数据解决方案； &lt;/p&gt;

&lt;p&gt;3、优秀的报告撰写和陈述能力。 &lt;/p&gt;

&lt;p&gt;岗位要求： &lt;/p&gt;

&lt;p&gt;1、有互联网、广告相关数据分析工作经历； &lt;/p&gt;

&lt;p&gt;2、对于网站分析工具有相当程度的掌握能力：例如： Webtrends, GA, 和Omniture。，熟练操作excel、SAS/SPSS、PPT等工具； &lt;/p&gt;

&lt;p&gt;3、良好的数据敏感度，能从海量数据提炼核心结果 &lt;/p&gt;

&lt;p&gt;4、熟练独立编写商业数据分析报告，及时发现和分析其中隐含的变化和问题，具备良好的商业敏感度和创新意识，快速识别商业问题和机会； &lt;/p&gt;

&lt;p&gt;5、具备良好的抗压能力、沟通能力和团队精神，有独立开展分析研究项目经验。 &lt;/p&gt;

&lt;h2&gt;职位名称：数据分析师&lt;/h2&gt;

&lt;p&gt;职位描述： &lt;/p&gt;

&lt;p&gt;负责广告主的数字化投放的数据监测和分析。 &lt;/p&gt;

&lt;p&gt;负责部署数字化投放的监测，数据收集，数据整理，数据分析。并输出数据分析报告，为广告主提供分析见解，以衡量KPI完成情况及帮助优化投放效果。 &lt;/p&gt;

&lt;p&gt;岗位要求： &lt;/p&gt;

&lt;p&gt;2年以上数据分析经验，互联网数字营销相关经验者优先，有4A工作经验者优先； &lt;/p&gt;

&lt;p&gt;熟悉GA, Omniture, Webtrends等分析工具之一，有实际部署经验者优先； &lt;/p&gt;

&lt;p&gt;工作有热情，好学，敢于挑战，较强的抗压能力； &lt;/p&gt;

&lt;p&gt;有意者发邮件到: justin.zhou@omd.com &lt;/p&gt;

&lt;p&gt;急等你来！！！！！！！！！ &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>一个广告人的自白-2014版机械战警观后感</title>
   <link href="http://cloga.github.io/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/2014/03/15/marketers_story"/>
   <updated>2014-03-15T00:00:00+08:00</updated>
   <id>http://cloga.github.io/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/2014/03/15/marketers_story</id>
   <content type="html">&lt;p&gt;机械战警是近期的一部热播影片，作为好莱坞的商业片，剧情中除了充斥枪战科幻这些元素外，也包含了一些搞笑桥段，大部分搞笑桥段都是来自Pope（即OmniCorp公司市场部总管）。让我们跟随Pope的视角来看一下整部影片，轻微剧透，不喜勿入。&lt;/p&gt;

&lt;p&gt;其实RobotCop最初是来自于Pope卖给大Boss的提高销售额的一个Idea：将机器人的应用到国内警察市场可以每年获得6000亿美元的收入，利润率上升60%。（感兴趣的同学可以等高清版出来后，研究一下背景中的数据，看一下Pope是如何将这个Idea兜售给Boss的。）&lt;/p&gt;

&lt;p&gt;&amp;lt; img src=&amp;quot;/files/idea1.png&amp;quot; alt=&amp;quot;idea1&amp;quot; width=&amp;quot;400px&amp;quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/idea2.png&quot; alt=&quot;idea2&quot;&gt;&lt;/p&gt;

&lt;p&gt;Pope要带领他的Team打一个大的Campaign来改变美国民众对将机器人应用国内执法的看法。不过，这里Pope只给出要做一个Campaign的理由，而没有给出具体的Proposal，结果演变成Boss与法务（好吧，我也不知道这位女士到底是干什么的），讨论具体的Campaign内容，最终由大Boss拍板：既然美国民众不喜欢机器，那我们就把一个人放到机器里面。RobotCop项目诞生了，有木有~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/idea3.png&quot; alt=&quot;roborcop&quot;&gt;&lt;/p&gt;

&lt;p&gt;确定了Campaign的大方向后，接下来是具体是执行部分，第一步是找到把什么人放入机器中，Pope在这个过程很好的发挥了搞笑的作用。他选择几个候选人都存在这样那样的问题，体重超标的大胖子，严重脑损伤，情绪容易激动等等。还好后来找到了墨菲，不过是不是由Pope找到就不得而知了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/choose_candidate.png&quot; alt=&quot;choose_candidate&quot;&gt;&lt;/p&gt;

&lt;p&gt;经过了三个月的改造，墨菲终于要与世人见面了，Pope又来与大老板商量一下墨菲的外观，给Boss提了两个点后（震慑匪徒，变形博儿童喜欢），Boss说我想更Mans点，涂成黑色吧，于是墨菲变成了黑色。&lt;/p&gt;

&lt;p&gt;后面就是墨菲关于复仇，自由意志的这些桥段，Pope在其中扮演的搞笑的作用，其一是听到墨菲在报私仇，Pope由衷的感叹道：他真是个天才，我怎么没想到，元芳你怎么看？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/genius.png&quot; alt=&quot;genius&quot;&gt;&lt;/p&gt;

&lt;p&gt;另外一处是在片尾的正义邪恶大对决，Pope在面对墨菲的枪口时，说出了：我只是在做Marketing。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/marketing.png&quot; alt=&quot;marketing&quot;&gt;&lt;/p&gt;

&lt;p&gt;话说导演是有多讨厌广告人。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>用Pandas作图</title>
   <link href="http://cloga.github.io/python/2014/02/23/Plotting_with_Pandas"/>
   <updated>2014-02-23T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/02/23/Plotting_with_Pandas</id>
   <content type="html">&lt;p&gt;关于Pandas的基本使用介绍，请查看另一篇博文：&lt;a href=&quot;http://cloga.info/python/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/2013/09/17/pandas_intro/&quot;&gt;Python中的结构化数据分析利器-Pandas简介&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;推荐使用ipython的pylab模式，如果要在ipython notebook中嵌入图片，则还需要指定pylab=inline。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ipython&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pylab&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;##ipython的pylab模式&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ipython&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notebook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pylab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;##notebook的inline模式&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;基本画图命令&lt;/h2&gt;

&lt;p&gt;Pandas通过整合&lt;a href=&quot;http://matplotlib.sourceforge.net/&quot;&gt;matplotlib&lt;/a&gt;的相关功能实现了基于DataFrame的一些
作图功能。下面的数据是每年美国男女出生数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://s3.amazonaws.com/assets.datacamp.com/course/dasi/present.txt&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;present&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;present&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(63, 3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Index([u&amp;#39;year&amp;#39;, u&amp;#39;boys&amp;#39;, u&amp;#39;girls&amp;#39;], dtype=&amp;#39;object&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到这个数据集共有63条记录，共有三个字段：Year，boys，girls。为了简化计算将year作为索引。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;present&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;plot是画图的最主要方法，Series和DataFrame都有plot方法。&lt;/p&gt;

&lt;p&gt;可以这样看一下男生出生比例的趋势图：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;boys&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.legend.Legend at 0x10b9c7610&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_9_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;这是Series上的plot方法，通过DataFrame的plot方法，你可以将男生和女生出生数量的趋势图画在一起。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x108ce4910&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_11_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;girls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.legend.Legend at 0x10999e510&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_12_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;可以看到DataFrame提供plot方法与在多个Series调用多次plot方法的效果是一致。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x10ab31390&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_14_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;plot默认生成是曲线图，你可以通过kind参数生成其他的图形，可选的值为：line, bar, barh, kde, density, scatter。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x10bb35890&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_16_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;barh&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x10eb01890&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_17_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;如果你需要累积的柱状图，则只需要指定stacked=True。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stacked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x10bbdb3d0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_19_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;制作相对的累积柱状图，需要一点小技巧。&lt;/p&gt;

&lt;p&gt;首先需要计算每一行的汇总值，可以在DataFrame上直接调用sum方法，参数为1，表示计算行的汇总。默认为0，表示计算列的汇总。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;year
1940    2360399
1941    2513427
1942    2808996
1943    2936860
1944    2794800
dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有了每一行的汇总值之后，再用每个元素除以对应行的汇总值就可以得出需要的数据。这里可以使用DataFrame的div函数，同样要指定axis的值为0。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;barh&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stacked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x113223290&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_23_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;h1&gt;散点图和相关&lt;/h1&gt;

&lt;p&gt;plot也可以画出散点图。使用kind=&amp;#39;scatter&amp;#39;, x和y指定x轴和y轴使用的字段。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;present_year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;boys&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;girls&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;scatter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x1141c9810&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_25_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;再来载入一下鸢尾花数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;url_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;https://raw.github.com/pydata/pandas/master/pandas/tests/data/iris.csv&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;SepalLength&lt;/th&gt;
      &lt;th&gt;SepalWidth&lt;/th&gt;
      &lt;th&gt;PetalLength&lt;/th&gt;
      &lt;th&gt;PetalWidth&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt; 5.1&lt;/td&gt;
      &lt;td&gt; 3.5&lt;/td&gt;
      &lt;td&gt; 1.4&lt;/td&gt;
      &lt;td&gt; 0.2&lt;/td&gt;
      &lt;td&gt; Iris-setosa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt; 4.9&lt;/td&gt;
      &lt;td&gt; 3.0&lt;/td&gt;
      &lt;td&gt; 1.4&lt;/td&gt;
      &lt;td&gt; 0.2&lt;/td&gt;
      &lt;td&gt; Iris-setosa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt; 4.7&lt;/td&gt;
      &lt;td&gt; 3.2&lt;/td&gt;
      &lt;td&gt; 1.3&lt;/td&gt;
      &lt;td&gt; 0.2&lt;/td&gt;
      &lt;td&gt; Iris-setosa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt; 4.6&lt;/td&gt;
      &lt;td&gt; 3.1&lt;/td&gt;
      &lt;td&gt; 1.5&lt;/td&gt;
      &lt;td&gt; 0.2&lt;/td&gt;
      &lt;td&gt; Iris-setosa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt; 5.0&lt;/td&gt;
      &lt;td&gt; 3.6&lt;/td&gt;
      &lt;td&gt; 1.4&lt;/td&gt;
      &lt;td&gt; 0.2&lt;/td&gt;
      &lt;td&gt; Iris-setosa&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows × 5 columns&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;SepalLength&lt;/th&gt;
      &lt;th&gt;SepalWidth&lt;/th&gt;
      &lt;th&gt;PetalLength&lt;/th&gt;
      &lt;th&gt;PetalWidth&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;SepalLength&lt;/th&gt;
      &lt;td&gt; 1.000000&lt;/td&gt;
      &lt;td&gt;-0.109369&lt;/td&gt;
      &lt;td&gt; 0.871754&lt;/td&gt;
      &lt;td&gt; 0.817954&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;SepalWidth&lt;/th&gt;
      &lt;td&gt;-0.109369&lt;/td&gt;
      &lt;td&gt; 1.000000&lt;/td&gt;
      &lt;td&gt;-0.420516&lt;/td&gt;
      &lt;td&gt;-0.356544&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;PetalLength&lt;/th&gt;
      &lt;td&gt; 0.871754&lt;/td&gt;
      &lt;td&gt;-0.420516&lt;/td&gt;
      &lt;td&gt; 1.000000&lt;/td&gt;
      &lt;td&gt; 0.962757&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;PetalWidth&lt;/th&gt;
      &lt;td&gt; 0.817954&lt;/td&gt;
      &lt;td&gt;-0.356544&lt;/td&gt;
      &lt;td&gt; 0.962757&lt;/td&gt;
      &lt;td&gt; 1.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;4 rows × 4 columns&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas.tools.plotting&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scatter_matrix&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scatter_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diagonal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;kde&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[&amp;lt;matplotlib.axes.AxesSubplot object at 0x1141e5290&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114313610&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x11433fbd0&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114328e10&amp;gt;],
       [&amp;lt;matplotlib.axes.AxesSubplot object at 0x11411f350&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114198690&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114181b90&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x11436eb90&amp;gt;],
       [&amp;lt;matplotlib.axes.AxesSubplot object at 0x11438ced0&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114378310&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x1143e34d0&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114d0a810&amp;gt;],
       [&amp;lt;matplotlib.axes.AxesSubplot object at 0x1143ecd50&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114d40e90&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114d63210&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x114d4a2d0&amp;gt;]], dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_29_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;h1&gt;箱图&lt;/h1&gt;

&lt;p&gt;DataFrame提供了boxplot方法可以用来画箱图。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boxplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{&amp;#39;boxes&amp;#39;: [&amp;lt;matplotlib.lines.Line2D at 0x1141439d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11416c1d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x1141559d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11414b210&amp;gt;],
 &amp;#39;caps&amp;#39;: [&amp;lt;matplotlib.lines.Line2D at 0x11416af90&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x1141434d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114172790&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114172c90&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114153f90&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x1141554d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11414f7d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11414fcd0&amp;gt;],
 &amp;#39;fliers&amp;#39;: [&amp;lt;matplotlib.lines.Line2D at 0x114145410&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114145b50&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11416cbd0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x1141530d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114151410&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114151b90&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11414bc10&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x1141743d0&amp;gt;],
 &amp;#39;medians&amp;#39;: [&amp;lt;matplotlib.lines.Line2D at 0x114143ed0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11416c6d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114155ed0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11414b710&amp;gt;],
 &amp;#39;whiskers&amp;#39;: [&amp;lt;matplotlib.lines.Line2D at 0x11416a7d0&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11416aa10&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114172050&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114172290&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114153590&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x114153a90&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11414f090&amp;gt;,
  &amp;lt;matplotlib.lines.Line2D at 0x11414f2d0&amp;gt;]}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_31_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;通过by参数可以计算不同分组情况下，各个字段的箱图。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boxplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array([[&amp;lt;matplotlib.axes.AxesSubplot object at 0x120dd8f50&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x1218d3410&amp;gt;],
       [&amp;lt;matplotlib.axes.AxesSubplot object at 0x1218f47d0&amp;gt;,
        &amp;lt;matplotlib.axes.AxesSubplot object at 0x1218de490&amp;gt;]], dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_33_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;h1&gt;直方图和概率密度分布&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;kde&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x117263890&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_35_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_35_2.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;h1&gt;多变量的可视化&lt;/h1&gt;

&lt;p&gt;Radviz&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas.tools.plotting&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radviz&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;radviz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x11412e550&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_38_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Andrews Curves&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas.tools.plotting&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;andrews_curves&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;andrews_curves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x1218e2d50&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_40_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Parallel Coordinates&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas.tools.plotting&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parallel_coordinates&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parallel_coordinates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;matplotlib.axes.AxesSubplot at 0x1224b36d0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/Plotting_with_Pandas_files/Plotting_with_Pandas_42_1.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;

&lt;p&gt;你也可以查看本文的ipython notebook版本：http://nbviewer.ipython.org/gist/cloga/9171281&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>用Sklearn做判别分析(分类)</title>
   <link href="http://cloga.github.io/python/2014/02/07/classify_use_Sklearn"/>
   <updated>2014-02-07T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/02/07/classify_use_Sklearn</id>
   <content type="html">&lt;h1&gt;加载数据集&lt;/h1&gt;

&lt;p&gt;这里我使用pandas来加载数据集，数据集采用&lt;a href=&quot;https://www.kaggle.com/c/titanic-%0AgettingStarted/data&quot;&gt;kaggle的titanic的数据集&lt;/a&gt;，下载train.csv。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;train.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#将缺失值都替换为0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;PassengerId&lt;/th&gt;
      &lt;th&gt;Survived&lt;/th&gt;
      &lt;th&gt;Pclass&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Sex&lt;/th&gt;
      &lt;th&gt;Age&lt;/th&gt;
      &lt;th&gt;SibSp&lt;/th&gt;
      &lt;th&gt;Parch&lt;/th&gt;
      &lt;th&gt;Ticket&lt;/th&gt;
      &lt;th&gt;Fare&lt;/th&gt;
      &lt;th&gt;Cabin&lt;/th&gt;
      &lt;th&gt;Embarked&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt;                           Braund, Mr. Owen Harris&lt;/td&gt;
      &lt;td&gt;   male&lt;/td&gt;
      &lt;td&gt; 22&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt;        A/5 21171&lt;/td&gt;
      &lt;td&gt;  7.2500&lt;/td&gt;
      &lt;td&gt;    0&lt;/td&gt;
      &lt;td&gt; S&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; Cumings, Mrs. John Bradley (Florence Briggs Th...&lt;/td&gt;
      &lt;td&gt; female&lt;/td&gt;
      &lt;td&gt; 38&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt;         PC 17599&lt;/td&gt;
      &lt;td&gt; 71.2833&lt;/td&gt;
      &lt;td&gt;  C85&lt;/td&gt;
      &lt;td&gt; C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt;                            Heikkinen, Miss. Laina&lt;/td&gt;
      &lt;td&gt; female&lt;/td&gt;
      &lt;td&gt; 26&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt; STON/O2. 3101282&lt;/td&gt;
      &lt;td&gt;  7.9250&lt;/td&gt;
      &lt;td&gt;    0&lt;/td&gt;
      &lt;td&gt; S&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt; 4&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt;      Futrelle, Mrs. Jacques Heath (Lily May Peel)&lt;/td&gt;
      &lt;td&gt; female&lt;/td&gt;
      &lt;td&gt; 35&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt;           113803&lt;/td&gt;
      &lt;td&gt; 53.1000&lt;/td&gt;
      &lt;td&gt; C123&lt;/td&gt;
      &lt;td&gt; S&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt; 5&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt;                          Allen, Mr. William Henry&lt;/td&gt;
      &lt;td&gt;   male&lt;/td&gt;
      &lt;td&gt; 35&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt; 0&lt;/td&gt;
      &lt;td&gt;           373450&lt;/td&gt;
      &lt;td&gt;  8.0500&lt;/td&gt;
      &lt;td&gt;    0&lt;/td&gt;
      &lt;td&gt; S&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows × 12 columns&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;891
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到训练集中共有891条记录，有12个列（其中一列Survived是目标分类）。将数据集分为特征集和目标分类集，两个DataFrame。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;exc_cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;PassengerId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;Survived&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exc_cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Survived&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于Sklearn为了效率，接受的特征数据类型是dtype=np.float32以便获得最佳的算法效率。因此，对于类别类型的特征就需要转化为向量。Sklearn
提供了DictVectorizer类将类别的特征转化为向量。DictVectorizer接受记录的形式为字典的列表。因此需要用pandas的to_dict方法转
换DataFrame。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DictVectorizer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DictVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;records&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;让我们比较一下同一个实例的原始信息及向量化后的结果。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Vectorized:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Unvectorized:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inverse_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Vectorized: [ 4.  0.  0. ...,  0.  0.  0.]
Unvectorized: [{&amp;#39;Fare&amp;#39;: 16.699999999999999, &amp;#39;Name=Sandstrom, Miss. Marguerite Rut&amp;#39;: 1.0, &amp;#39;Embarked=S&amp;#39;: 1.0, &amp;#39;Age&amp;#39;: 4.0, &amp;#39;Sex=female&amp;#39;: 1.0, &amp;#39;Parch&amp;#39;: 1.0, &amp;#39;Pclass&amp;#39;: 3.0, &amp;#39;Ticket=PP 9549&amp;#39;: 1.0, &amp;#39;Cabin=G6&amp;#39;: 1.0, &amp;#39;SibSp&amp;#39;: 1.0, &amp;#39;PassengerId&amp;#39;: 11.0}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果分类的标签也是字符的，那么就还需要用&lt;a href=&quot;http://scikit-learn.org/stable/modules/genera%0Ated/sklearn.preprocessing.LabelEncoder.html&quot;&gt;LabelEncoder&lt;/a&gt;方法进行转化。&lt;/p&gt;

&lt;p&gt;将数据集分成训练集和测试集。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.cross_validation&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;668
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;223
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认是以数据集的25%作为测试集。到这里为止，用于训练和测试的数据集都已经准备好了。&lt;/p&gt;

&lt;h1&gt;用Sklearn做判别分析&lt;/h1&gt;

&lt;h2&gt;Sklearn训练模型的基本流程&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Model = EstimatorObject()
Model.fit(dataset.data, dataset.target)
dataset.data = dataset
dataset.target = labels
Model.predict(dataset.data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里选择&lt;a href=&quot;http://scikit-learn.org/stable/modules/naive_bayes.html#gaussian-%0Anaive-bayes&quot;&gt;朴素贝叶斯&lt;/a&gt;、&lt;a href=&quot;http://scikit-%0Alearn.org/stable/modules/tree.html#classification&quot;&gt;决策树&lt;/a&gt;、&lt;a href=&quot;http://scikit-learn.or%0Ag/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html&quot;&gt;随机森林&lt;/a&gt;和&lt;a href=&quot;h%0Attp://scikit-learn.org/stable/modules/svm.html#classification&quot;&gt;SVM&lt;/a&gt;来做一个对比。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cross_validation&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.naive_bayes&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GaussianNB&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.ensemble&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomForestClassifier&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;bayes&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GaussianNB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tree&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DecisionTreeClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;forest_100&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomForestClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_estimators&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;forest_10&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RandomForestClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_estimators&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;svm_c_rbf&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;svm_c_linear&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;svm_linear&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LinearSVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;svm_nusvc&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NuSVC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先是定义各个model所用的算法。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;----&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;----&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Score: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%0.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cross_validation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cross_val_score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Cross Avg. Score: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%0.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (+/- &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%0.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;end_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time_spend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_time&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Time: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%0.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_spend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;----svm_c_rbf----
svm_c_rbf Score: 0.63
svm_c_rbf Cross Avg. Score: 0.54 (+/- 0.18)
svm_c_rbf Time: 1.67
----tree----
tree Score: 0.81
tree Cross Avg. Score: 0.75 (+/- 0.09)
tree Time: 0.90
----forest_10----
forest_10 Score: 0.83
forest_10 Cross Avg. Score: 0.80 (+/- 0.10)
forest_10 Time: 0.56
----forest_100----
forest_100 Score: 0.84
forest_100 Cross Avg. Score: 0.80 (+/- 0.14)
forest_100 Time: 5.38
----svm_linear----
svm_linear Score: 0.74
svm_linear Cross Avg. Score: 0.65 (+/- 0.18)
svm_linear Time: 0.15
----svm_nusvc----
svm_nusvc Score: 0.63
svm_nusvc Cross Avg. Score: 0.55 (+/- 0.21)
svm_nusvc Time: 1.62
----bayes----
bayes Score: 0.44
bayes Cross Avg. Score: 0.47 (+/- 0.07)
bayes Time: 0.16
----svm_c_linear----
svm_c_linear Score: 0.83
svm_c_linear Cross Avg. Score: 0.79 (+/- 0.14)
svm_c_linear Time: 465.57
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里通过算法的score方法及cross_validation来计算预测的准确性。&lt;/p&gt;

&lt;p&gt;可以看到准确性比较高的算法需要的时间也会增加。性价比较高的算法是随机森林。
让我们用kaggle给出的test.csv的数据集测试一下。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;test_d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;records&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test_vec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里需要注意的是test的数据也需要经过同样的DictVectorizer转换。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;estimators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Survived&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Survived&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;PassengerId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好了，向Kaggle提交你的结果吧~&lt;/p&gt;

&lt;p&gt;你可以查看&lt;a href=&quot;http://nbviewer.ipython.org/gist/cloga/8862733&quot;&gt;本文的ipython notebook版本&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>分类-Orange教程</title>
   <link href="http://cloga.github.io/python/2014/02/01/classification_with_organce"/>
   <updated>2014-02-01T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/02/01/classification_with_organce</id>
   <content type="html">&lt;h1&gt;分类&lt;/h1&gt;

&lt;p&gt;Orange的很大一部分是关于机器学习的分类方法或者说监督式数据挖掘。这些方法依赖于带有类别标签实例的数据，类似于议会选举的数据。这是加载这个数据集的代码，显示第一个数据实例，并且显示它的预测类（共和党）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;voting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;republican&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;party&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;republican&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;学习器（Learners）和 分类器（Classifiers）&lt;/h1&gt;

&lt;p&gt;分类使用两个对象：学习器和分类器。学习器评估分类标签数据，并返回一个分类器。给定一个数据实例（一个特征向量），分类器返回一个预测的类别:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Orange&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;voting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;learner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;party&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;republican&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面，我们读取数据，构建了一个[朴素贝叶斯学习器]，给它这个数据集并构建了一个分类器，并用它预测了第一个数据的类别。我们在接下来的代码也采用同样的思路，来预测数据集中前5个实例的类别：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%10s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;; originally &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个脚本的输出如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;republican; originally republican
republican; originally republican
republican; originally democrat
  democrat; originally democrat
  democrat; originally democrat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;朴素的贝叶斯分类器在第三个实例上犯了个错误，但是其他的预测都是准确的。不需要惊讶，因为分类器就是在这个数据集上训练的。&lt;/p&gt;

&lt;h1&gt;概率分类&lt;/h1&gt;

&lt;p&gt;想要知道分类器分配的概率，比如说，民主党，我们需要使用额外的参数来调用分类器，这个额外的参数指定了输出的类型。如果指定了Orange.classification.Classifier.GetProbabilities，分类器将输出类别的概率:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Probabilities for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetProbabilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%5.3f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;; originally &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个脚本的输出也显示出朴素贝叶斯分类器对于第三个数据的分类是多么糟糕：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Probabilities for democrat:
0.000; originally republican
0.000; originally republican
0.005; originally democrat
0.998; originally democrat
0.957; originally democrat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;交叉验证&lt;/h1&gt;

&lt;p&gt;像我们上面这样在训练集上验证分类器通常都只是为了演示的目的。任何评估准确性的效能指标都需要在独立的测试集上进行。这个过程也称为交叉验证，多次运行的平均效果来预测，每次都使用来自原始数据集抽样的不同训练和测试子集：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;voting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cross_validation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Accuracy: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scoring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;AUC:      &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scoring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AUC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;交叉验证需要的是一系列学习器。效果的预测器（estimators）也返回一个分数的列表，一个学习器一个分数。因为上面的脚本只有一个学习器，因此使用的列表长度为1.脚本估计了分类准确性和ROC曲线下的面积。后者的分数相当高，表明朴素贝叶斯学习器在议会选举数据集上表现非常好：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Accuracy: 0.90
AUC:      0.97
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;一组分类器&lt;/h1&gt;

&lt;p&gt;Orange包含广泛的分类算法，包含：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;logistic回归（logistic regression）(Orange.classification.logreg)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;k-nearest neighbors (Orange.classification.knn)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持向量机（support vector machines） (Orange.classification.svm)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分类树 (Orange.classification.tree)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分类规则 (Orange.classification.rules)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些算法中的一些包含在了下面的代码中，下面的代码预估了测试数据的目标类型的概率。这次，训练和测试数据集是分开的：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Orange&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;voting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regression&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TreeLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;same_majority_pruning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_pruning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;tree&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;knn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;knn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kNNLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;knn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;k-NN&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogRegLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;lr&amp;quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;classifiers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;knn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Probabilities for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;original class &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%-9s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifiers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;return_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetProbabilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%-15s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;     &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%5.3f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifiers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于这五个数据，所观察的分类算法间没有很大的差异：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Probabilities for republican:
original class  tree      k-NN      lr
republican      0.949     1.000     1.000
republican      0.972     1.000     1.000
democrat        0.011     0.078     0.000
democrat        0.015     0.001     0.000
democrat        0.015     0.032     0.000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面的代码交叉验证了一些学习器。注意这些代码与上面代码的不同。交叉验证需要学习器，而在上面的脚本中，直接将数据给盗了学习器，并且调用了返回的分类器。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Orange&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;voting&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TreeLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sameMajorityPruning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mForPruning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;tree&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nbc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nbc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;nbc&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogRegLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;lr&amp;quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nbc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%-4s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learner&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cross_validation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Accuracy &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scoring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;AUC      &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scoring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AUC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在ROC曲线的面积方面Logistic regression获胜：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;         nbc  tree lr
Accuracy 0.90 0.95 0.94
AUC      0.97 0.94 0.99
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;报告分类模型&lt;/h1&gt;

&lt;p&gt;分类模型是对象，暴露了结构的每个组成部分。例如，你可以用代码反转分类树，并且观察相关的数据实例，可能性和条件。但是，通常提供模型的文本形式输出就足够了。对于logistic回归和决策树，可以用下面的代码说明：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Orange&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;titanic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LogRegLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logreg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TreeLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;logistic回归部分的输出为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class attribute = survived
class values = &amp;lt;no, yes&amp;gt;

      Feature       beta  st. error     wald Z          P OR=exp(beta)

    Intercept      -1.23       0.08     -15.15      -0.00
 status=first       0.86       0.16       5.39       0.00       2.36
status=second      -0.16       0.18      -0.91       0.36       0.85
 status=third      -0.92       0.15      -6.12       0.00       0.40
    age=child       1.06       0.25       4.30       0.00       2.89
   sex=female       2.42       0.14      17.04       0.00      11.25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;决策树可以用dot输出树形图：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0.dot&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ellipse&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leaf_shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;box&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下图显示了树形图的样例：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://orange.biolab.si/docs/latest/_images/tree.png&quot; alt=&quot;A graphical presentation of a classification tree&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://orange.biolab.si/docs/latest/tutorial/rst/classification/&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>gensim文档-相似性查询</title>
   <link href="http://cloga.github.io/python/2014/01/28/Gensim_Similarity_Queries"/>
   <updated>2014-01-28T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/01/28/Gensim_Similarity_Queries</id>
   <content type="html">&lt;p&gt;如果你想要查看logging事件不要忘记设置。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basicConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(asctime)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(levelname)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(message)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;相似性接口&lt;/h1&gt;

&lt;p&gt;在前面语料与向量空间的教程及主题和转换的教程中，我们涵盖了什么是在向量空间中创建一个语料库以及如何在不同的向量空间间转换。绕这样一个圈子的原因是我们想要判断一堆文档的相似性，或者特定文档与一组其他文档的相似性（比如用户查询 vs. 索引文档）。&lt;/p&gt;

&lt;p&gt;为了展示gensim如何做到这一点，让我们看一下前面例子中语料（最初来自Deerwester等的&lt;a href=&quot;http://www.cs.bham.ac.uk/%7Epxt/IDA/lsa_ind.pdf&quot;&gt;“Indexing by Latent Semantic Analysis” seminal 1990 article&lt;/a&gt;）:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gensim&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;similarities&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.dict&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.mm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 来自一篇教程“从字符到向量”&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;遵循Deerwester的例子，我们首先使用这个小样本语料定义一个二维的LSI空间：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LsiModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id2word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_topics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在假设用户输入查询“Human computer interaction”。我们会想要以与查询相似度降序排列我们的9个语料。与现代搜索引擎不同，这里我们只关注可能相似的一个方面-文档（词）的表面抑郁相关。没有超链接，静态排名的随机游走，只有在布尔关键词匹配的语义扩展：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Human computer interaction&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vec_bow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc2bow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vec_lsi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec_bow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# convert the query to LSI space&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec_lsi&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.461821&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.070028&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此外，我们将用余弦相似性来决定两个向量间的相似性。余弦相似性是向量空间模型中的标准度量，但是，当向量代表概率分布时，不同的相似性度量可能更适合。&lt;/p&gt;

&lt;h1&gt;初始化查询结构&lt;/h1&gt;

&lt;p&gt;要准备相似性查询，我们需要输入所有想要与随后的查询比较的所有文档。在这种情况下，还是用于训练LSI的9个文档被转化为二维空间。但是，这只是偶然，我们也可能索引不同的的语料。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;similarities&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MatrixSimilarity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 将语料转换为LSI，并索引&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;警告&lt;/h2&gt;

&lt;p&gt;similarities.MatrixSimilarity这个类只适用于所有语料可以放入内存的情况。例如，使用这个类，256维的LSI空间中的100万文档会需要2G的内存。&lt;/p&gt;

&lt;p&gt;如果没有2G的可用内存，你需要使用similarities.Similarity类。这个类通过在硬盘的多个文件上分割索引，这些文件称为 shards，使用固定内存运行。它在内部使用similarities.MatrixSimilarity及similarities.SparseMatrixSimilarity，因此，仍然很快，尽管有点更加复杂。&lt;/p&gt;

&lt;p&gt;索引的持久化通过标准的save()和load()函数处理：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;similarities&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MatrixSimilarity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所有的索引类都是这样的（similarities.Similarity, similarities.MatrixSimilarity和similarities.SparseMatrixSimilarity)。接下来这些也是，索引可以是这类中的任何一个对象。如果不确定，使用similarities.Similarity，因为这是扩展性最好的版本，并且它还支持后续为索引添加更多的文档。&lt;/p&gt;

&lt;h1&gt;进行查询&lt;/h1&gt;

&lt;p&gt;获得查询文档对9个索引文档的相似性：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;sims&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec_lsi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 进行语料的相似查询&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 打印(document_number, document_similarity) 2-tuples&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.99809301&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.93748635&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.99844527&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9865886&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.90755945&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.12416792&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1063926&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.098794639&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05004178&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;余弦度量返回的的相似性在&amp;lt;-1,1&amp;gt;之前（越大越相似），因此，第一个文档的总分为0.99809301。&lt;/p&gt;

&lt;p&gt;使用类似的标准Python魔法，我们可以将相似性降序排列，获得“Human computer interaction”查询的最终答案:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;sims&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sims&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 打印排序的 (document number, similarity score) 2-tuples&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.99844527&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# The EPS user interface management system&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.99809301&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Human machine interface for lab abc computer applications&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.9865886&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# System and human system engineering testing of EPS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.93748635&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# A survey of user opinion of computer system response time&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.90755945&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Relation of user perceived response time to error measurement&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.050041795&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Graph minors A survey&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.098794639&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Graph minors IV Widths of trees and well quasi ordering&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1063926&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# The intersection graph of paths in trees&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.12416792&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# The generation of random binary unordered trees&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（为了更清晰，我在输出中用评论添加了原始文档的”字符形式”。）&lt;/p&gt;

&lt;p&gt;这里注意的是第二号（&amp;quot;The EPS user interface management system&amp;quot;)及第四号（&amp;quot;Relation of user perceived response time to error measurement&amp;quot;）文档永远也不会返回一个标准的布尔全文搜索，因为它们与&amp;quot;Human computer interaction&amp;quot;没有相同的词。但是，应用LSI后，我们可以看到他们获得了很高的相似性分数（二号实际上是最相似！），更好的反映了我们的直觉，他们与查询都是关于“计算机-人类”这个话题。事实上，这句语言概括也是首先应用主题建模的原因。&lt;/p&gt;

&lt;h1&gt;接下来是什么？&lt;/h1&gt;

&lt;p&gt;祝贺你，你完成了教程-现在你知道了gensim如何工作:-)要研究更多细节，你需要看一下&lt;a href=&quot;http://radimrehurek.com/gensim/apiref.html&quot;&gt;API文档&lt;/a&gt;，查看&lt;a href=&quot;http://radimrehurek.com/gensim/wiki.html&quot;&gt;维基百科实验&lt;/a&gt;或者看一下gensim中&lt;a href=&quot;http://radimrehurek.com/gensim/distributed.html&quot;&gt;分布计算&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Gensim是相当成熟的包，被许多个人和公司成功应用，无论是快速原型还是在生产环境。
但是，这不意味这它是完美的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;有许多部分应该更有效的实现（比如说用C），或者使用更好的并行机制（多核）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新算法层出不穷；通过&lt;a href=&quot;http://groups.google.com/group/gensim&quot;&gt;讨论&lt;/a&gt;帮助gensim保持更新并且&lt;a href=&quot;https://github.com/piskvorky/gensim/wiki/Developer-page&quot;&gt;贡献代码&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;非常欢迎和感激你的反馈（不仅仅是代码！）：贡献思想、报告bug或者&lt;a href=&quot;http://groups.google.com/group/gensim/topics&quot;&gt;考虑共享用户故事和一般问题&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gensim没有野心称为一个无所不包的框架，涉及所有NLP（甚至机器学习）的领域。它的使命是帮助NLP从业者轻松在大数据集上尝试流行主题建模算法，并且帮助研究者设计算法原型。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://radimrehurek.com/gensim/tut3.html&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>gensim文档-主题与转换</title>
   <link href="http://cloga.github.io/python/2014/01/27/Gensim_Topics_and_Transformations"/>
   <updated>2014-01-27T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/01/27/Gensim_Topics_and_Transformations</id>
   <content type="html">&lt;p&gt;如果你想要查看logging事件不要忘记设置。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basicConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(asctime)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(levelname)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(message)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;转化接口&lt;/h1&gt;

&lt;p&gt;在前面的&lt;a href=&quot;http://cloga.info/python/2014/01/27/Gensim_Corpora_and_Vector_Spaces&quot;&gt;语料和向量空间&lt;/a&gt;的教程中，我们创建了一个文档语料，用向量流来表征。接下来，让我们发动 gensim使用那些语料：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gensim&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;similarities&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.dict&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.mm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这个教程中，我将展示如何从一个向量表征转化为另一个向量。这个过程服务于两个目的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;显示出语料中的隐藏结构，发现词的关系，用他们以一种新的（希望是）更语义的方式来描述文档。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让文档表征更紧凑。这既可以改善效率（新表征消耗更少的资源）也可以改善效力（忽略边际数据趋势，降低噪音）。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;创建转换&lt;/h1&gt;

&lt;p&gt;转换是标准的Python对象，通常用训练语料的平均数初始化：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TfidfModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 第一步--初始化一个模型&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们用教程1的旧语料来初始化（训练）转换模型。不同的转换需要不同的初始化参数；假如是TfIdf，“训练”包括简单过一次提供的语料以及文档所有特征的频率。训练其他模型，比如潜在语义分析(Latent Semantic Analysis，LSA)或Latent Dirichlet Allocation（LDA），更加复杂，因此也需要更多的时间。&lt;/p&gt;

&lt;p&gt;注意&lt;/p&gt;

&lt;p&gt;转换通常在两个具体的向量空间中转化。相同的向量空间（等于相同的特征ids）必须被用于训练和接下来的向量转换。不使用相同的输入特征空间，比如，应用一个不同的字符预处理，使用不同的特征 ids，或者在期望Tfidf向量时使用词袋作为输入向量，将导致转换调用时特征错配，因此，产生垃圾输出和或者运行异常。&lt;/p&gt;

&lt;h1&gt;转换向量&lt;/h1&gt;

&lt;p&gt;从这里开始，tfidf被作为一个只读的对象，可以被用于将任意向量从旧表征（词袋整数计数）转化为新表征（TfIdf实值加权）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;doc_bow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc_bow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 第二步--用模型转换向量&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.70710678&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.70710678&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者在整个语料上应用转换：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus_tfidf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus_tfidf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.57735026918962573&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.57735026918962573&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.57735026918962573&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.44424552527467476&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.44424552527467476&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.44424552527467476&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.32448702061385548&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.44424552527467476&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.32448702061385548&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5710059809418182&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.41707573620227772&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.41707573620227772&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5710059809418182&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.49182558987264147&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.71848116070837686&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.49182558987264147&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.62825804686700459&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.62825804686700459&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.45889394536615247&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.70710678118654746&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.70710678118654746&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.50804290089167492&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.50804290089167492&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.69554641952003704&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.62825804686700459&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.45889394536615247&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.62825804686700459&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这个特殊的案例中，我们转换了训练用的语料，但是，这只是偶然。一旦转化模型被初始化后，它可以被用于任何向量（当然，假如他们来自相同的向量空间），即使他们根本没有被用于训练语料。这在LSA中通过成为折叠的过程实现，在LDA通过主题推断等等。&lt;/p&gt;

&lt;p&gt;注意&lt;/p&gt;

&lt;p&gt;调用model[语料]只是在旧语料文档流创建了一个封装器 - 实际上转化是在文档迭代时即时完成的。我们不能在调用corpus&lt;em&gt;transformed = model[corpus]时转化整个语料库，因为，这意味着将结果存储在主内存中，这与gensim内存独立的目的相悖。如果你需要在转换后的corpus&lt;/em&gt;transformed多次迭代，那么转换是代价昂贵的，&lt;a href=&quot;http://radimrehurek.com/gensim/tut1.html#corpus-formats&quot;&gt;先系列化结果语料库到硬盘&lt;/a&gt;，然后继续使用。&lt;/p&gt;

&lt;p&gt;转换也能被序列化，一个叠一个，以一种链式：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LsiModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus_tfidf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id2word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_topics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 初始化一个LSI转换&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;corpus_lsi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus_tfidf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 在原始语料上创建一个双重封装器: bow-&amp;gt;tfidf-&amp;gt;fold-in-lsi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里我们用潜在语义索引（&lt;a href=&quot;http://en.wikipedia.org/wiki/Latent_semantic_indexing&quot;&gt;Latent Semantic Indexing&lt;/a&gt;）将我们的Tf-Idf语料库转换到潜在2-D空间（2-D因为我们设置 num&lt;em&gt;topics=2）。现在你可以觉得奇怪：这两个潜在维度是什么？让我们检查一下models.LsiModel.print&lt;/em&gt;topics():&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_topics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#0(1.594): -0.703*&amp;quot;trees&amp;quot; + -0.538*&amp;quot;graph&amp;quot; + -0.402*&amp;quot;minors&amp;quot; + -0.187*&amp;quot;survey&amp;quot; + -0.061*&amp;quot;system&amp;quot; + -0.060*&amp;quot;response&amp;quot; + -0.060*&amp;quot;time&amp;quot; + -0.058*&amp;quot;user&amp;quot; + -0.049*&amp;quot;computer&amp;quot; + -0.035*&amp;quot;interface&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#1(1.476): -0.460*&amp;quot;system&amp;quot; + -0.373*&amp;quot;user&amp;quot; + -0.332*&amp;quot;eps&amp;quot; + -0.328*&amp;quot;interface&amp;quot; + -0.320*&amp;quot;response&amp;quot; + -0.320*&amp;quot;time&amp;quot; + -0.293*&amp;quot;computer&amp;quot; + -0.280*&amp;quot;human&amp;quot; + -0.171*&amp;quot;survey&amp;quot; + 0.161*&amp;quot;trees&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(主题被打印在log中-见本页顶部关于激活logging的说明)&lt;/p&gt;

&lt;p&gt;看起来根据LSI，“trees”，“graph” 和 “minors” 都是相关的词（对第一个主题的方向贡献最大），而第二个主题实际上关注自身及其他一些词。和预期类似，前五个文档与第二个主题的联系更近，而剩下的四个文档则更贴近第一个主题：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus_lsi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 在这里，bow-&amp;gt;tfidf 和 tfidf-&amp;gt;lsi 转换实际上都是即时执行的&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.066&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.520&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;Human machine interface for lab abc computer applications&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.197&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.761&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;A survey of user opinion of computer system response time&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.090&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.724&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;The EPS user interface management system&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.076&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.632&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;System and human system engineering testing of EPS&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.102&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.574&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;Relation of user perceived response time to error measurement&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.703&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.161&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;The generation of random binary unordered trees&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.877&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.168&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;The intersection graph of paths in trees&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.910&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.141&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;Graph minors IV Widths of trees and well quasi ordering&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.617&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.054&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &amp;quot;Graph minors A survey&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;模型的持久化通过save()和load()函数完成：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/model.lsi&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# tfidf，lda...也一样&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lsi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LsiModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/model.lsi&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来的问题可能是：那些文档间的相似度究竟是怎么样的？是否有方法正态化相似度，以便，给定一个输入的文档，我们可以根据相似度排序其他文档？&lt;a href=&quot;http://radimrehurek.com/gensim/tut3.html&quot;&gt;下一篇教程&lt;/a&gt;中将涵盖相似度查询。&lt;/p&gt;

&lt;h1&gt;可用的转换&lt;/h1&gt;

&lt;p&gt;Gensim实现了一些流行的向量空间模型算法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Tf%E2%80%93idf&quot;&gt;词频 * 逆向文本概率，Tf-Idf&lt;/a&gt;在初始化时期望词袋（整型值）训练语料库。在转换中，它接收一个向量返回相同维度的另一个向量，只是增大了在训练语料库中罕见特征的值。因此，它将整值的向量转化为实值的向量，同时保持维度数不变。也可以视需要将产生的向量用（欧几里得）单位长度进行正态化。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tfidfmodel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TfidfModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bow_corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Latent_semantic_indexing&quot;&gt;潜在语义索引，LSI（有时也称为LSA）&lt;/a&gt;从词袋或（优先）TfIdf加权的空间转换为低维的潜在空间。对于上面的样本语料库我们只使用了两个潜在的维度，但是，真正的语料库，200-500的目标微博被推荐为“黄金标准”。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lsimodel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LsiModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tfidf_corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id2word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_topics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;LSI的训练是唯一的，我们可以在任意时候继续“训练”，只需要提供更多的训练文档。这是通过为底层模型增加更新达到的，这个过程称为线上训练。因为这个，特征，数据的文档流可能几乎是无限的-只要在新文档到达时喂给LSI就行，同时，将计算完的转换模型作为只读来使用！&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;another_tfidf_corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 现在 LSI 已经在 tfidf_corpus + another_tfidf_corpus 上进行训练&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lsi_vec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tfidf_vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 将新文档转化到LSI空间，而不影响模型&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;more_documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# tfidf_corpus + another_tfidf_corpus + more_documents&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lsi_vec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tfidf_vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关于在无限流中，如何让LSI不断“忘记”旧的观察的细节，请参见&lt;a href=&quot;http://radimrehurek.com/gensim/models/lsimodel.html#module-gensim.models.lsimodel&quot;&gt;gensim.models.lsimodel&lt;/a&gt;文档。如果你想要自己探索，你也可以调整参数，影响LSI算法的速度 vs. 内存占用 vs. 数值精度。&lt;/p&gt;

&lt;p&gt;gensim用一种新颖线上增量流式分布训练算法（好拗口！），我发布在&lt;a href=&quot;http://radimrehurek.com/gensim/tut2.html#id10&quot;&gt;5&lt;/a&gt;。gensim在内部也执行来自Halko等等的随机多通道算法，以便加速核内计算部分。更多关于通过计算集群间的分布计算来进一步加速请见&lt;a href=&quot;http://radimrehurek.com/gensim/wiki.html&quot;&gt;Experiments on the English Wikipedia&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cis.hut.fi/ella/publications/randproj_kdd.pdf&quot;&gt;随机投影，RP&lt;/a&gt;目的是减低向量空间的维数。通过引入一点随机性，这是一个非常高效（内存和CPU友好）的方法来逼近文档间的TfIdf距离，推荐的维数也是几百到几千，取决于你的数据集。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rpmodel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RpModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tfidf_corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_topics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Latent_Dirichlet_allocation&quot;&gt;Latent Dirichlet Allocation, LDA&lt;/a&gt;也是另一个从词袋计数到低维主题空间的转换。LDA是LSA（也称为多项PCA）的概率扩展，因此，LDA的主题可以被解释为词的概率分布。与LSA类似，这些分布是自动由训练语料库推断出来的。反过来，文档可以解释为这些主题的（软性）组合（又和LSA类似）。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldamodel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LdaModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bow_corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id2word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_topics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;根据[&lt;a href=&quot;http://radimrehurek.com/gensim/tut2.html#id7&quot;&gt;2&lt;/a&gt;]gensim使用了线上LDA参数估计的一个快速实现，修改后可以在计算集群上以&lt;a href=&quot;http://radimrehurek.com/gensim/distributed.html&quot;&gt;分布模型&lt;/a&gt;运行。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jmlr.csail.mit.edu/proceedings/papers/v15/wang11a/wang11a.pdf&quot;&gt;Hierarchical Dirichlet Process, HDP&lt;/a&gt;是一个非参数贝叶斯方法（注意没有请求的主题数):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hdpmodel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HdpModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bow_corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id2word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gensim使用了基于[&lt;a href=&quot;http://radimrehurek.com/gensim/tut2.html#id8&quot;&gt;3&lt;/a&gt;]的快速线上实现。HDP模型是gensim一个新增部分，并且它的学术边界仍然较粗糙-小心使用。&lt;/p&gt;

&lt;p&gt;添加新的VSM转换（比如不同的加权方案）非常简单；更多的信息和例子请看一下&lt;a href=&quot;http://radimrehurek.com/gensim/apiref.html&quot;&gt;API参考&lt;/a&gt;或者直接看一下Python代码。&lt;/p&gt;

&lt;p&gt;有必要再重复一下，这些是特有的增量实施，不需要将全部语料库一次读入内存。通过小心处理内存，我正在改善&lt;a href=&quot;http://radimrehurek.com/gensim/distributed.html&quot;&gt;分布计算&lt;/a&gt;，也在改善CPU的效率。如果你可以出一份力（测试，提供使用案例或者代码），&lt;a href=&quot;radimrehurek%40seznam.cz&quot;&gt;请联系原作者&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;下一篇教程是关于&lt;a href=&quot;http://radimrehurek.com/gensim/tut3.html&quot;&gt;相似性查询&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://radimrehurek.com/gensim/tut2.html&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>gensim文档-语料库与向量空间</title>
   <link href="http://cloga.github.io/python/2014/01/27/Gensim_Corpora_and_Vector_Spaces"/>
   <updated>2014-01-27T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/01/27/Gensim_Corpora_and_Vector_Spaces</id>
   <content type="html">&lt;p&gt;如果你想要查看logging事件不要忘记设置。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basicConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(asctime)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(levelname)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(message)s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;从字符到向量&lt;/h1&gt;

&lt;p&gt;这次让我们从文档表征为字符开始：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gensim&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;similarities&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Human machine interface for lab abc computer applications&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;A survey of user opinion of computer system response time&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;The EPS user interface management system&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;System and human system engineering testing of EPS&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;Relation of user perceived response time to error measurement&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;The generation of random binary unordered trees&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;The intersection graph of paths in trees&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;Graph minors IV Widths of trees and well quasi ordering&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;&amp;quot;Graph minors A survey&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是九个文档的小语料库，每个文档只包含一个句子。&lt;/p&gt;

&lt;p&gt;首先，让我们标记化这些文档，删除一些常见词（用一个小停用词表）及在语料库中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# remove common words and tokenize&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stoplist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;for a of the and to in&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stoplist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# remove words that appear only once&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;all_tokens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tokens_once&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens_once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;human&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;interface&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;computer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;survey&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;computer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;response&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;eps&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;interface&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;human&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;eps&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;response&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;trees&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;graph&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;trees&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;graph&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;minors&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;trees&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;graph&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;minors&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;survey&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你处理这些文档的方式可能有些不同；这里我只是用白空格去标记化，接下来将每个词转为小写。事实上，我用这个特别（简单化而低效）的设置来模拟Deerwester等在最初的LSA文章中所做的实验。&lt;/p&gt;

&lt;p&gt;处理文档的方式多种多样并且与用途和语言无关，我决定不用任何接口加以限制。而是，每个文档用从中抽取的特征来表征，而不是由“表面”字符形式：如何获取特征取决于你。下面我描述一个通用的一般目的的方法（称为词袋），但是，记住不同的应用领域要求不同的特征，一如既往，输入一堆垃圾，产出的也必然是一堆垃圾······&lt;/p&gt;

&lt;p&gt;要将文档转化为向量，我们需要使用一种称为词袋的文档表征。在这种表征中，每个文档是由一个向量来表征，每一个向量元素代表一个问题-答案对，形式如下：&lt;/p&gt;

&lt;p&gt;“词汇系统在文档中出现了几次？一次。”&lt;/p&gt;

&lt;p&gt;仅用（整型）id来表征这些问题是比较方便的。问题与id之前的映射称为字典：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.dict&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# store the dictionary, for future reference&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里我们用gensim.corpora.dictionary.Dictionary类为每个出现在语料库中的词分配了一个整型的id。这个类扫描文本，收集词频及其他统计值。最后，我们在处理过的语料库中发现了12个唯一的词，这意味着每个文档将用12个数字表示（即用12维向量）。查看词和id的映射：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token2id&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;minors&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;graph&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;trees&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;eps&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;computer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&amp;#39;survey&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;human&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;interface&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;response&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实际转化标记化文本为向量：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;new_doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Human computer interaction&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;new_vec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc2bow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_vec&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the word &amp;quot;interaction&amp;quot; does not appear in the dictionary and is ignored&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数doc2bow()只是计算每个唯一的词的出现频率，将词转化整型词id并且将结果作为稀疏向量返回。因此，稀疏向量[(0, 1), (1, 1)]读作：在文档“Human computer interaction”中,词computer (id 0)和human (id 1)出现1次;其他字典词出现0次。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc2bow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/deerwester.mm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# store to disk, for later use&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到这里为止，你要明确的是id=10的向量特征代表问题“词 graph在这个文档中出现了几次” 对于前6个文档答案是”0“，剩下的三个的答案是”1“。事实上我们已经获得了与&lt;a href=&quot;http://radimrehurek.com/gensim/tutorial.html#first-example&quot;&gt;Quick Example&lt;/a&gt;相同的语料向量。&lt;/p&gt;

&lt;h1&gt;语料流 - 一次一个文档&lt;/h1&gt;

&lt;p&gt;上面的语料库都是作为一个纯Python的List全部加载到内存中。在这个简单的例子中，这没什么，但是，为了让事情更清楚，让我们假设在语料库中有几百万的文档。将这些文档都存入RAM是不现实的。相反，让我们假设这些文档都是存储在硬盘的一个文件上，每个文档一行。Gensim只需要语料库可以每次返回一个文档向量：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__iter__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycorpus.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
             &lt;span class=&quot;c&quot;&gt;# assume there&amp;#39;s one document per line, tokens separated by whitespace&lt;/span&gt;
             &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc2bow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这里下载样本文件&lt;a href=&quot;http://radimrehurek.com/gensim/mycorpus.txt&quot;&gt;mycorpus.txt&lt;/a&gt;。假设每个文档占据单个文档中的一行并不重要；你可以参照&lt;strong&gt;iter&lt;/strong&gt;函数来满足你的输入格式，无论什么格式。游走的字典间，解析XML，访问网络...只需要
在&lt;strong&gt;iter&lt;/strong&gt;中，将解析你的输入恢复为在每个文档中标记的清晰列表，然后通过字典转化标记为他们的id，yield产生的稀疏向量。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus_memory_friendly&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# doesn&amp;#39;t load the corpus into memory!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus_memory_friendly&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__main__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyCorpus&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10d5690&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在语料库是一个对象。我们没有定义任何的方式来打印它，因此，print只是输出了对象在内存中的地址。不是非常有用。要查看向量的构成成分，让我们在语料库上进行迭代，并且打印每个文档向量（每次一个）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus_memory_friendly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# load one vector into memory at a time&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;尽管输入还是纯Python列表，现在语料库是非常内存友好的，因为，每次最多只有一个向量驻留在RAM中。你的语料现在可以是任意大小。&lt;/p&gt;

&lt;p&gt;同样，不需要加载所有的文章到内存就可以构造字典：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# collect statistics about all tokens&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mycorpus.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# remove stop words and words that appear only once&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stop_ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token2id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stopword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stopword&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stoplist&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stopword&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token2id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;once_ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tokenid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docfreq&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iteritems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docfreq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter_tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;once_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# remove stop words and words that appear only once&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compactify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# remove gaps in id sequence after words that were removed&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictionary&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这就是全部了！至少到目前为止都是关于词袋表征。当然，我们要对这些语料做什么是另外一件事；根本没有涉及到为什么计算每个唯一的词出现的频率会是有用的。事实证明，这并不是很有用，在我们用它在计算一些有意义的文档 vs. 文档相似性之前，我们将需要在最初的简单表征上做一些转换。转换将涵盖在&lt;a href=&quot;http://radimrehurek.com/gensim/tut2.html&quot;&gt;下一个教程&lt;/a&gt;中，在这之前，让我们暂时将注意力转到语料持久化上。&lt;/p&gt;

&lt;h1&gt;语料格式&lt;/h1&gt;

&lt;p&gt;有一些现存的方法可以序列化向量空间语料（向量序列）到硬盘。Gensim通过前面提到的streaming corpus接口实现了他们：文件以一种懒惰的形式从硬盘中读取，每次读取一个文件，而不是一次将所有语料读入主内存。&lt;/p&gt;

&lt;p&gt;一个值得注意的文件格式是 &lt;a href=&quot;http://math.nist.gov/MatrixMarket/formats.html&quot;&gt;Market Matrix format&lt;/a&gt;. 将语料存储为Matrix Market format:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gensim&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# create a toy corpus of 2 documents, as a plain Python list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]]&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# make one document empty, for the heck of it&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/corpus.mm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他的格式包括&lt;a href=&quot;http://svmlight.joachims.org/&quot;&gt;Joachim的 SVMlight 格式&lt;/a&gt;,[&lt;a href=&quot;http://www.cs.princeton.edu/%7Eblei/lda-c/&quot;&gt;Blei的 LDA-C 格式&lt;/a&gt;和&lt;a href=&quot;http://gibbslda.sourceforge.net/&quot;&gt;GibbsLDA++ 格式&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SvmLightCorpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/corpus.svmlight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BleiCorpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/corpus.lda-c&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LowCorpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/corpus.low&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;反过来，从 Matrix Market 文件读取语料迭代器：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/corpus.mm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语料对象是数据流，因此，通常你不能直接打印他们：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;MmCorpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;相反，要查看语料的内容：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# one way of printing a corpus: load it entirely into memory&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# calling list() will convert any sequence to a plain Python list&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# another way of doing it: print one document at a time, making use of the streaming interface&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第二种方式明显更加内存友好，但是，为了测试和开发的目的，什么也不如简单的调用列表（语料）。&lt;/p&gt;

&lt;p&gt;要以 Blei’s LDA-C 格式保存相同的 Matrix Market 文档流：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BleiCorpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/tmp/corpus.lda-c&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用这种方式，gensim也可以用作一种高效的内存 I/O格式转化工具：只需要用一种格式加载文档流，马上用另一种格式保存。添加新的格式相当简单，查看SVMlight语料的代码作为例子。&lt;/p&gt;

&lt;h1&gt;与Numpy和Scipy的兼容性&lt;/h1&gt;

&lt;p&gt;Gensim也包含&lt;a href=&quot;http://radimrehurek.com/gensim/matutils.html&quot;&gt;高效的实用函数&lt;/a&gt;来帮助从/向 numpy矩阵转换：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gensim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matutils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense2Corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numpy_matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gensim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matutils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus2dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以及从/向 scipy.sparse 矩阵转换:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gensim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matutils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sparse2Corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scipy_sparse_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scipy_csc_matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gensim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matutils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus2csc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;完整的参考（想要将字典缩小为更小的大小？优化语料和Numpy/SciPy数组间的转换？），请见&lt;a href=&quot;http://radimrehurek.com/gensim/apiref.html&quot;&gt;API 文档&lt;/a&gt;，或者继续下一个教程&lt;a href=&quot;http://radimrehurek.com/gensim/tut2.html&quot;&gt;主题与转化&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://radimrehurek.com/gensim/tut1.html&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>sklearn文本特征提取</title>
   <link href="http://cloga.github.io/2014/01/19/sklearn_text_feature_extraction"/>
   <updated>2014-01-19T00:00:00+08:00</updated>
   <id>http://cloga.github.io/2014/01/19/sklearn_text_feature_extraction</id>
   <content type="html">&lt;h1&gt;文本特征提取&lt;/h1&gt;

&lt;h2&gt;词袋（Bag of Words）表征&lt;/h2&gt;

&lt;p&gt;文本分析是机器学习算法的主要应用领域。但是，文本分析的原始数据无法直接丢给算法，这些原始数据是一组符号，因为大多数算法期望的输入是固定长度的数值特征向量而不是不同长度的文本文件。为了解决这个问题，&lt;a href=&quot;http://scikit-learn.org/&quot;&gt;scikit-learn&lt;/a&gt;提供了一些实用工具可以用最常见的方式从文本内容中抽取数值特征，比如说：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;标记（tokenizing）&lt;/em&gt;文本以及为每一个可能的标记（token）分配的一个整型ID ，例如用白空格和标点符号作为标记的分割符（中文的话涉及到分词的问题）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;计数（counting）&lt;/em&gt;标记在每个文本中的出现频率&lt;/li&gt;
&lt;li&gt;&lt;em&gt;正态化(nomalizating)&lt;/em&gt; 降低在大多数样本/文档中都出现的标记的权重&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这个方案中，特征和样本的定义如下：&lt;/p&gt;

&lt;p&gt;将&lt;em&gt;每个标记出现的频率&lt;/em&gt;(无论是否正态化)作为&lt;em&gt;特征&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;给定&lt;em&gt;文件&lt;/em&gt;中所有标记的出现频率所构成的向量作为多元&lt;em&gt;样本&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;因此，语料文件可以用一个词文档矩阵代表，每行是一个文档，每列是一个标记（即词）。&lt;/p&gt;

&lt;p&gt;将文档文件转化为数值特征的一般过程被称为&lt;em&gt;向量化&lt;/em&gt;。这个特殊的策略（标记，计数和正态化）被称为&lt;em&gt;词袋&lt;/em&gt;或者Bag of n-grams表征。用词频描述文档，但是完全忽略词在文档中出现的相对位置信息。&lt;/p&gt;

&lt;h2&gt;稀疏性&lt;/h2&gt;

&lt;p&gt;大多数文档通常只会使用语料库中所有词的一个子集，因而产生的矩阵将有许多特征值是0（通常99%以上都是0）。&lt;/p&gt;

&lt;p&gt;例如，一组10,000个短文本（比如email）会使用100,000的词汇总量，而每个文档会使用100到1,000个唯一的词。&lt;/p&gt;

&lt;p&gt;为了能够在内存中存储这个矩阵，同时也提供矩阵/向量代数运算的速度，通常会使用稀疏表征例如在scipy.sparse包中提供的表征。&lt;/p&gt;

&lt;h2&gt;通用向量使用&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;CountVectorizer&lt;/em&gt;在一个类中实现了标记和计数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个模型有许多参数，不过默认值已经非常合理（具体细节请见&lt;a href=&quot;http://scikit-learn.org/stable/modules/classes.html#text-feature-extraction-ref&quot;&gt;参考文档&lt;/a&gt;）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analyzer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;word&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;charset_error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decode_error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;strict&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;...&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;numpy.int64&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ngram_range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;preprocessor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stop_words&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;strip_accents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token_pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;(?u)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tokenizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vocabulary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;让我们用它来标记和计算一个简单语料的词频：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
     &lt;span class=&quot;s&quot;&gt;&amp;#39;This is the first document.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s&quot;&gt;&amp;#39;This is the second second document.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s&quot;&gt;&amp;#39;And the third one.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s&quot;&gt;&amp;#39;Is this the first document?&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;                              

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;... &amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认设置通过抽取2个字符以上的词标记字符。完成这个步骤的具体函数可以直接调用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;analyze&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_analyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;analyze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;This is a text document to analyze.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;this&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;is&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;document&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;to&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;analyze&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在拟合过程中，每一个分析器找到的词都会分配一个在结果矩阵中对应列的整型索引。列的含义可以用下面的方式获得：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_feature_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;and&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;document&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;is&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;&amp;#39;second&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;the&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;third&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;this&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;特征名称与列索引的转化映射被存储在向量器（vectorizer）的vocabulary_属性中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vocabulary_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;document&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因此，在训练语料中没有出现的词在后续调用转化方法时将被完全忽略：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Something completely new.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意在前面的语料中，第一个和最后一个文档的词完全相同因此被编码为等价的向量。但是，我们丢失了最后一个文档是疑问形式的信息。为了保留一些局部顺序信息，我们可以在抽取词的1-grams（词本身）之外，再抽取2-grams：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;bigram_vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ngram_range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                     &lt;span class=&quot;n&quot;&gt;token_pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;\b\w+\b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;analyze&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_analyzer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;analyze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Bi-grams are cool!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;bi&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;grams&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;are&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;cool&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bi grams&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;grams are&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;are cool&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因此，由这个向量器抽取的词表非常大，现在可以解决由于局部位置模型编码的歧义问题：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;X_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X_2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;                           
&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;特别是疑问形式“Is this”只出现在最后一个文档：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;feature_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vocabulary_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;is this&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feature_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;     

&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Tf-idf词权重&lt;/h2&gt;

&lt;p&gt;在较低的文本语料库中，一些词非常常见（例如，英文中的“the”，“a”，“is”），因此很少带有文档实际内容的有用信息。如果我们将单纯的计数数据直接喂给分类器，那些频繁出现的词会掩盖那些很少出现但是更有意义的词的频率。&lt;/p&gt;

&lt;p&gt;为了重新计算特征的计数权重，以便转化为适合分类器使用的浮点值，通常都会进行tf-idf转换。&lt;/p&gt;

&lt;p&gt;Tf代表&lt;em&gt;词频&lt;/em&gt;，而tf-idf代表词频乘以&lt;em&gt;逆向文档频率&lt;/em&gt;。这是一个最初为信息检索（作为搜索引擎结果的排序功能）开发的词加权机制，在文档分类和聚类中也是非常有用的。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;text.TfidfTransformer&lt;/em&gt;类实现了这种正态化：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfidfTransformer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;transformer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfidfTransformer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;transformer&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;TfidfTransformer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;l2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smooth_idf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sublinear_tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;use_idf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样对于每个参数的详细解释，请参见&lt;a href=&quot;http://scikit-learn.org/stable/modules/classes.html#text-feature-extraction-ref&quot;&gt;参考文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;让我们用下面的计数作为例子。第一个词出现每次100%出现因此不是携带的信息不多。另外两个特征只在不到50%的时间出现，因此，对文档内容的代表能力可能更强一些：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transformer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt;                         

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;... &amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Row&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tfidf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                        

&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.85&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.52&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.55&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.83&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.63&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.77&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;每一行被正态化为单位的欧几里得范数。由fit方法计算的每个特征的权重存储在model属性中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;transformer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idf_&lt;/span&gt;                       

&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.84&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于tf-idf经常用于文本特征，因此有另一个类称为&lt;em&gt;TfidfVectorizer&lt;/em&gt;，将&lt;em&gt;CountVectorizer&lt;/em&gt;和&lt;em&gt;TfidfTransformer&lt;/em&gt;的所有选项合并在一个模型中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfidfVectorizer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TfidfVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;                                
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;... &amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Row&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;尽管tf-idf的正态化也非常有用，在一些情况下，binary occurrence markers通常比特征更好。可以用&lt;em&gt;CountVectorizer&lt;/em&gt;的&lt;em&gt;二元&lt;/em&gt;参数达到这个目的。特别是，一些预测器比如&lt;a href=&quot;http://scikit-learn.org/stable/modules/naive_bayes.html#bernoulli-naive-bayes&quot;&gt;Bernoulli Naive Bayes&lt;/a&gt;显性建模离散的布尔随机变量。非常短的文本也可能有满是噪音的tf-idf值，而binary occurrence info则更加稳定。&lt;/p&gt;

&lt;p&gt;同样，调整特征抽取参数的最佳唯一方式是使用交叉验证网格搜索（grid search），例如，通过分类器用管道传输特征抽取器：
&lt;a href=&quot;http://scikit-learn.org/stable/auto_examples/grid_search_text_feature_extraction.html#example-grid-search-text-feature-extraction-py&quot;&gt;Sample pipeline for text feature extraction and evaluation&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;解码文本文件&lt;/h2&gt;

&lt;p&gt;文本由文字构成，但是文件由字节构成。在Unicode中，可能的文字会比可能的字节多很多。每一个文本文件都是编码的，因此，文字也可以用字节表示。&lt;/p&gt;

&lt;p&gt;当你在python中处理文本时，应该都是Unicode。在scikit-learn中的大多数文本特征抽取器只能用于Unicode。因此，正确的从文件（或者从网络）加载文本，你需要用正确的编码解码。&lt;/p&gt;

&lt;p&gt;编码也被称为&amp;quot;字符集&amp;quot;（“charset”或“character set”），尽管这个术语不准确。&lt;em&gt;CountVectorizer&lt;/em&gt;用&lt;em&gt;encoding&lt;/em&gt;参数告诉它用什么编码去解码。&lt;/p&gt;

&lt;p&gt;对现代的文本文件来说，正确的编码可能是UTF-8。&lt;em&gt;CountVectorizer&lt;/em&gt;用&lt;em&gt;encoding=&amp;#39;utf-8&amp;#39;&lt;/em&gt;作为编码默认值。如果你加载的文档实际上不是UTF-8编码，那么你将获得&lt;em&gt;UnicodeDecodeError&lt;/em&gt;错误。&lt;/p&gt;

&lt;p&gt;如果你在解码文本时出现了问题，有一些东西可以尝试一下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;找到文本的实际编码。文件可能包含一个文件头告诉你它的编码，或者根据文本的来自哪里你可以猜测一些标准的编码。&lt;/li&gt;
&lt;li&gt;用UNIX命令&lt;em&gt;file&lt;/em&gt;，你可以找到它是什么编码。Python的chardet模块有一个叫做&lt;em&gt;chardetect.py&lt;/em&gt;的脚本，这个脚本会猜测具体的编码，尽管你不能期望它的猜测就是正确的。&lt;/li&gt;
&lt;li&gt;你可以忽略错误，试一下UTF-8。你可以用&lt;em&gt;bytes.decode(errors=&amp;#39;replace&amp;#39;)&lt;/em&gt;来解码字节字符串，用一个无意义的字符来替换所有解码错误，或者在向量器中设置&lt;em&gt;decode_error=&amp;#39;replace&amp;#39;&lt;/em&gt;。这可能特征的有用性。&lt;/li&gt;
&lt;li&gt;真实的文本可能来自多种来源使用多种编码，甚至可能凌乱的用错误的编码解码。在网络上的文本检索过程中这非常常见。Python的包&lt;a href=&quot;https://github.com/LuminosoInsight/python-ftfy&quot;&gt;ftfy&lt;/a&gt;可以自动挑选出几类解码错误，因此，你可以尝试尝试将位置文档解码为&lt;em&gt;latin-1&lt;/em&gt;，然后用&lt;em&gt;ftfy&lt;/em&gt;来修复错误。&lt;/li&gt;
&lt;li&gt;如果文本是一坨乱七八糟的东西（20个新闻组的数据集就是这样），很难简单的分类出编码，你可以回滚到单字符编码，比如latin-1。一些文本的显示可能不正确，但是，至少相同的字节序列都会代表相同的特征。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;应用例子&lt;/h2&gt;

&lt;p&gt;词袋表征非常简单，但是在实际应用中出奇的有用。&lt;/p&gt;

&lt;p&gt;特别是在有监督的环境下，可以与快读可扩展的线性模型一起去训练文档分类器，例如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scikit-learn.org/stable/auto_examples/document_classification_20newsgroups.html#example-document-classification-20newsgroups-py&quot;&gt;Classification of text documents using sparse features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在无监督的环境下，可以通过应用聚类算法比如&lt;a href=&quot;http://scikit-learn.org/stable/modules/clustering.html#k-means&quot;&gt;K-means&lt;/a&gt;将相同的文档聚集成组：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;Clustering%20text%20documents%20using%20k-means&quot;&gt;Clustering text documents using k-means&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后通过relaxing the hard assignment constraint of clustering可以发现语料库的主要主题，例如使用&lt;a href=&quot;http://scikit-learn.org/stable/modules/decomposition.html#nmf&quot;&gt;Non-negative matrix factorization (NMF or NNMF)&lt;/a&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scikit-learn.org/stable/auto_examples/applications/topics_extraction_with_nmf.html#example-applications-topics-extraction-with-nmf-py&quot;&gt;Topics extraction with Non-Negative Matrix Factorization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;词袋表征的局限&lt;/h2&gt;

&lt;p&gt;一组unigrams（即词袋）无法捕捉短语和多词（multi-word）表达，词库模型并不能解释可能的拼写错误或派生词。&lt;/p&gt;

&lt;p&gt;N-grams来帮忙！与构建简单的一组unigrams相比，人们更倾向于构建一组bigrams（n=2），计数一组成对连续出现的词的频率。&lt;/p&gt;

&lt;p&gt;人们也可能考虑一组字母的n-grams，可以处理错误拼写和派生词的表征。&lt;/p&gt;

&lt;p&gt;例如，我们处理包含两个文档的语料库：[&amp;#39;words&amp;#39;, &amp;#39;wprds&amp;#39;]。第二个文档包含“words”这个词的错拼。简单的词袋表征会认为两个文档是完全不同的文档，两个可能的特征是不同的。但是，字母的n-grams表征可以发现两个文档匹配8个特征中的4个，这有助于分类器更好的决策：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analyzer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;char_wb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ngram_range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;words&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;wprds&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_feature_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; w&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;ds&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;or&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;pr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;rd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;s &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;wo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;wp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在上面例子中，使用了“char_wb”分析器，这个分析器只从词边界（在两次填充空格）内部创建字母n-grams。“char”分析器则相反，跨词创建n-grams：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analyzer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;char_wb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ngram_range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jumpy fox&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;... &amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_feature_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; fox &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; jump&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;jumpy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;umpy &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analyzer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;char&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ngram_range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jumpy fox&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;... &amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ngram_vectorizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_feature_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;jumpy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;mpy f&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;py fo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;umpy &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;y fox&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;区分边界的词变体char_wb对那些使用白空格进行词分隔的语言更加有效，因为在这些语言中，与那些原始字母变体相比，这种方式产生的特征噪音显著减少。对于这些语言，使用这些特征可以增加分类器预测的准确性和收敛的速度，同时保障了w.r.t.的错拼和派生词的强壮性。&lt;/p&gt;

&lt;p&gt;尽管可以通过抽取n-grams而不是单独的词保留一部分局部位置信息，但是，词袋和bag of n-grams破坏了绝大多数文档的内部结构，以及内部结构所携带的大部分意义。&lt;/p&gt;

&lt;p&gt;为了解决自然语言理解的更广泛任务，应该考虑句子和段落的局部结构。许多模型因此将被转换为“结构化输出”的问题，不过这些问题目前超出了scikit-learn的范围。&lt;/p&gt;

&lt;h2&gt;用哈希技巧向量化大文本向量&lt;/h2&gt;

&lt;p&gt;以上的向量化情景很简单，但是，事实上这种方式&lt;em&gt;从字符标记到整型特征的目录（vocabulary_属性）的映射都是在内存中进行&lt;/em&gt;，在&lt;em&gt;处理大数据集&lt;/em&gt;时会出现一些问题：
- 语料库越大，词表就会越大，因此使用的内存也越大，
- 拟合（fitting）需要根据原始数据集的大小等比例分配中间数据结构的大小。
- 构建词映射需要完整的传递数据集，因此不可能以严格在线的方式拟合文本分类器。
- pickling和un-pickling vocabulary&lt;em&gt;很大的向量器会非常慢（通常比pickling/un-pickling单纯数据的结构，比如同等大小的Numpy数组），
- 将向量化任务分隔成并行的子任务很不容易实现，因为vocabulary&lt;/em&gt;属性要共享状态有一个细颗粒度的同步障碍：从标记字符串中映射特征索引与每个标记的首次出现顺序是独立的，因此应该被共享，在这点上并行worker的性能收到了损害，使他们比串行更慢。&lt;/p&gt;

&lt;p&gt;通过同时使用由sklearn.feature_extraction.FeatureHasher类实施的“哈希技巧”（特征哈希）、文本预处理和CountVectorizer的标记特征有可能克服这些限制。&lt;/p&gt;

&lt;p&gt;这个组合在HashingVectorizer实现，这个转换器类是无状态的，其大部分API与CountVectorizer.HashingVectorizer兼容，这意味着你不需要在上面调用fit：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashingVectorizer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashingVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;                                
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;... &amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Row&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你可以看到从向量输出中抽取了16个非0特征标记：与之前由CountVectorizer在同一个样本语料库抽取的19个非0特征要少。差异来自哈希方法的冲突，因为较低的n_features参数的值。&lt;/p&gt;

&lt;p&gt;在真实世界的环境下，n_features参数可以使用默认值2 ** 20（将近100万可能的特征）。如果内存或者下游模型的大小是一个问题，那么选择一个较小的值比如2 ** 18可能有一些帮助，而不需要为典型的文本分类任务引入太多额外的冲突。&lt;/p&gt;

&lt;p&gt;注意维度并不影响CPU的算法训练时间，这部分是在操作CSR指标（LinearSVC(dual=True), Perceptron, SGDClassifier, PassiveAggressive），但是，它对CSC matrices (LinearSVC(dual=False), Lasso(), etc)算法有效。&lt;/p&gt;

&lt;p&gt;让我们用默认设置再试一下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashingVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;                               
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x1048576&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;... &amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Compressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sparse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Row&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;冲突没有再出现，但是，代价是输出空间的维度值非常大。当然，这里使用的19词以外的其他词之前仍会有冲突。&lt;/p&gt;

&lt;p&gt;HashingVectorizer也有以下的局限：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不能反转模型（没有inverse_transform方法），也无法访问原始的字符串表征，因为，进行mapping的哈希方法是单向本性。&lt;/li&gt;
&lt;li&gt;没有提供了IDF权重，因为这需要在模型中引入状态。如果需要的话，可以在管道中添加TfidfTransformer。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;进行HashingVectorizer的核外扩展&lt;/h2&gt;

&lt;p&gt;使用HashingVectorizer的一个有趣发展是进行核外扩展的能力。这意味着我们可以从无法放入电脑主内存的数据中进行学习。&lt;/p&gt;

&lt;p&gt;实现核外扩展的一个策略是将数据以流的方式以一小批提交给评估器。每批的向量化都是用HashingVectorizer这样来保证评估器的输入空间的维度是相等的。因此任何时间使用的内存数都限定在小频次的大小。尽管用这种方法可以处理的数据没有限制，但是从实用角度学习时间受到想要在这个任务上花费的CPU时间的限制。&lt;/p&gt;

&lt;p&gt;一个核外扩展的文本分类任务的实例，请参见&lt;a href=&quot;http://scikit-learn.org/stable/auto_examples/applications/plot_out_of_core_classification.html#example-applications-plot-out-of-core-classification-py&quot;&gt;Out-of-core classification of text documents&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scikit-learn.org/stable/modules/feature_extraction.html#text-feature-extraction&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Python多进程模块Multiprocessing介绍</title>
   <link href="http://cloga.github.io/python/2014/01/12/PythonMultiprocessingintro"/>
   <updated>2014-01-12T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/01/12/PythonMultiprocessingintro</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://docs.python.org/2/library/multiprocessing.html&quot;&gt;Multiprocessing&lt;/a&gt;是Python的
一个标准库，通过这个库，可以实现并行编程，更有效的利用多核CPU。由于Python的GIL的限制，默认情况下Python无法有效利用多核。通过Multiproc
essing，可以创建多个子线程，从而更加有效的利用多核。这篇文件会介绍一下使用Multiprocessing的线程池（Pool）实现简单的并行编程。&lt;/p&gt;

&lt;p&gt;Multiprocessing类提供了Pool对象，通过进程池对象来管理和创建多个进程的worker，并收集这些Worker返回的结果。&lt;/p&gt;

&lt;h1&gt;简单任务的多进程编程&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;multiprocessing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mul&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;引入multiprocessiing，引入os模块用于查看进程id，引入阶乘计算，用于测试简单任务下的多进程编程。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpu_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面的例子就实例化了一个进程池。Pool接受进程数作为参数，默认情况下，会使用cpu_count()的值作为进程的默认值。比如我的电脑的话，pool =
mul.Pool()等价于pool = mul.Pool(4)&lt;/p&gt;

&lt;p&gt;让我们计算1-100的阶乘，返回一个list，用于测试多进程编程的效果。首先定义一个阶乘的函数。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;pid is&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getpid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了显示当前所使用的进程，这里我们需要使用os.getpid()获得进程id。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;29.1&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;µ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;f_10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25566&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到当前进程的PID。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f_list_serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27047&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27047&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27047&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27047&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27047&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;定义个串行计算的函数，可以看到pid都是一个，说明计算是在一个进程中顺序进行的。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;594&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;µ&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果不使用并行计算的话，计算1-100的阶乘需要的时间是300-400µs左右。由于计算每个数字的阶乘任务之间都是独立的，因此可以使用简单的进程池来进程并行计算
。对于多个任务之间相互依赖或者需要共享信息的情况不在本文的讨论之中。将前面的串行计算改成用进程池来计算。&lt;/p&gt;

&lt;p&gt;Multiprocessing提供了apply，apply&lt;em&gt;async，map和map&lt;/em&gt;async等多种方法，用于线程池的计算。其中的map和apply与标准模
块中方法用法类似，所不同的是map只接受一个参数，如果需要接受多个参数则最好使用apply，而apply&lt;em&gt;async和map&lt;/em&gt;async则是map和apply的
异步方法，其结果是异步返回的AsyncResult类型的数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f_list_para_apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27131&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27133&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27132&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27134&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27131&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27133&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27132&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27131&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27133&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27131&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上所示，使用multiprocessing的进程池后可以看到不同的任务是在不同的进程中进程。&lt;/p&gt;

&lt;p&gt;关于上面的函数有几点说明：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在主程序中实例化pool会报错，而在函数中实例化则可以正常运行，这一点在Multiprocessing的官方文档中也有说明，官方文档的说法是这个包需要&lt;strong&gt;m
ain&lt;/strong&gt;模块被子模块导入&lt;/li&gt;
&lt;li&gt;apply_async支持多个参数，如果是位置参数，则可以使用args参数，值为tuple，如果是关键字参数，则可以使用kwds参数，值为字典，也可以同时使
用二者&lt;/li&gt;
&lt;li&gt;当所有任务都执行完之后一定要记得用close()和join()回收进程，不然这些进程会变成僵尸进程，会造成打开文件过多的错误&lt;/li&gt;
&lt;li&gt;每次apply_async返回的结果都是AsyncResult对象，需要通过get()方法获得其中的值。由于get()是阻塞的方式即同步的方式处理，因此，在
最后统一处理这些结果即可&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;156&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过timeit函数可以看到，使用默认的4个进程（基于我电脑目前的配置）计算时间有明显的增加。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;165&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;152&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;尝试将进程增加到100或者将进程减少到1没有看到时间的明显变化，这可能是因为这个任务过于简单，使用多进程更多的资源浪费在进程切换上。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f_list_para_map_asyns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_map_asyns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;144&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用map的异步形式获得计算速度的提升与apply&lt;em&gt;async相近，不过由于map&lt;/em&gt;async只支持一个参数用途应该没有apply丰富。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f_list_para_apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27343&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27344&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27345&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27346&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27343&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27344&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27345&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27346&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27343&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27344&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用map的非异步方式，仍然可以看到pid的变化，看来每个任务都是在不同的进程中进程，只是各个进程间不是并行进行而是顺序进行，必须要等到前一个进程计算完成返回了
结果，下一个进程才会开始进行计算。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;130&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于阶乘这个例子，异步方式与同步方式的时间相近，这个应该是与选择的任务有关。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f_list_para_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_factorial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26642&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26643&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26644&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26645&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26642&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26643&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26644&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26645&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26642&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26643&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f_list_para_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;166&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用map的同步方式结果与apply的同步方式相近。&lt;/p&gt;

&lt;h1&gt;复杂任务的多进程编程&lt;/h1&gt;

&lt;p&gt;上面的例子可以看到对于比较简单，计算耗时较少的任务，使用多进程得不偿失，时间主要消耗在进程切换上无法提高计算效率。再来看一下耗时较长的任务使用多进程编程的效果如
何。&lt;/p&gt;

&lt;p&gt;我们用抓取微博转发数据作为例子。帖子的例子选取了&lt;a href=&quot;http://weibo.com/1496853872/AqSPp8Pyp&quot;&gt;关于逸夫楼的一个热门微博&lt;/a&gt;，mi
d为：3664072912104801，token使用微博给到的测试token。首先定义抓取微博转发数据的函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;2.00Hk5I5B0XUlu4bde500a7f8FHAqIB&amp;#39;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;pid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getpid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;start!&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;query_args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;page&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;&amp;#39;access_token&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;query_args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;https://api.weibo.com/2/statuses/repost_timeline.json?&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encoded_args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoded_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;pid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getpid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;finished!&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;具体文档见&lt;a href=&quot;http://open.weibo.c%0Aom/wiki/2/statuses/repost_timeline&quot;&gt;http://open.weibo.com/wiki/2/statuses/repost_timeline&lt;/a&gt;。按照文档的说明，这个接口只返回最近2000条，每页默认返回200条结果，则可以循环10次
。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;828&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到获得200个转发需要的时间比较长，有1s左右。&lt;/p&gt;

&lt;p&gt;接下来再定义两个函数一个是串行的方式抓取2000条转发，一个是异步并行方式抓取2000条转发。&lt;/p&gt;

&lt;p&gt;首先是用串行的方式获得2000条转发：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_post_reposts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;total_number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;10.2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果用串行的方式，抓取10页2000条转发需要的时间基本上是抓取一页转发的10倍，我们再来看一下用多进程编程的效果。这里首先使用异步的apply方式。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_post_reposts_para_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;total_number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pid 1687 start!
pid 1689 start!
pid 1688 start!
pid 1690 start!
pid 1687 finished!
pid 1689 finished!
pid 1688 finished!
pid 1690 finished!
pid 1687 start!
pid 1689 start!
pid 1688 start!
pid 1690 start!
pid 1687 finished!
pid 1689 finished!
pid 1688 finished!
pid 1690 finished!
pid 1687 start!
pid 1689 start!
pid 1687 finished!
pid 1689 finished!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;每个pid是并行进行的，一个进程开始后，其他的进程也可以同步开始。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.64&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.64&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;10.3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.24&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从运行时间来看，似乎是随着进程池的增加而减少，达到10次，即这个任务的每个循环任务都有一个单独的进程达到一个峰值，之后运行时间会减少。但是总体来说，异步的多进程
编程比串行的时间要少。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_post_reposts_para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;total_number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pid 2206 start!
pid 2206 finished!
pid 2207 start!
pid 2207 finished!
pid 2208 start!
pid 2208 finished!
pid 2209 start!
pid 2209 finished!
pid 2206 start!
pid 2206 finished!
pid 2207 start!
pid 2207 finished!
pid 2208 start!
pid 2208 finished!
pid 2209 start!
pid 2209 finished!
pid 2206 start!
pid 2206 finished!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.04&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.87&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_post_reposts_para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3664072912104801&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool_num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.71&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于是非异步的形式，每个进程的任务完成后才会启动新的进程，不过从运行时间上来看，还是要比串行的形式时间要短。你也可以查看&lt;a href=&quot;http://nbviewer.ipython.org/gist/cloga/8382454&quot;&gt;这篇文章的ipython notebook版本&lt;/a&gt;。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>开源数据挖掘工具Orange简介</title>
   <link href="http://cloga.github.io/python/2014/01/02/Orangeintro"/>
   <updated>2014-01-02T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/2014/01/02/Orangeintro</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://orange.biolab.si/&quot;&gt;Orange&lt;/a&gt;是一款底层基于C++，并且提供了Python接口的开源数据挖掘工具。与Sklearn，pyml这
类数据挖掘包相比，Orange的历史更加悠久，在上面实现的算法也更加丰富，此外，除了以python模块的形式使用之外，Orange还提供了GUI，可以用通过预先
定义好的多种模块组成工作流来完成复杂的数据挖掘工作。&lt;/p&gt;

&lt;p&gt;Orange的发起最早可以追溯到1997年WebLab会议，在这个会议上人们提到了构建一个灵活的实验基准以便大家可以将自己的算法，实验结果放在上面，这些想法最终
催生了Orange项目。&lt;/p&gt;

&lt;p&gt;Orange包含大量标准或非标准的机器学习和数据挖掘的算法，以及常规数据读写和操作，其底层的核心是由C++来实现的，同时Orange也利用python脚本来快速
实现新算法的原型以及一些不太要求执行时间的功能。&lt;/p&gt;

&lt;h2&gt;Orange中的数据&lt;/h2&gt;

&lt;p&gt;Orange使用一种专有的数据结构，扩展名为.tab，其实就是用tab分隔每个数据的纯文本。文档的第一行为属性的名称，用tab分隔，第二行为属性对应的数据类型，
包含连续性，间断型和字符型。第三行包含一些元信息，用于指明依赖的特征（分类），不相关的特征（需要忽略的特征）和元特征。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Orange&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;iris&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过以上的代码，就可以获得一个Orange的数据表，数据表是Orange中基本数据单元（类似DataFrame在Pandas中的地位）。iris是Orange自
带的样例数据，其扩展名即为.tab。&lt;/p&gt;

&lt;p&gt;Orange也可以读取其他格式的数据文件，比如csv，txt等。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;iris.csv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上就可以将iris.csv中的数据转换为Orange的数据表。iris.csv中是150个鸢尾花的记录，这个数据在数据挖掘的课程及工具中经常被引用作为分类和聚
类的样例数据。&lt;/p&gt;

&lt;p&gt;让我们看一下iris这个数据表中的数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Orange.feature.Continuous &amp;#39;sepal length&amp;#39;, Orange.feature.Continuous &amp;#39;sepal width&amp;#39;, Orange.feature.Continuous &amp;#39;petal length&amp;#39;, Orange.feature.Continuous &amp;#39;petal width&amp;#39;, Orange.feature.Discrete &amp;#39;iris&amp;#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这个数据表中每条记录有5个属性&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Orange.feature.Continuous &amp;#39;sepal length&amp;#39;, Orange.feature.Continuous &amp;#39;sepal width&amp;#39;, Orange.feature.Continuous &amp;#39;petal length&amp;#39;, Orange.feature.Continuous &amp;#39;petal width&amp;#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这5个属性中有四个属于特征，分别是花萼长度（连续变量），花萼宽度（连续变量），花瓣长度（连续变量），花瓣宽度（连续变量）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_var&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Discrete&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;分类变量是一个间断变量&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setosa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;versicolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;virginica&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到这150个鸢尾花是三种类型&lt;/p&gt;

&lt;p&gt;每个Orange的数据表，是由Orange的data instant组成的list，每一个记录就是一个data instant&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Table&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Iris-setosa&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;orange.Value &amp;#39;sepal length&amp;#39;=&amp;#39;5.1&amp;#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;5.099999904632568
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过value属性可以获得一个属性的数值。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;new_data.tab&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过save方法可以将数据表输出为.tab的文件&lt;/p&gt;

&lt;h2&gt;用Orange进行分类&lt;/h2&gt;

&lt;p&gt;通过get_class方法可以获得Orange instance的对应的分类。对于iris这个数据集，就是具体的鸢尾花类型。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;orange.Value &amp;#39;iris&amp;#39;=&amp;#39;Iris-setosa&amp;#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在Orange中的分类任务提供了Learners和Classifiers两个对象。Learners通过对训练集的学习返回一个Classifier，Classif
ier可以用来预测一个data instance属于哪个分类。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;learner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;orange.Value &amp;#39;iris&amp;#39;=&amp;#39;Iris-virginica&amp;#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面代码构建了一个朴素贝叶斯的learner，在iris数据集上应用learner构建了一个Classifier，并用它预测了一个样例数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetProbabilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;0.000, 0.493, 0.507&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetProbabilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Iris-setosa, Iris-versicolor, Iris-virginica&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们也可以看一下Classifier预测每个data instance是不同分类的可能性&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Iris-versicolor&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面的Learner预测第51个样例数据为Iris-virginica，而其分类其实是Iris-
versicolor，Classifier根据样例数据预测第51个样例有49.3%的几率属于Iris-versicolor, 有50.7%的几率属于Iris-
virginica。通过Orange.evaluation.scoring.CA（Classification Accuracy）函数可以计算模型的分类准确度。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cross_validation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scoring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0.92
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到应用朴素贝叶斯分类的模型，在训练集的正确率也只有92%。&lt;/p&gt;

&lt;p&gt;让我们在Iirs数据集上应用多种判别算法，来看一下比较不同算法结果。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bayes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TreeLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neural&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NeuralNetworkLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ensemble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RandomForestLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SVMLearner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cross_validation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CAs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evaluation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scoring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;{:s} CA is {:2%}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CAs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;naive CA is 92.000000%
tree CA is 94.000000%
NeuralNetwork CA is 96.000000%
Random Forest CA is 96.000000%
sVM CA is 96.666667%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到在默认的参数情况下，对于Iris数据集SVM的预测效果最好达到了96.7%，其次是神经网络和随机森林，决策树和朴素贝叶斯判别的效果较差。&lt;/p&gt;

&lt;h2&gt;用Orange进行聚类&lt;/h2&gt;

&lt;h3&gt;层次聚类&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SubsetIndices2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clustering&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hierarchical&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clustering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clustering&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hierarchical&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dendrogram_draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;hclust-dendrogram.png&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/files/hclust-dendrogram.png&quot; alt=&quot;iris的层次聚类结果&quot;&gt;&lt;/p&gt;

&lt;p&gt;上面是官方给到的层次聚类的样例代码，通过这段代码可以将Iris进行聚类。代码中抽取了20个sample，如果分为三组的话，可以看到其中有3个数据的分类有误。&lt;/p&gt;

&lt;h3&gt;K-Means聚类&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;km&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Orange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clustering&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kmeans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Clustering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;km&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clusters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2 Iris-virginica
2 Iris-versicolor
0 Iris-setosa
0 Iris-versicolor
2 Iris-virginica
2 Iris-versicolor
2 Iris-virginica
2 Iris-virginica
0 Iris-setosa
2 Iris-virginica
2 Iris-virginica
2 Iris-versicolor
1 Iris-setosa
2 Iris-versicolor
1 Iris-setosa
2 Iris-versicolor
2 Iris-versicolor
2 Iris-virginica
2 Iris-virginica
1 Iris-setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样是将iris分为三组，可以看到2对应Iris-setosa，0对应Iris-virginica，1对应Iris-
versicolor，依然会有分组错误的情况。&lt;/p&gt;

&lt;p&gt;在前面已经提到除了作为一个python模块外，Orange也提供了GUI进行数据挖掘，下图为层次聚类的一个工作流截图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/files/Orange.png&quot; alt=&quot;Orange GUI&quot;&gt;&lt;/p&gt;

&lt;p&gt;可以看到层次聚类的过程被分解为数据读取，计算距离，聚类，输出结果这几个步骤。通过在GUI中选取数据调整参数就可以进行层次聚类。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>sublime text中的markdown</title>
   <link href="http://cloga.github.io/%E5%B7%A5%E5%85%B7%E6%8A%80%E5%B7%A7/2014/01/01/Markdown_in_sublime_text"/>
   <updated>2014-01-01T00:00:00+08:00</updated>
   <id>http://cloga.github.io/%E5%B7%A5%E5%85%B7%E6%8A%80%E5%B7%A7/2014/01/01/Markdown_in_sublime_text</id>
   <content type="html">&lt;p&gt;经过&lt;a href=&quot;http://weibo.com/placeless&quot;&gt;徐爷&lt;/a&gt;推荐，我也开始用sublime text作为文本编辑器使用，之前用TextMate其实也不错，不过TextMate读取大文本文件时的速度实在不能忍受，而sublime text则完全无压力。不过，sublime text在处理中文编码的txt文件方面就没有texemate给力了。不过安装了convertToUTF8和了EncodeingHelper以后，问题基本上解决了。好了闲话就到这里，来说一下在Sublime text中的Markdown。&lt;/p&gt;

&lt;p&gt;由于我将blog从wordpress改成了jekyll，写文章的环境也自然变成了用Markdown，文本编辑器仍然是sublime text，为了更方便的在sublime text中使用Markdown自然少不了各种package的安装。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装markdown preview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用sublime text的Package install搜索markdown preview。这个包提供在python markdown和github markdown两种语法，支持在浏览器中对markdown进行预览，也支持将markdown直接转化为html。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装markdown的语法高亮主题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;默认的sublime主题都不支持markdown的语法高亮。我经过一顿Google之后，发现了&lt;a href=&quot;https://github.com/jonschlinkert/sublime-monokai-extended&quot;&gt;Monokai extended&lt;/a&gt;这个color scheme支持Markdown语法高亮。同样也是使用sublime text的Package install搜索Monokai Extended，安装之后通过Preferences&amp;gt;Color Scheme&amp;gt;Monokai Extended启用。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;为markdown文件中引用的其他语法也添加语法高亮效果&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Monokai extended对于代码的处理使用的是markdown的默认高亮，即缩进的内容处理为代码，但是代码部分则是没有针对不同的语言处理语法高亮的。经过Google之后，我又发现了&lt;a href=&quot;https://github.com/jonschlinkert/sublime-markdown-extended#examples&quot;&gt;Markdown Extended&lt;/a&gt;，也是通过sublime text的Package install搜索Markdown Extended进行安装。安装后，打开一个markdown文件在右下角的语言栏选择Markdown Extended激活这种语言高亮，也可以在ctrl + shift + p启用set syntax:markdown extended。&lt;/p&gt;

&lt;p&gt;将Markdown Extended作为markdown文件的默认语言。通过导航栏，View -&amp;gt; Syntax -&amp;gt; Open all with current extension as... -&amp;gt; Markdown Extended。&lt;/p&gt;

&lt;p&gt;Markdown Extended使用GitHub Flavored Markdown(GFM)&amp;quot;fenced&amp;quot; code blocks的方式进行语法高亮。
比如如下的python代码。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;```python
print &amp;#39;hello world!&amp;#39;
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要注意的是代码块的前需要有空格，才能正确识别代码块。&lt;/p&gt;

&lt;p&gt;最后不要忘记在Jekyll中开启对fenced code高亮的支持，只需要在_config.yml中，增加下面这句代码就OK了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;markdown: redcarpet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>关于Python你不可不知的几件事</title>
   <link href="http://cloga.github.io/python/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/2013/11/30/something_about_python"/>
   <updated>2013-11-30T21:28:09+08:00</updated>
   <id>http://cloga.github.io/python/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/2013/11/30/something_about_python</id>
   <content type="html">&lt;p&gt;这是一篇写给不了解Python或者刚接触Python新手的Python软文。Python老鸟请自觉忽略。&lt;/p&gt;

&lt;p&gt;1、Python名字的由来&lt;/p&gt;

&lt;p&gt;Python是由Guido van Rossum创建的一门语言，Python是大蟒蛇的意思，之所以使用Python这个名字是因为他是一个叫Monty Python的喜剧团体的爱好者。另一个彩蛋是Python的程序包叫Egg，蟒蛇下的蛋。&lt;/p&gt;

&lt;p&gt;2、Python版本的选择&lt;/p&gt;

&lt;p&gt;Python目前有python3.3.4和python2.7.6（我印象中之前官网上的说明是2.7.5是最后一个python2.7结果osx10.9发布后没多久，就又发布了2.7.6），尽管Python3.3.4与Python2.7.6相比有许多优化，但是由于需要包目前都是基于Python2的版本，比如众多科学计算的包都是基于Python2，因此，建议以Python2.7.6作为首选。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;3、Python的环境变量&lt;/p&gt;

&lt;p&gt;要运行python程序，除了安装python的程序要还要设置环境变量（我的电脑&amp;gt;属性&amp;gt;高级设置&amp;gt;环境变量），添加Path=你的python安装路径&lt;/p&gt;

&lt;p&gt;4、Python的包管理器&lt;/p&gt;

&lt;p&gt;安装Python的程序的最便捷方式就是使用Python的包管理器Pip或者Easy_install，二者之间可以互相替代，不过有的包可能只能用二者之一进行安装，如果安装失败，请尝试另一种方式。&lt;/p&gt;

&lt;p&gt;5、对于无法用pip或easy_install安装的python包你可以尝试一下下面的方法&lt;/p&gt;

&lt;p&gt;Windows用户可以看一下&lt;a href=&quot;http://www.lfd.uci.edu/%7Egohlke/pythonlibs/&quot;&gt;http://www.lfd.uci.edu/~gohlke/pythonlibs/&lt;/a&gt;，页面的主人提供了大部分知名python包的exe版本，直接下载安装即可。&lt;/p&gt;

&lt;p&gt;Mac用户可以用Macport，其中也提供了大部分python程序的快捷安装方式。&lt;/p&gt;

&lt;p&gt;6、Python的编辑器选择&lt;/p&gt;

&lt;p&gt;编辑器之争是个永恒的话题，由于本人不是程序员，日常用python是做一些数据分析相关的工作，因此，推荐使用ipython这个交互的python编程环境（安装请使用pip install ipython）进行代码运行调试，编辑python代码可以使用任意的文本编辑器，只要支持Python的语法提示高亮即可，比如nodepad++，sublime text2；此外，也可以尝试&lt;a href=&quot;https://www.enthought.com/products/canopy/&quot;&gt;Enhance Canopy&lt;/a&gt;或者&lt;a href=&quot;https://code.google.com/p/pythonxy/&quot;&gt;Pythonxy&lt;/a&gt;，这两个都是python的集成编程环境，包含了科学计算相关的包。&lt;/p&gt;

&lt;p&gt;7、Python的数据分析工具&lt;/p&gt;

&lt;p&gt;DataFrame是R的基本数据结构，在处理结构化数据方面非常方便，Python的数据分析包Pandas从R中学习了这个数据结构，并提供了更加Pythonic的语法来进行数据分析，Pandas的逐渐成熟促进了Python在数据分析领域方面应用的发展，因此，掌握了Pandas就也可以在Pandas中使用与R中类似的DataFrame。&lt;/p&gt;

&lt;p&gt;Pandas的底层是Numpy是用于多维数组运算的科学计算Python包，此外，还有matplotlib这类二维的图表展现的包。&lt;/p&gt;

&lt;p&gt;8、Python的一些便捷语法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;list comprehension（列表推导）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果我们有一个列表（一组元素），想要对这个列表中的元素进行一定的操作生成新的列表，这个过程就是列表推导（在python2.7中dict和set也支持推导）。其基本的语法形式为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;匿名函数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python提供了lambda函数，可以用于那些只使用一次的临时函数的定义，其基本的语法形式为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;augs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Map和Reduce方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;map方法对一个序列的每个元素运行一个函数，并将结果作为一个列表返回。比如，下面的两行代码结合Lambda函数与map方法将l中的每个元素都增加了1。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;l_add_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reduce方法对一个序列的每个元素顺序运行一个函数，前一次运行的结果会作为后一次运行结果的输入，返回的单一一个结果。比如，下面这一行代码就可以将计算l中元素的连加和。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;l_sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;希望有更多的非技术出身的小伙伴可以了解并投入Python编程的行列。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Python中的结构化数据分析利器-Pandas简介</title>
   <link href="http://cloga.github.io/python/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/2013/09/17/pandas_intro"/>
   <updated>2013-09-17T00:00:00+08:00</updated>
   <id>http://cloga.github.io/python/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/2013/09/17/pandas_intro</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt;是python的一个数据分析包，最初由&lt;a href=&quot;http://www.aqr.com/&quot;&gt;AQR Capital Management&lt;/a&gt;于2008年4月开发，并于2009年底开源出来，目前由专注于Python数据包开发的&lt;a href=&quot;http://pydata.org/&quot;&gt;PyData&lt;/a&gt;开发team继续开发和维护，属于PyData项目的一部分。Pandas最初被作为金融数据分析工具而开发出来，因此，pandas为时间序列分析提供了很好的支持。 Pandas的名称来自于面板数据（panel data）和python数据分析（data analysis）。panel data是经济学中关于多维数据集的一个术语，在Pandas中也提供了panel的数据类型。 这篇文章会介绍一些Pandas的基本知识，偷了些懒其中采用的例子大部分会来自官方的&lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/10min.html&quot;&gt;10分钟学Pandas&lt;/a&gt;。我会加上个人的理解，帮助大家记忆和学习。&lt;/p&gt;

&lt;h3&gt;Pandas中的数据结构&lt;/h3&gt;

&lt;p&gt;Series：一维数组，与Numpy中的一维array类似。二者与Python基本的数据结构List也很相近，其区别是：List中的元素可以是不同的数据类型，而Array和Series中则只允许存储相同的数据类型，这样可以更有效的使用内存，提高运算效率。&lt;/p&gt;

&lt;p&gt;Time- Series：以时间为索引的Series。&lt;/p&gt;

&lt;p&gt;DataFrame：二维的表格型数据结构。很多功能与R中的data.frame类似。可以将DataFrame理解为Series的容器。以下的内容主要以DataFrame为主。&lt;/p&gt;

&lt;p&gt;Panel ：三维的数组，可以理解为DataFrame的容器。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;h3&gt;创建DataFrame&lt;/h3&gt;

&lt;p&gt;首先引入Pandas及Numpy：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;官方推荐的缩写形式为pd，你可以选择其他任意的名称。 DataFrame是二维的数据结构，其本质是Series的容器，因此，DataFrame可以包含一个索引以及与这些索引联合在一起的Series，由于一个Series中的数据类型是相同的，而不同Series的数据结构可以不同。因此对于DataFrame来说，每一列的数据结构都是相同的，而不同的列之间则可以是不同的数据结构。或者以数据库进行类比，DataFrame中的每一行是一个记录，名称为Index的一个元素，而每一列则为一个字段，是这个记录的一个属性。 创建DataFrame有多种方式：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;以字典的字典或Series的字典的结构构建DataFrame，这时候的最外面字典对应的是DataFrame的列，内嵌的字典及Series则是其中每个值。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到d是一个字典，其中one的值为Series有3个值，而two为Series有4个值。由d构建的为一个4行2列的DataFrame。其中one只有3个值，因此d行one列为NaN（Not a Number）--Pandas默认的缺失值标记。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;从列表的字典构建DataFrame，其中嵌套的每个列表（List）代表的是一个列，字典的名字则是列标签。这里要注意的是每个列表中的元素数量应该相同。否则会报错：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arrays&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;same&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;从字典的列表构建DataFrame，其中每个字典代表的是每条记录（DataFrame中的一行），字典中每个值对应的是这条记录的相关属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上的语句与以Series的字典形式创建的DataFrame相同，只是思路略有不同，一个是以列为单位构建，将所有记录的不同属性转化为多个Series，行标签冗余，另一个是以行为单位构建，将每条记录转化为一个字典，列标签冗余。使用这种方式，如果不通过columns指定列的顺序，那么列的顺序会是随机的。&lt;/p&gt;

&lt;p&gt;个人经验是对于从一些已经结构化的数据转化为DataFrame似乎前者更方便，而对于一些需要自己结构化的数据（比如解析Log文件，特别是针对较大数据量时），似乎后者更方便。创建了DataFrame后可以通过index.name属性为DataFrame的索引指定名称。&lt;/p&gt;

&lt;h3&gt;DataFrame转换为其他类型&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;dict&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;outtype的参数为‘dict’、‘list’、‘series’和‘records’。
dict返回的是dict of dict；list返回的是列表的字典；series返回的是序列的字典；records返回的是字典的列表&lt;/p&gt;

&lt;h3&gt;查看数据&lt;/h3&gt;

&lt;p&gt;head和tail方法可以显示DataFrame前N条和后N条记录，N为对应的参数，默认值为5。这通常是拿到DataFrame后的第一个命令，可以方便的了解数据内容和含义。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;one&lt;/th&gt;
      &lt;th&gt;two&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;index&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;a&lt;/th&gt;
      &lt;td&gt;  1&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;b&lt;/th&gt;
      &lt;td&gt;  2&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;c&lt;/th&gt;
      &lt;td&gt;  3&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;d&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt; 4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;4 rows × 2 columns&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;R中的对应函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;head(df)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;one&lt;/th&gt;
      &lt;th&gt;two&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;index&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;a&lt;/th&gt;
      &lt;td&gt;  1&lt;/td&gt;
      &lt;td&gt; 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;b&lt;/th&gt;
      &lt;td&gt;  2&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;c&lt;/th&gt;
      &lt;td&gt;  3&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;d&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt; 4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;4 rows × 2 columns&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;index（行）和columns（列）属性，可以获得DataFrame的行和列的标签。这也是了解数据内容和含义的重要步骤。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Index([u&amp;#39;a&amp;#39;, u&amp;#39;b&amp;#39;, u&amp;#39;c&amp;#39;, u&amp;#39;d&amp;#39;], dtype=&amp;#39;object&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看字段名&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Index([u&amp;#39;one&amp;#39;, u&amp;#39;two&amp;#39;], dtype=&amp;#39;object&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;decribe方法可以计算各个列的基本描述统计值。包含计数，平均数，标准差，最大值，最小值及4分位差。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;one&lt;/th&gt;
      &lt;th&gt;two&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt; 3.0&lt;/td&gt;
      &lt;td&gt; 4.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt; 2.0&lt;/td&gt;
      &lt;td&gt; 2.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt; 1.0&lt;/td&gt;
      &lt;td&gt; 1.290994&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt; 1.0&lt;/td&gt;
      &lt;td&gt; 1.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt; 1.5&lt;/td&gt;
      &lt;td&gt; 1.750000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt; 2.0&lt;/td&gt;
      &lt;td&gt; 2.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt; 2.5&lt;/td&gt;
      &lt;td&gt; 3.250000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt; 3.0&lt;/td&gt;
      &lt;td&gt; 4.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;8 rows × 2 columns&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;R中的对应函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;summary(df)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;行列转置&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;max-height:1000px;max-width:1500px;overflow:auto;&quot;&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;index&lt;/th&gt;
      &lt;th&gt;a&lt;/th&gt;
      &lt;th&gt;b&lt;/th&gt;
      &lt;th&gt;c&lt;/th&gt;
      &lt;th&gt;d&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;one&lt;/th&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;two&lt;/th&gt;
      &lt;td&gt; 1&lt;/td&gt;
      &lt;td&gt; 2&lt;/td&gt;
      &lt;td&gt; 3&lt;/td&gt;
      &lt;td&gt;  4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;2 rows × 4 columns&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;排序&lt;/h3&gt;

&lt;p&gt;DataFrame提供了多种排序方式。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sort_index可以以轴的标签进行排序。axis是指用于排序的轴，可选的值有0和1，默认为0即行标签（Y轴），1为按照列标签排序。 ascending是排序方式，默认为True即降序排列。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;DataFrame也提供按照指定列进行排序，可以仅指定一个列作为排序标准（以单独列名作为columns的参数），也可以进行多重排序（columns的参数为一个列名的List，列名的出现顺序决定排序中的优先级），在多重排序中ascending参数也为一个List，分别与columns中的List元素对应。&lt;/p&gt;

&lt;h3&gt;读写数据&lt;/h3&gt;

&lt;p&gt;DataFrame可以方便的读写数据文件，最常见的文件为CSV或Excel。Pandas读写Excel文件需要&lt;a href=&quot;http://pythonhosted.org/openpyxl/&quot;&gt;openpyxl&lt;/a&gt;（Excel 2007）, &lt;a href=&quot;http://www.python-excel.org/&quot;&gt;xlrd/xlwt&lt;/a&gt;（Excel 2003）。&lt;/p&gt;

&lt;p&gt;从CSV中读取数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;R中的对应函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;df = read.csv(&amp;#39;foo.csv&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将DataFrame写入CSV：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;R中的对应函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;df.to.csv(&amp;#39;foo.csv&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从Excel中读取数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;xls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExcelFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sheet1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;na_values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;NA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先定义一个Excel文件，用xls.parse解析sheet1的内容，index&lt;em&gt;col用于指定index列，na&lt;/em&gt;values定义缺失值的标识。&lt;/p&gt;

&lt;p&gt;将DataFrame写入Excel文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_excel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sheet_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sheet1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认的sheet为sheet1，也可以指定其他sheet名。&lt;/p&gt;

&lt;h3&gt;数据切片&lt;/h3&gt;

&lt;p&gt;通过下标选取数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上两个语句是等效的，都是返回df名称为one列的数据，返回的为一个Series。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下标索引选取的是DataFrame的记录，与List相同DataFrame的下标也是从0开始，区间索引的话，为一个左闭右开的区间，即[0：3]选取的为1-3三条记录。与此等价，还可以用起始的索引名称和结束索引名称选取数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有一点需要注意的是使用起始索引名称和结束索引名称时，也会包含结束索引的数据。以上两种方式返回的都是DataFrame。&lt;/p&gt;

&lt;p&gt;使用标签选取数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;行标签&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;列标签&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#选取ab两行数据&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#选取one列的数据&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;df.loc的第一个参数是行标签，第二个参数为列标签（可选参数，默认为所有列标签），两个参数既可以是列表也可以是单个字符，如果两个参数都为列表则返回的是DataFrame，否则，则为Series。&lt;/p&gt;

&lt;p&gt;使用位置选取数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;行位置&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;列位置&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#选取第二行，第二列的值，返回的为单个值&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],:]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#选取第一行及第三行的数据&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#选取第一行到第三行（不包含）的数据&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#选取所有记录的第一列的值，返回的为一个Series&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#选取第一行数据，返回的为一个Series&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PS：loc为location的缩写，iloc则为integer &amp;amp; location的缩写&lt;/p&gt;

&lt;p&gt;更广义的切片方式是使用.ix，它自动根据你给到的索引类型判断是使用位置还是标签进行切片&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过逻辑指针进行数据切片：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;逻辑条件&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#单个逻辑条件&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#多个逻辑条件组合&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这种方式获得的数据切片都是DataFrame。&lt;/p&gt;

&lt;h3&gt;基本运算&lt;/h3&gt;

&lt;p&gt;Pandas支持基本的运算及向量化运算。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#计算列的平均值，参数为轴，可选值为0或1.默认为0，即按照列运算&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#计算行的和&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#将一个函数应用到DataFrame的每一列，这里使用的是匿名lambda函数，与R中apply函数类似&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;设置索引&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;重命名列&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;查看每个列的数据类型&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtypes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;R中的对应函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;str(df)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;查看最大值/最小值&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idxmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;重设索引&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;改变数据类型&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;计算Series每个值的频率&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value_counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;R的对应函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;table(df[&amp;#39;A&amp;#39;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;字符方法&lt;/h3&gt;

&lt;p&gt;pandas提供许多向量化的字符操作，你可以在str属性中找到它们&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;DataFrame的合并&lt;/h3&gt;

&lt;p&gt;Contact：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;h&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##构建一个新的DataFrame，dfs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#合并两个DataFrame&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Merge（类似SQL中的Join操作）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;foo2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lval&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;foo2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;rval&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#构建了两个DataFrame&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#按照key列将两个DataFrame join在一起&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;DataFrame中的Group by：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;D&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#按照A列的值分组求和&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##按照A、B两列的值分组求和&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对应R函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tapply()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在实际应用中，先定义groups，然后再对不同的指标指定不同计算方式。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#按照A列的值分组求和&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##按照A列的值分组求B组和&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##按照A列的值分组B组计数&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认会以groupby的值作为索引，如果不将这些值作为索引，则需要使用as_index=False&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;构建透视表&lt;/h3&gt;

&lt;p&gt;使用pivot_table和crosstab都可以创建数据透视表&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;&amp;#39;D&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;E&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pivot_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#以A、B为行标签，以C为列标签将D列的值汇总求和&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crosstab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#以A、B为行标签，以C为列标签将D列的值汇总求和&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt; 时间序列分析&lt;/h3&gt;

&lt;p&gt;时间序列也是Pandas的一个特色。时间序列在Pandas中就是以Timestamp为索引的Series。&lt;/p&gt;

&lt;p&gt;pandas提供to_datetime方法将代表时间的字符转化为Timestamp对象：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;2013-09-16 21:00:00&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有时我们需要处理时区问题：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tz_convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;构建一个时间序列：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;1/1/2012&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;periods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pandas提供resample方法对时间序列的时间粒度进行调整：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ts_h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;H&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;how&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#M,5Min,1s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上是将时间序列调整为小时，还可以支持月（M），分钟（Min）甚至秒（s）等。&lt;/p&gt;

&lt;h3&gt;画图&lt;/h3&gt;

&lt;p&gt;Pandas也支持一定的绘图功能，需要安装matplot模块。&lt;/p&gt;

&lt;p&gt;比如前面创建的时间序列，通过plot()就可以绘制出折线图，也可以使用hist()命令绘制频率分布的直方图。&lt;/p&gt;

&lt;p&gt;关于Panda作图，请查看另一篇博文：&lt;a href=&quot;http://cloga.info/python/2014/02/23/Plotting_with_Pandas/&quot;&gt;用Pandas作图&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以上是关于Pandas的简单介绍，其实除了Pandas之外，Python还提供了多个科学计算包，比如Numpy，Scipy，以及数据挖掘的包：Scikit Learn，Orage，NLTK等，感兴趣的同学可以了解一下。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>复杂网络程序包NetworkX简介</title>
   <link href="http://cloga.github.io/python/sna/2013/09/03/networkx_intro"/>
   <updated>2013-09-03T08:24:03+08:00</updated>
   <id>http://cloga.github.io/python/sna/2013/09/03/networkx_intro</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://networkx.github.io/&quot;&gt;NetworkX&lt;/a&gt;是Python中的一个复杂网络的程序包。从其&lt;a href=&quot;http://networkx.github.com/documentation/latest/_downloads/networkx_reference.pdf&quot;&gt;文档手册&lt;/a&gt;中可以看到，它提供以下功能：从多种数据源读写图；支持图的线性代数计算；基础的绘图功能；经典的复杂网络算法等。&lt;/p&gt;

&lt;p&gt;在Python中引入networkx：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;networkx&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;nx&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nx是官方推荐的缩写方式，当然你也可以使用networkx的全拼&lt;/p&gt;

&lt;p&gt;NetworkX中支持四种图。按照边是否有方向，两个节点间是否允许多条边两个维度，分为Graph（无向图），MultiGrpah（复合无向图），DiGrpah（有向图），MultiDiGraph（复合有向图）。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DiGraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MultiGraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MultiDiGraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上就是创建四类图的示例。在networkx中Graph是基本的数据结构，networkx提供的许多方式的input或output都是Graph。以下的示例都以无向图为例。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;在networkx中，Graph是一堆节点与边的组合。 Graph内部使用的是嵌套的字典来表示节点间的关系。我们可以通过add&lt;em&gt;node和add&lt;/em&gt;edge来添加节点与边。如果通过add_edge添加了不存在的node，那么这个networkx会自动添加这个node。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上就构建了有四个节点，两条边的无向图。通过adj属性，可以看到networkx中对这个图的表示。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adj&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}},&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}},&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到第一层的字典的key是每个节点，value则是与其相邻的节点，第二层的字典的key是临近节点，value是edge的属性，同样也是一个字典。&lt;/p&gt;

&lt;p&gt;networkx也提供了批量添加node和edge的方法。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_nodes_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ABCD&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_edges_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上两行命令就为G添加4个节点和两条边，批量添加时参数需为可循环的元素，比如字符串，列表等。&lt;/p&gt;

&lt;p&gt;除了基本的属性外，节点和边也可以指定其他的属性，比如指定节点的大小、颜色和位置，边的权重颜色等，这些属性主要是用于网络图。&lt;/p&gt;

&lt;p&gt;属性既可以在添加节点和边时指定，也可以在添加了节点和边之后再单独指定。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上的两种方式都会为G添加E节点，并为E节点添加两个属性color和size。同理也可以为边增加任意的属性。&lt;/p&gt;

&lt;p&gt;NetworkX也提供了复杂网络的重要指标的计算，比如每个节点的度，出度，入度，度中心性，图的直径等等，&lt;a href=&quot;http://networkx.github.io/documentation/development/reference/algorithms.html&quot;&gt;networkx支持的完整指标列表&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##节点数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number_of_edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##边数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;betweenness_centrality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##返回每个节点的中介中心性&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;degree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##返回每个节点的度&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;除了这些复杂网络的基本指标之外， networkx还提供&lt;a href=&quot;http://networkx.github.io/documentation/development/reference/drawing.html&quot;&gt;布局（layout）&lt;/a&gt;的计算。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spring_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上就可以为G计算spring布局时每个节点的位置，返回的是一个字典，Key是节点的标识符，Value是一个元组，元素是X轴和Y轴对应的坐标。&lt;/p&gt;

&lt;p&gt;Networkx提供了与多种数据源进行交互的方式，比如，我们可以将networkx中的图输出为不同格式的数据，比如JSON，GEXF等等。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write_gexf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;test.gexf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GEXF是Gephi的文件支持，并可以直接用于Sigma.js，市面上的社交网络传播图多数都是用这个可视化框架。&lt;/p&gt;

&lt;p&gt;NetworkX自身也提供一些简单的可视化功能，参见文档的&lt;a href=&quot;http://networkx.github.io/documentation/development/reference/drawing.html&quot;&gt;Drawing&lt;/a&gt;部分。NetworkX的官方应用样例请参考&lt;a href=&quot;http://networkx.github.io/documentation/latest/gallery.html&quot;&gt;gallery&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;PS : Wunderman|Agenda的PMC Team正在不断壮大，如果您对Digital Analytics感兴趣，欢迎与我联系（Base在北京）。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>数据科学简介</title>
   <link href="http://cloga.github.io/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/2013/05/19/introofdatasciece"/>
   <updated>2013-05-19T19:31:27+08:00</updated>
   <id>http://cloga.github.io/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/2013/05/19/introofdatasciece</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.36kr.com/p/157106.html&quot;&gt;数据科学（Data Science）被评为二十一世纪最性感的职业&lt;/a&gt;，本文将为大家揭示什么是数据科学，它与现有的BI，统计学和机器学习有什么区别和联系。本文的内容编译自&lt;a href=&quot;https://class.coursera.org/datasci-001&quot;&gt;Coursera的Data Science课程&lt;/a&gt;（Bill Howe讲授）。&lt;/p&gt;

&lt;p&gt;首先，让我们来看一下&lt;a href=&quot;http://drewconway.com&quot;&gt;Drew Conway&lt;/a&gt;的数据科学维恩图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1950&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;344&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/05/data-science-venn.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/05/data-science-venn.png&quot; alt=&quot;data science venn diagram&quot;&gt;&lt;/a&gt; data science venn diagram[/caption]&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;这张图形象的说明了数据科学的三类必备知识。编程技巧，数学统计学知识和专业领域知识三者缺一不可。同时，也体现了数据科学与传统研究和机器学习的区别。传统研究需要精通数据统计学知识和专业领域知识，而相对欠缺编程技巧；机器学习对编程技巧和数学统计知识的要求较高，而对专业领域知识的要求相对低一些。同时，Drew Conway也提醒，没有数学和统计学知识支撑，而只是编程技巧和专业领域知识的结合是一个危险区域，可能会得出无益而有害的结论。&lt;/p&gt;

&lt;p&gt;接下来，我们看一下数据科学家的三个任务：&lt;/p&gt;

&lt;p&gt;1、数据清洗（建模前的准备）&lt;/p&gt;

&lt;p&gt;解析、抓取、数据格式化&lt;/p&gt;

&lt;p&gt;2、数据建模&lt;/p&gt;

&lt;p&gt;运用统计学知识对结构化的数据进行建模&lt;/p&gt;

&lt;p&gt;3、沟通结果&lt;/p&gt;

&lt;p&gt;用可视化的手段展现结果。&lt;/p&gt;

&lt;p&gt;Bill在这里特别强调数据科学的产物是数据产品，而不仅仅是回答问题。数据科学可以给予他人使用数据的能力。这里的数据产品包括三类：数据驱动的应用（比如拼写检查器，机器翻译），可交互的可视化（&lt;a href=&quot;http://www.google.org/flutrends/&quot;&gt;Google flu application&lt;/a&gt;），线上的数据库。&lt;/p&gt;

&lt;p&gt;最后我们，再来看一下传统的数据工作者想要转型成为数据科学家需要补充哪方面的知识。&lt;/p&gt;

&lt;p&gt;如果你是数据库管理员（DBA），那么你需要学习如何处理非结构化数据；&lt;/p&gt;

&lt;p&gt;如果你是统计学家，那么你需要学习如果处理无法在内存中处理的数据；&lt;/p&gt;

&lt;p&gt;如果你是软件工程师，那么你需要学习统计建模和如果沟通结果；&lt;/p&gt;

&lt;p&gt;如果你是商业分析师，那么你需要学习算法和规模权衡。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>社交网络分析工具介绍</title>
   <link href="http://cloga.github.io/python/r/sna/2013/04/11/socialanalyticstoolsintro"/>
   <updated>2013-04-11T12:23:13+08:00</updated>
   <id>http://cloga.github.io/python/r/sna/2013/04/11/socialanalyticstoolsintro</id>
   <content type="html">&lt;p&gt;尽管Facebook的股价表现差强人意，新浪微博的商业化也遥遥无期，但是，社交网络分析仍然是数据分析中的一个热门话题。我也一直在关注这类内容，下面就为大家介绍一下我所接触到的社交网络分析工具。&lt;/p&gt;

&lt;h1&gt;一、web工具篇&lt;/h1&gt;

&lt;p&gt;让我们先来看一下市面上比较成熟的产品。&lt;/p&gt;

&lt;h2&gt;1、&lt;a href=&quot;http://www.tfengyun.com/&quot;&gt;微博风云榜&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1916&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;364&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/04/%E5%BE%AE%E5%8D%9A%E9%A3%8E%E4%BA%91.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/04/%E5%BE%AE%E5%8D%9A%E9%A3%8E%E4%BA%91.jpg&quot; alt=&quot;微博风云榜&quot;&gt;&lt;/a&gt; 微博风云榜[/caption]&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1917&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;119&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/04/fengyun01.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/04/fengyun01.jpg&quot; alt=&quot;微博风云榜菜单&quot;&gt;&lt;/a&gt; 微博风云榜菜单[/caption]&lt;/p&gt;

&lt;p&gt;从菜单栏可以看到微博风云榜提供了传播分析，舆情监测，内容发布，数据报告等全面的社交分析服务。同时也提供了数据接口，尽管目前只有两个接口，用户信息接口和高级搜索接口，这两个接口就应该可以满足大部分数据服务商的数据需求。&lt;/p&gt;

&lt;p&gt;此外，微博风云榜也有自己的社交影响力查询，可以用于比较不同微博账号的影响力，有点国内的&lt;a href=&quot;http://klout.com/home&quot;&gt;Klout&lt;/a&gt;的味道。&lt;/p&gt;

&lt;p&gt;总的来说，微博风云榜其实已经不仅仅是一个社交分析工具，它集成了社交传播分析，粉丝分析，舆情监测，内容发布等与社交网络运营管理相关的内容，如果再加上Social CRM就更加完美。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://www.weiboreach.com/&quot;&gt;2、知微&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1923&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;564&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/04/Screen-Shot-2013-04-11-at-8.31.17-AM.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/04/Screen-Shot-2013-04-11-at-8.31.17-AM.png&quot; alt=&quot;知微&quot;&gt;&lt;/a&gt; 知微[/caption]&lt;/p&gt;

&lt;p&gt;与微博风云榜相比，知微则更专注于微博的传播的分析，普通版即支持转发数小于1000条的微博的传播分析。知微提供了传播分析全面的数据，包括传播路径图，转发层级，转发内容的词云，水军识别，地域分布...……&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;h2&gt;3、&lt;a href=&quot;http://vis.pku.edu.cn/weibova/weiboevents/&quot;&gt;北大PKUVIS微博可视分析工具&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1924&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;613&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/04/Screen-Shot-2013-04-11-at-8.39.47-AM.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/04/Screen-Shot-2013-04-11-at-8.39.47-AM.png&quot; alt=&quot;PKUVIS微博可视分析工具&quot;&gt;&lt;/a&gt; PKUVIS微博可视分析工具[/caption]&lt;/p&gt;

&lt;p&gt;这是由北京大学可视化实验开发的一个微博分析工具。与微博风云榜类似，也是专注于微博传播分析的工具，与知微相比，可以分析转发数更多的微博，同时也支持基于事件的传播分析，支持的布局也更加多样。&lt;/p&gt;

&lt;h1&gt;二、桌面工具篇&lt;/h1&gt;

&lt;p&gt;了解相对比较成熟的web工具后，让我们看一下有哪些可以用于社交网络分析的桌面工具。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://www.gephi.org/&quot;&gt;1、Gephi&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;首先介绍一下Gephi，Gephi在社交网络分析领域称得上是明星级的分析工具，它有Java开发的一款开源桌面社交分析工具，有复杂网络图表领域的Photoshop的美誉。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;580&amp;quot;]&lt;img src=&quot;https://gephi.org/wp-content/themes/gephi/images/illustrations/home_screenshot.jpg&quot; alt=&quot;Gephi&quot;&gt; Gephi[/caption]&lt;/p&gt;

&lt;p&gt;Gephi也提供了一个用于复杂网络的文件格式：GEXF，这个文件格式已经成为复杂领域的一个文件标准。&lt;/p&gt;

&lt;p&gt;Gephi已被广泛的用于科研与教学，比如Coursera中的&lt;a href=&quot;https://www.coursera.org/course/sna&quot;&gt;Social Network Analysis&lt;/a&gt;课程就是用Gephi讲授的。&lt;a href=&quot;https://www.udemy.com/gephi/&quot;&gt;Ooof也提供了Gephi的中文教程&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;nodexl.codeplex.com/&quot;&gt;2、NodeXL&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;NodeXL是用于复杂网络分析的一个Excel插件，相对于Gephi，NodeXL更容易入门。它提供了一个Excle模板，按照模板添加数据后就可以进行相关的分析。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;353&amp;quot;]&lt;img src=&quot;http://download.codeplex.com/Download?ProjectName=nodexl&amp;amp;DownloadId=310439&quot; alt=&quot;NodeXL&quot;&gt; NodeXL[/caption]&lt;/p&gt;

&lt;p&gt;关于应用NodeXL进行社交网络分析，可以参见：&lt;a href=&quot;http://ishare.iask.sina.com.cn/f/18252478.html&quot;&gt;Analyzing Social Media Networks with NodeXL Insights from a Connected World&lt;/a&gt;（感谢万能的新浪爱问）&lt;/p&gt;

&lt;h1&gt;三、程序包|库&lt;/h1&gt;

&lt;p&gt;最后再让我们看一下相关的程序包或开源的库。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;networkx.github.io/&quot;&gt;1、NetworkX&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;NetworkX是一个用于复杂网络分析的Python包，内置了常用的图与复杂网络分析算法，可以方便的进行复杂网络数据分析、仿真建模。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1936&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;835&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/04/networkX.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/04/networkX.jpg&quot; alt=&quot;NetworkX&quot;&gt;&lt;/a&gt; NetworkX[/caption]&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://igraph.sourceforge.net/&quot;&gt;2、igraph&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;igraph是一个创建操作复杂网络图的软件包，有C、Python和R三种语言的接口。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1937&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;538&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/04/igraph.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/04/igraph.jpg&quot; alt=&quot;igraph&quot;&gt;&lt;/a&gt; igraph[/caption]&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://nodexl.codeplex.com/discussions/71182?ProjectName=nodexl&quot;&gt;3、NodeXL&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;NodeXL除了Excel之外，也提供一个用于复杂网络分析的.net类库。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://sigmajs.org/examples.html&quot;&gt;4、sigma.js&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;sigma.js是开源的轻量级JS框架，使用HTML的Canvans来生成Gephi图表样式，可以接收的数据源格式为GEXF文件（Gephi提出的数据格式。）&lt;/p&gt;

&lt;p&gt;前面提到的微博风云榜、知微就是使用这个框架来生成传播图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1938&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;713&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/04/sigma.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/04/sigma.jpg&quot; alt=&quot;sigma.js&quot;&gt;&lt;/a&gt; sigma.js[/caption]&lt;/p&gt;

&lt;h1&gt;四、数据获取篇&lt;/h1&gt;

&lt;p&gt;前面提到的是数据分析和图形展现方面的工具，最后再聊一下数据获得的部分，主要的数据源是来自新浪微博，下面介绍R和Python的两个SDK。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://jliblog.com/app/rweibo&quot;&gt;1、Rweibo&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Rweibo是一个新浪微博的R语言SDK，作为library在R环境中调用，对新浪微博提供的接口进行了实现（见&lt;a href=&quot;http://open.weibo.com/wiki/API%E6%96%87%E6%A1%A3_V2&quot;&gt;新浪微博API&lt;/a&gt;），可以进行微博信息获取、用户信息获取、搜索、发表微博等操作。该应用通过OAuth的方式授权，使用者首先需要到&lt;a href=&quot;http://open.weibo.com/devel.php&quot;&gt;新浪微博开放平台&lt;/a&gt;申请一个新的应用，获取App Key和App Secret，然后在R环境中按照提示注册一个应用，从而进行各项操作。&lt;/p&gt;

&lt;p&gt;一个特色是作者提供了一个搜索接口，通过爬取页面来获得微博搜索结果页面的信息。&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;http://michaelliao.github.io/sinaweibopy/&quot;&gt;2、sinaweibopy&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;sinaweibopy是Python专用的支持新浪微博API的OAuth 2客户端，无依赖，100%纯Py，单个文件，代码简洁，运行可靠，也是新浪微博官方推荐的Python SDK。&lt;/p&gt;

&lt;p&gt;关于社交网络分析的工具就介绍这些，马上动起手来尝试自己的社交网络分析项目吧~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>用Python的simpleHttpServer搭建本地GA测试环境</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2013/03/18/simplehttpserver"/>
   <updated>2013-03-18T14:06:11+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2013/03/18/simplehttpserver</id>
   <content type="html">&lt;p&gt;数码林（&lt;a href=&quot;http://blog.digitalforest.cn/test-google-analytics&quot;&gt;没有网站也能玩转Google Analytics&lt;/a&gt;）和郑杰同学（&lt;a href=&quot;http://itweb.me/?p=181&quot;&gt;如何本地测试&lt;em&gt;Google Analytics&lt;/em&gt;跟踪脚本&lt;/a&gt;）都介绍过本地搭建GA测试环境的方法，前者使用的是Apache，后者使用xampp。我这里介绍使用Python的simpleHttpServer搭建GA本地测试环境的方法。&lt;/p&gt;

&lt;p&gt;首先，你要安装python。如果你使用的是OS X或者Linux，那么，Python应该已经安装上了，如果你用的是Windows，那么你需要去http://python.org 下载Python2.7并安装。&lt;/p&gt;

&lt;p&gt;安装好Python后，你需要创建一个放置要测试文件的目录（比如说test）。&lt;/p&gt;

&lt;p&gt;在命令行下到达这个目录。这里你会用到cd命令，如果你在Windows且test的完整路径是d:\program\test，那么你需要在Windows的CMD中执行下面三行命令。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;d:
cd \program\test
python -m SimpleHTTPServer 8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样本地的服务器就搭好了，访问一下localhost:8000，你就能看到test文件夹下的内容，将要测试GA代码的页面放在这个目录下，并在浏览器中访问它吧~&lt;/p&gt;

&lt;p&gt;推荐使用&lt;a href=&quot;http://www.cloga.info/2012/05/19/%e5%88%a9%e7%94%a8chrome%e7%9a%84google-analytics-debugger%e8%bf%9b%e8%a1%8cga%e7%9a%84%e6%95%85%e9%9a%9c%e6%8e%92%e9%99%a4/&quot;&gt;Chrome GAdebugger&lt;/a&gt;进行测试。这是一个本地的环境，因此不会真的把数据发送给GA，如果需要将相关数据发送给GA则需要修改本地的Host文件，并将127.0.0.1：8000指向一个虚拟的域名。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>获取GA数据的R包-RGA 简介</title>
   <link href="http://cloga.github.io/ga%20api/r/2013/02/26/rga"/>
   <updated>2013-02-26T00:23:10+08:00</updated>
   <id>http://cloga.github.io/ga%20api/r/2013/02/26/rga</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/skardhamar/rga&quot;&gt;RGA&lt;/a&gt;是在R中实现的GA API，可以直接将GA数据读入到R中，Coursera的&lt;a href=&quot;https://www.coursera.org/course/dataanalysis&quot;&gt;Data Analytics&lt;/a&gt;的课程中Jeff也提及过。&lt;/p&gt;

&lt;p&gt;RGA的使用非常方便，将GA的API方法都封装成R的语句。&lt;/p&gt;

&lt;h2&gt;RGA的安装&lt;/h2&gt;

&lt;p&gt;由于RGA没有放在CRAN上，因此没法直接用install.packages安装，当然我们可以下载 zip或tar.gz然后手动进行安装。此外，我们还可以用&lt;code&gt;devtools来进行安装。&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;install.packages(&amp;quot;devtools&amp;quot;)#安装devtools
library(devtools)#载入devtools包
install_github(&amp;quot;rga&amp;quot;, &amp;quot;skardhamar&amp;quot;)#安装rga
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt; RGA的使用&amp;lt;!-- more --&amp;gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;library(rga)#载入RGA的包
rga.open(instance=&amp;quot;ga&amp;quot;)#完成Google的认证流程
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你执行这段代码后报错，如下所示&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1872&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;666&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/02/SSL-Error.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/02/SSL-Error.jpg&quot; alt=&quot;SSL Error&quot;&gt;&lt;/a&gt; SSL Error[/caption]&lt;/p&gt;

&lt;p&gt;那么你需要在rga.open之前运行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;code&amp;gt;options(RCurlOptions = list(verbose = FALSE, capath = system.file(&amp;quot;CurlSSL&amp;quot;, &amp;quot;cacert.pem&amp;quot;, package = &amp;quot;RCurl&amp;quot;), ssl.verifypeer = FALSE))&amp;lt;/code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行这段代码后，会在默认浏览器中打开Google的认证页面，输入GA的用户和密码后，会返回一个code，用于程序换取token。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1863&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;685&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/02/OAth.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/02/OAth.jpg&quot; alt=&quot;OAth-Step1&quot;&gt;&lt;/a&gt; OAuth-Step1[/caption]&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1864&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;379&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/02/OAth-Step2.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/02/OAth-Step2.jpg&quot; alt=&quot;OAth-Step2&quot;&gt;&lt;/a&gt; OAuth-Step2[/caption]&lt;/p&gt;

&lt;p&gt;默认会使用作者的API Client，如果要使用自己的API则需要指定Client.id和Client.secret(这两个值见&lt;a href=&quot;https://code.google.com/apis/console/&quot;&gt;Google APIs Consoles&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rga.open(instance = &amp;quot;ga&amp;quot;, 
         client.id = &amp;quot;862341168163-qtefv92ckvn2gveav66im725c3gqj728.apps.googleusercontent.com&amp;quot;, 
         client.secret = &amp;quot;orSEbf0-S76VZv6RMHe46z_N&amp;quot;)&amp;lt;span style=&amp;quot;font-family: Georgia, &amp;#39;Times New Roman&amp;#39;, &amp;#39;Bitstream Charter&amp;#39;, Times, serif; font-size: 13px; line-height: 19px;&amp;quot;&amp;gt; &amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_1865&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;416&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/02/OAth-Step3.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/02/OAth-Step3.jpg&quot; alt=&quot;OAth-Step3&quot;&gt;&lt;/a&gt; OAuth-Step3[/caption]&lt;/p&gt;

&lt;p&gt;填入code后，GA的OAth过程就完成了。一个ga实例就创建好了，我们可以使用这个实例来获取GA的数据。&lt;/p&gt;

&lt;p&gt;下面就是获取数据的基本语法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ga$getData(ids, start.date, end.date, 
           metrics = &amp;quot;ga:visits&amp;quot;, dimensions = &amp;quot;ga:date&amp;quot;, 
           sort = &amp;quot;&amp;quot;, filters = &amp;quot;&amp;quot;, segment = &amp;quot;&amp;quot;,
           start = 1, max = 1000)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中要ids是指profile id其实对应就是GA中一张数据表（是的，每个profile都相当于一张表，不过应该是BigTable）形式为&amp;#39;ga:36050032&amp;#39;，请注意是字符形式。start.date和end.date是指时间范围，格式为&amp;#39;2013-02-26&amp;#39;，也是字符形式。其余的参数可以先不用修改。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1869&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;369&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2013/02/Profile-ID1.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2013/02/Profile-ID1.jpg&quot; alt=&quot;Profile ID&quot;&gt;&lt;/a&gt; Profile ID[/caption]&lt;/p&gt;

&lt;p&gt;参数的具体用法参见&lt;a href=&quot;https://developers.google.com/analytics/devguides/reporting/core/v3/reference?hl=zh-CN#q_details&quot;&gt;GA API文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;返回的是一个data frame。如果你需要将数据保存为CSV，那么只需要&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;data&amp;lt;-ga$getData(ids, start.date, end.date,
           metrics = &amp;quot;ga:visits&amp;quot;, dimensions = &amp;quot;ga:date&amp;quot;,
           sort = &amp;quot;&amp;quot;, filters = &amp;quot;&amp;quot;, segment = &amp;quot;&amp;quot;,
           start = 1, max = 1000)#将返回的data frame赋值给data，是的R中的赋值用类似-&amp;gt;的箭头，箭头方向表示赋值方向。
write.csv(data, file = &amp;quot;data.csv&amp;quot;)#将data中的数据写入名为data.csv的文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好了，到这里我们用RGA包成功从GA中取出了数据，并保存为CSV文件，快点动手尝试一下吧~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>计算GA归因模型数据的小工具</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2013/01/19/attributiontool"/>
   <updated>2013-01-19T13:50:19+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2013/01/19/attributiontool</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/2012/05/20/%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E4%B8%AD%E5%BD%92%E5%9B%A0%E5%BB%BA%E6%A8%A1attribution-modeling/&quot;&gt;归因建模工具&lt;/a&gt;是GA的Premium版本和测试中的UA的一个新增功能。通过现在版本GA中热门转化路径数据也可以自行计算首次交互，最后交互和线性模型这三种模型的数据。比如&lt;a href=&quot;http://www.lunametrics.com/blog/2012/05/17/multichannel-attribution-modeling-tool/&quot;&gt;Lunametrics最早提供了在Excel中完成计算的方法&lt;/a&gt;，&lt;a href=&quot;http://www.szwebanalytics.com/four-web-analytics-attribution-model.html&quot;&gt;胡力同学也提供了类似的解决方案&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这里我给出一个python做的exe小工具，&lt;a href=&quot;https://github.com/cloga/MCF/raw/master/mcf.rar&quot;&gt;点击MCF计算小工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用方法如下：&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;1、从GA中下载csv格式的热门转化路径数据&lt;/p&gt;

&lt;p&gt;2、用记事本打开，并将编码修改为ANSI，将名称改为MCF.csv&lt;/p&gt;

&lt;p&gt;3、将rar中文件解压到任意目录，并将MCF.csv放到MCF文件夹中&lt;/p&gt;

&lt;p&gt;4、双击MCF.exe，会生成一个mcf&lt;em&gt;result&lt;/em&gt;XXXX.csv&lt;/p&gt;

&lt;p&gt;请注意语言与货币符号的统一。系统语言使用英语则Profile中的货币请使用$，系统语言使用中文，则货币请使用￥。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网络分析与图简介</title>
   <link href="http://cloga.github.io/sna/2012/12/24/socialgrpah"/>
   <updated>2012-12-24T15:42:27+08:00</updated>
   <id>http://cloga.github.io/sna/2012/12/24/socialgrpah</id>
   <content type="html">&lt;p&gt;[caption id=&amp;quot;attachment_1774&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/facebook/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Facebook-300x166.png&quot; alt=&quot;Friend Visualization&quot;&gt;&lt;/a&gt; Friend Visualization[/caption]&lt;/p&gt;

&lt;p&gt;前面有介绍过&lt;a href=&quot;http://www.cloga.info/2012/11/25/%e6%96%b0%e6%b5%aa%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e8%b7%af%e5%be%84%e5%9b%be%e7%9a%84%e5%88%b6%e4%bd%9c/&quot;&gt;使用Gephi来制作传播图&lt;/a&gt;，图是Social Network分析最常用的表现形式和方式，这篇文章介绍一下基本的相关知识。&lt;a href=&quot;http://mlg.ucd.ie/summer&quot;&gt;点击查看原始文档&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Graph的相关基本概念&lt;/h2&gt;

&lt;p&gt;图（Graph）：图是用来表示一组物体之间的关系的方式。&lt;/p&gt;

&lt;p&gt;节点（Node）：节点是指要分析的物体，每一个物体就是一个节点，比如在Social Network中每个人就是一个节点。&lt;/p&gt;

&lt;p&gt;边（Edge）：Graph中两个节点间的连线，用于表示两个节点的关系。比如在Social Network中两个人的关注关系，微博传播中转发关系。&lt;/p&gt;

&lt;p&gt;度（Degree）：节点的度是指与其相连的边数，如果一个节点有3个边，那么这个节点的度就是3。&lt;/p&gt;

&lt;p&gt;有向图（Directed Graph）：边代表的关系具有方向的图。比如微博的关注关系，就是有方向的。&lt;/p&gt;

&lt;p&gt;输入度（In-degree）：有向图中一个节点收到的边。&lt;/p&gt;

&lt;p&gt;输出度（Out-degree）：有向图中一个节点发出的边。&lt;/p&gt;

&lt;p&gt;无向图（Undirected Graph）：边代表的关系没有方向的图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1771&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/direct-graph/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Direct-Graph-300x101.jpg&quot; alt=&quot;Direct Graph&quot;&gt;&lt;/a&gt; Direct Graph[/caption]&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;加权图（Weighted Graph）：每个边权重不同的图，边的权重可以代表相似度，距离或者链接成本等。加权图与有向和无向是两个不同的维度。因此，在实际应用中会看到有向加权图（边既有方向又有权重）和无向加权图（边有权重但没有方向）。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1772&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/weighted-graph/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/weighted-Graph-300x104.jpg&quot; alt=&quot;Weighted Graph&quot;&gt;&lt;/a&gt; Weighted Graph[/caption]&lt;/p&gt;

&lt;p&gt;属性图（Attributed Graphs）:节点和边上可以承载更多的属性，这类图叫做属性图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1773&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/attributed-graph/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Attributed-Graph-300x66.png&quot; alt=&quot;Attributed Graph&quot;&gt;&lt;/a&gt; Attributed Graph[/caption]&lt;/p&gt;

&lt;p&gt;自我网络（Ego Networks）：自我网络关注的不是网络整体而是以个体为中心，通过收集自我焦点关联的节点的信息，可以为个体构建一个局部网络。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1775&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/ego-networks/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Ego-Networks-300x119.png&quot; alt=&quot;Ego Networks&quot;&gt;&lt;/a&gt; Ego Networks[/caption]&lt;/p&gt;

&lt;p&gt;偶图（Bipartite Graphs）：在偶图中节点被分成两个独立的集合，以确保同一集合中任意两个节点都不共享一条边。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1776&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/actors-movies-bipartite-graphs/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Actors-Movies-Bipartite-Graphs-300x138.png&quot; alt=&quot;Actors-Movies Bipartite Graphs&quot;&gt;&lt;/a&gt; Actors-Movies Bipartite Graphs[/caption]&lt;/p&gt;

&lt;p&gt;多关系网络（Multi-Relational Networks）：在许多社交网络分析（SNA）的应用程序中，在节点间可能存在多种关系。在一种关系网络中节点间距离很近，而在另一种中则可能距离很远。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1777&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/multi-relational-networks/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Multi-Relational-Networks-300x159.png&quot; alt=&quot;Multi-Relational Networks&quot;&gt;&lt;/a&gt; Multi-Relational Networks[/caption]&lt;/p&gt;

&lt;p&gt;路径（Path）：图中从一个节点到另一个节点的一系列的边叫做路径。路径的长度就是边的个数，通常是寻找两个节点间的最短路径。&lt;/p&gt;

&lt;p&gt;图的直径：图的直径是指所有节点间的最短路径中的最长的那条。&lt;/p&gt;

&lt;p&gt;连通图（Connected Graph）：每个节点间都用路径连通的图。反之就是非连通图（Disconnected Graph）。&lt;/p&gt;

&lt;p&gt;连通分支（Connected Component）：如果一个连通图作为非连通图的一个成分，则这个连通图称为非连通图的连通分支。在许多现实的社交网络中，大部分节点将属于一个巨大的分支。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1779&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/3-connected-components/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/3-connected-components-300x97.png&quot; alt=&quot;3 connected components&quot;&gt;&lt;/a&gt; 3 connected components[/caption]&lt;/p&gt;

&lt;h2&gt;向心性的计算&lt;/h2&gt;

&lt;p&gt;临近节点（Neighbourhood）：是指与它有边直接相连的节点（不包括它自身）。&lt;/p&gt;

&lt;p&gt;集中系数（Clustering Coefficient）：节点的集中系数=其临近的节点中有边相连的节点数/其临近节点总数。图的集中系数是其每个节点的聚类系数的平均数。节点的集中系数表现了这个节点的临近节点的集中情况。图的集中系数表明图的集中水平。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1780&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/clustering-coefficient/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Clustering-Coefficient-300x104.png&quot; alt=&quot;Clustering Coefficient&quot;&gt;&lt;/a&gt; Clustering Coefficient[/caption]&lt;/p&gt;

&lt;p&gt;度中心性（Degree Centrality）：计算一个节点的边数，度中心性关注单个节点。&lt;/p&gt;

&lt;p&gt;Hub节点：度很高的节点。在网络中通常扮演重要的角色。对于一个有向的网络来说，输入度通常用来代表受欢迎程度。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1781&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/degree/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Degree-300x160.png&quot; alt=&quot;Degree&quot;&gt;&lt;/a&gt; Degree[/caption]&lt;/p&gt;

&lt;p&gt;中介中心性（Betweenness Centrality）：出现在许多其他节点间最短路径上的节点有较高的中介中心性分数。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1782&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/betweeness-centrality/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Betweeness-Centrality-300x173.png&quot; alt=&quot;Betweeness Centrality&quot;&gt;&lt;/a&gt; Betweeness Centrality[/caption]&lt;/p&gt;

&lt;p&gt;节点A的度中心性高于节点H，因为节点H的直接连接更少。而节点H有更高的中介中心性，它在这个网络中扮演经纪人的角色，它处在网络内许多节点交往的路径上，因此，它具有控制其他人交往的能力。&lt;/p&gt;

&lt;p&gt;特征向量中心性（Eigenvector Centrality）：一个节点的特征向量中心性与其临近节点的中心性得分的总和成正比。与重要的节点连接的节点更重要。有少量有影响的联系人的节点其中心性可能超过拥有大量平庸的联系人的节点。这点与PR值类似。&lt;/p&gt;

&lt;p&gt;特征向量中心性的计算：&lt;/p&gt;

&lt;p&gt;1、计算图的成对临近矩阵的特征分解&lt;/p&gt;

&lt;p&gt;2、选择有最大特征值的特征向量&lt;/p&gt;

&lt;p&gt;3、第i个节点的中心性等于特征向量中的第i元素&lt;/p&gt;

&lt;h2&gt;随机网络（Random Networks）以及小世界网络（Small World Networks）&lt;/h2&gt;

&lt;p&gt;Erdős–Rényi随机图模型（Random Graph Model）：一个有&lt;em&gt;n&lt;/em&gt;个非连通节点的图，以概率&lt;em&gt;p&lt;/em&gt;在每对节点间创建边。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1787&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/random-networks/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Random-Networks-300x107.png&quot; alt=&quot;Random Networks&quot;&gt;&lt;/a&gt; Random Networks[/caption]&lt;/p&gt;

&lt;p&gt;小世界网络：&lt;/p&gt;

&lt;p&gt;1、米尔格拉姆（著名的社会心理学家，曾主持服从实验）的小世界实验（Small World Experiment）：&lt;/p&gt;

&lt;p&gt;向内布拉斯加州随机选出的人发送一个包裹，让他们将这个包裹送给波士顿州的一名股票经纪人。要求他们将这个包裹转寄给可能认识这个股票经纪人的人。&lt;/p&gt;

&lt;p&gt;尽管大部分节点不是直接连接，但是，每个节点可以通过一个相对较少的几次传递与其他节点相连。&lt;/p&gt;

&lt;p&gt;2、凯文·贝肯的六度（Six Degrees of Kevin Bacon）：基于小世界网络的一个室内游戏&lt;/p&gt;

&lt;p&gt;从互联网电影数据库（IMDB）找出演员间合作的图。&lt;/p&gt;

&lt;p&gt;一个演员的贝肯数是指他与贝肯相连最短路径的度数。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1789&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/bancon-number/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Bancon-Number-300x63.jpg&quot; alt=&quot;Bancon Number&quot;&gt;&lt;/a&gt; Bancon Number[/caption]&lt;/p&gt;

&lt;p&gt;3、小世界网络的典型属性：&lt;/p&gt;

&lt;p&gt;高集中系数&lt;/p&gt;

&lt;p&gt;短平均路径&lt;/p&gt;

&lt;p&gt;很多hub节点&lt;/p&gt;

&lt;p&gt;构建一个直径较大的连通图，然后随机在其上添加几条边，图的直径将快速变小。&lt;/p&gt;

&lt;p&gt;小世界网络有许多局部的联接和少量的“捷径”。&lt;/p&gt;

&lt;p&gt;4、生成小世界网络：&lt;/p&gt;

&lt;p&gt;创建&lt;em&gt;n&lt;/em&gt;个节点的环，每一个节点与其最近的&lt;em&gt;k&lt;/em&gt;个邻近节点相连&lt;/p&gt;

&lt;p&gt;以概率&lt;em&gt;p&lt;/em&gt;将每个节点与某个目标节点相连。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1790&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/small-world-network/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/small-world-network-300x91.jpg&quot; alt=&quot;small world network&quot;&gt;&lt;/a&gt; small world network[/caption]&lt;/p&gt;

&lt;h2&gt;小团体（Clique）&lt;/h2&gt;

&lt;p&gt;小团体（Clique）：是指互相认识的一个社交群组（即每一对节点间都有边。）&lt;/p&gt;

&lt;p&gt;极大团（Maximal Clique）：当一个团不是图中其他团的子集时称为极大团。&lt;/p&gt;

&lt;p&gt;最大团（Maximum Clique）：当一个团的规模大于等于图中的其他团时称为最大团。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1792&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;119&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/clique/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Clique.png&quot; alt=&quot;Clique&quot;&gt;&lt;/a&gt; Clique[/caption]&lt;/p&gt;

&lt;h2&gt;团体发现（Community Detection）&lt;/h2&gt;

&lt;p&gt;人们经常对在一个节点网络中识别团体很感兴趣&lt;/p&gt;

&lt;p&gt;下图反映了在讨论2004年美国大选的博客中两个截然不同的群体&lt;/p&gt;

&lt;p&gt;在网页上的链接可以反映交织的网络以及一些突出的网站。在这种情况下，2004年美国大选前政治博客的网络结构反映了两个自然和独立的群组。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1794&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;404&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/community-detection/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Community-Detection.png&quot; alt=&quot;Community Detection&quot;&gt;&lt;/a&gt; Community Detection[/caption]&lt;/p&gt;

&lt;p&gt;团体（Community）/类别（Cluster）/模块（Module）存在许多种定义：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一组有共同性质或在图中扮演类似角色的节点[Fortunato, 2010]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个节点子集其中节点间联系密集，而到其他团体的边则密度较小[Girvan &amp;amp; Newman, 2002]&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1797&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;316&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/girvan-newman-2002/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Girvan-Newman-2002.png&quot; alt=&quot;Girvan &amp;amp; Newman ,2002&quot;&gt;&lt;/a&gt; Girvan &amp;amp; Newman ,2002[/caption]&lt;/p&gt;

&lt;h2&gt;图的分割（Graph Partitioning）&lt;/h2&gt;

&lt;p&gt;目的：将图的节点分成用户指定数量的独立群组，用于优化与切分边相关的标准。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1798&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;458&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/graph-partitioning/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Graph-Partitioning.png&quot; alt=&quot;Graph Partitioning&quot;&gt;&lt;/a&gt; Graph Partitioning[/caption]&lt;/p&gt;

&lt;p&gt;最小切分（Min-cut）：就是找到一种分割使边的个数或边的权重最小。&lt;/p&gt;

&lt;p&gt;近期的做法是使用更复杂的标准（即标准化分割）以及应用多层次的策略来扩展到大图。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cs.utexas.edu/users/dml/Software/graclus.html&quot;&gt;Graclus [Dhillon et al, 2007]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;存在的问题：需要预先制定分割的数量，切分原则通常基于聚类层次的强假设。&lt;/p&gt;

&lt;h2&gt;层次聚类（Hierarchical Clustering）&lt;/h2&gt;

&lt;p&gt;根据相似度计算构建一个聚类树来识别高相似度的节点组。&lt;/p&gt;

&lt;p&gt;有两类基本算法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;聚合：从每个节点做为一个单独的群体开始，应用自下而上的策略，合并每个层次上最相似的群体。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拆分：从包含所有节点的单个群体开始，应用自上而下的策略，将每个层次上选定的群体分为两个子群体。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1799&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;318&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/hierarchical-clustering/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Hierarchical-Clustering.png&quot; alt=&quot;Hierarchical Clustering&quot;&gt;&lt;/a&gt; Hierarchical Clustering[/caption]&lt;/p&gt;

&lt;p&gt;应用在团体发现时的问题：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如何从多种不同的聚类方式中进行选择？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在图是否真的存在层次结构？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通常对大图的扩展性很差&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;模块度最优化（Modularity Optimisation）&lt;/h2&gt;

&lt;p&gt;Newman &amp;amp; Girvan [2004]提出了分割质量的测量&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;随机图不应该有群体结构&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过比较实际的节点密度与随机图中的节点期望密度里验证群体的存在&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Q = (群体中存在的节点数) − (群体中期望存在的节点数)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;应用聚合技术迭代合并节点组组成更大的群体，使模块度在合并后提升。&lt;/p&gt;

&lt;p&gt;近期出现的模块度最大化的高效贪婪方法可以将图的规模扩展到10的9次方个节点。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://findcommunities.googlepages.com&quot;&gt;Louvain Method [Blondel et al, 2008]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;应用在团体发现时的问题：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;图的总节点数控制哪个团体被识别[Fortunato, 2010]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;仅将节点分配给一个团体是否合理？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;重叠VS不重叠&lt;/h2&gt;

&lt;p&gt;在现实的社交网络中，一个节点可能属于多个团体。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1800&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;318&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/overlapping-networks/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Overlapping-Networks.png&quot; alt=&quot;Overlapping Networks&quot;&gt;&lt;/a&gt; Overlapping Networks[/caption]&lt;/p&gt;

&lt;p&gt;在许多的现实网络中，真正的“非重叠”团体很少大规模出现[Leskovec et al, 2008]。&lt;/p&gt;

&lt;p&gt;团体重叠的普遍存在，使得无法分割网络而不拆分团体[Reid et al, 2011]。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1801&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/overlapping-networks01/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Overlapping-Networks01-300x143.png&quot; alt=&quot;Overlapping In Large Graph&quot;&gt;&lt;/a&gt; Overlapping In Large Graph[/caption]&lt;/p&gt;

&lt;h2&gt;重叠的团体发现&lt;/h2&gt;

&lt;p&gt;CFinder:基于小团体渗透技术(clique percolation method [Palla et al, 2005])的一种算法。&lt;/p&gt;

&lt;p&gt;K-Clique识别：是完全连接的K各节点的子图。&lt;/p&gt;

&lt;p&gt;如果一对K-Clique共享K-1Clique，那么，这两个K-Clique是临近的。&lt;/p&gt;

&lt;p&gt;从最大的K-Cliques的组合就可以构成重叠的团体。&lt;/p&gt;

&lt;p&gt;K-Cliques的组合是指可以通过临近的K-Clique互相达到的一组K-Clique。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1802&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;219&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/4-cliques/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/4-cliques.png&quot; alt=&quot;4-Cliques&quot;&gt;&lt;/a&gt; 4-Cliques[/caption]&lt;/p&gt;

&lt;p&gt;贪婪小团体扩展（Greedy Clique Expansion，GCE）：识别不同的小团体作为种子，通过优化本地适应性函数贪婪扩展这些种子&lt;a href=&quot;https://sites.google.com/site/greedycliqueexpansion&quot;&gt;[Lee et al, 2010]&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;MOSES：识别高度重叠的团体的可扩展方法[&lt;a href=&quot;https://sites.google.com/site/aaronmcdaid/moses&quot;&gt;McDaid et al, 2010&lt;/a&gt;]。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;随机选择一条边，在这个边周围贪婪地扩展一个团体，以便优化目标函数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除“低质量”的团体&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过重新分配个别节点对团体进行微调&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;动态团体发现（Dynamic Community Finding）&lt;/h2&gt;

&lt;p&gt;在许多社交网络分析任务中，需要分析随着时间变化，团体是如何创建和发展的。&lt;/p&gt;

&lt;p&gt;通常以“线下的”方式检查大量网络的快照来进行这项研究。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1803&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/snapshot-of-network/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Snapshot-of-Network-300x103.png&quot; alt=&quot;Snapshot of Network&quot;&gt;&lt;/a&gt; Snapshot of Network[/caption]&lt;/p&gt;

&lt;p&gt;可以用生命周期中的关键事件来描述动态团体的特征[Palla et al, 2007; Berger-Wolf et al, 2007]。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1804&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/dynamic-community/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Dynamic-Community-300x151.png&quot; alt=&quot;Dynamic Community&quot;&gt;&lt;/a&gt; Dynamic Community[/caption]&lt;/p&gt;

&lt;p&gt;为图的每个快照应用团体发现算法。&lt;/p&gt;

&lt;p&gt;将新生成&amp;quot;后续团体&amp;quot;与过去发现的团体进行匹配。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1805&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/dynamic-community-finding/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Dynamic-Community-Finding-300x105.png&quot; alt=&quot;Dynamic Community Finding&quot;&gt;&lt;/a&gt; Dynamic Community Finding[/caption]&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mlg.ucd.ie/dynamic&quot;&gt;动态团体跟踪软件[Greene et al, 2010]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1806&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;214&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90%e4%b8%8e%e5%9b%be%e7%ae%80%e4%bb%8b/dynamic-community01/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Dynamic-Community01.png&quot; alt=&quot;Dynamic Community Evolution &quot;&gt;&lt;/a&gt; Dynamic Community Evolution[/caption]&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>美化一下Gephi生成的微博传播图</title>
   <link href="http://cloga.github.io/sna/2012/12/24/gephipic"/>
   <updated>2012-12-24T11:20:30+08:00</updated>
   <id>http://cloga.github.io/sna/2012/12/24/gephipic</id>
   <content type="html">&lt;p&gt;在&lt;a href=&quot;http://www.cloga.info/2012/11/25/%e6%96%b0%e6%b5%aa%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e8%b7%af%e5%be%84%e5%9b%be%e7%9a%84%e5%88%b6%e4%bd%9c/&quot;&gt;新浪微博传播路径图的制作&lt;/a&gt;中介绍了微博传播图的制作。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1812&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%be%8e%e5%8c%96%e4%b8%80%e4%b8%8bgephi%e7%94%9f%e6%88%90%e7%9a%84%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e5%9b%be/untitled-2/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Untitled-300x300.png&quot; alt=&quot;微博传播图-未美化前&quot;&gt;&lt;/a&gt; 微博传播图-未美化前[/caption]&lt;/p&gt;

&lt;p&gt;直接将DOT文件导入Gephi中并使用Yifan Hu Layout进行计算后会得出上面的图。在Gephi中进行一些简单的操作可以得到如下的图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1813&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%be%8e%e5%8c%96%e4%b8%80%e4%b8%8bgephi%e7%94%9f%e6%88%90%e7%9a%84%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e5%9b%be/untitled1111/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Untitled1111-300x300.png&quot; alt=&quot;微博传播图-美化后&quot;&gt;&lt;/a&gt; 微博传播图-美化后[/caption]&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;这里主要进行了以下几个操作：&lt;/p&gt;

&lt;p&gt;1、根据模块度将节点分组&lt;/p&gt;

&lt;p&gt;Overview的右侧的Statistics&amp;gt;Network Overview&amp;gt;Modularity&lt;/p&gt;

&lt;p&gt;计算完成后会显示这个网络的Modularty，比如这个网络的模块度是0.591，其中共有四个团体。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1816&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;173&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%be%8e%e5%8c%96%e4%b8%80%e4%b8%8bgephi%e7%94%9f%e6%88%90%e7%9a%84%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e5%9b%be/modularity/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Modularity-173x300.png&quot; alt=&quot;Modularity&quot;&gt;&lt;/a&gt; Modularity[/caption]&lt;/p&gt;

&lt;p&gt;这时在左侧的Partition部分中选择Nodes，刷新Partition参数前的按钮，会出现Modularity，之前这个部分是空的。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1817&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;220&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%be%8e%e5%8c%96%e4%b8%80%e4%b8%8bgephi%e7%94%9f%e6%88%90%e7%9a%84%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e5%9b%be/partition/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Partition-220x300.png&quot; alt=&quot;Partition&quot;&gt;&lt;/a&gt; Partition[/caption]&lt;/p&gt;

&lt;p&gt;点击Apply就可以为四个团体分配不同的颜色。如果对系统分配的颜色不满意，可以点击颜色进行自定义设置。&lt;/p&gt;

&lt;p&gt;2、为节点的标签分配不同权重以便安排不同的字体大小&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1818&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;219&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%be%8e%e5%8c%96%e4%b8%80%e4%b8%8bgephi%e7%94%9f%e6%88%90%e7%9a%84%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e5%9b%be/ranking/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Ranking-219x300.png&quot; alt=&quot;Ranking&quot;&gt;&lt;/a&gt; Ranking[/caption]&lt;/p&gt;

&lt;p&gt;选择Ranking&amp;gt;Nodes，Rank的参数选择OutDegree（即这个节点发出的边有多少）。Min size和Max size是指标签可以使用的字体范围。Range显示的是这个Graph中OutDegree的范围，即图中的节点最小的OutDegree是0，最大的OutDegree是11。点击Apply，刷新Preview即可查看对应的效果。&lt;/p&gt;

&lt;p&gt;3、选择背景的颜色&lt;/p&gt;

&lt;p&gt;在Preview右侧界面的左下选择Background，就可以指定你需要的背景颜色。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1819&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;148&amp;quot;]&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%be%8e%e5%8c%96%e4%b8%80%e4%b8%8bgephi%e7%94%9f%e6%88%90%e7%9a%84%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e5%9b%be/background/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Background.png&quot; alt=&quot;Background&quot;&gt;&lt;/a&gt; Background[/caption]&lt;/p&gt;

&lt;p&gt;其他一些说明：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/2012/12/24/%e7%be%8e%e5%8c%96%e4%b8%80%e4%b8%8bgephi%e7%94%9f%e6%88%90%e7%9a%84%e5%be%ae%e5%8d%9a%e4%bc%a0%e6%92%ad%e5%9b%be/preview-settings/&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/12/Preview-Settings.png&quot; alt=&quot;Preview Settings&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;opacity是指不透明度，默认的透明度为100，如果字体较小或与节点的圆圈重合的比较严重可以将不透明度减小，甚至降至0。&lt;/p&gt;

&lt;p&gt;Noda Labels中的Show Labels是指显示节点的标签，在这个图中即是发微博的人的名称&lt;/p&gt;

&lt;p&gt;Noda Labels中的Font是指节点标签的字体，如果是中文标签请选择中文字体，不然会是乱码。&lt;/p&gt;

&lt;p&gt;Noda Labels中的Proportional size是指节点标签是否成比例，我们在前面选择了节点按照OutDegree分配大小，因此要勾选这一项。&lt;/p&gt;

&lt;p&gt;好了，快动手美化自己的Gephi图吧~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>新浪微博传播路径图的制作</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/python/2012/11/26/weibospreadgraph"/>
   <updated>2012-11-26T00:52:03+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/python/2012/11/26/weibospreadgraph</id>
   <content type="html">&lt;p&gt;[caption id=&amp;quot;attachment_1726&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;614&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/Untitled.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/Untitled.png&quot; alt=&quot;微博传播图&quot;&gt;&lt;/a&gt; 微博传播图[/caption]&lt;/p&gt;

&lt;p&gt;经常在微博上看到微博传播路径图。其实只要会一点Python、GVEdit和Gephi，你也可以自己动手制作新浪微博的传播路径图。这篇文章就和大家讲讲如何制作这类传播路径图。下面的内容会涉及到新浪API，Python，GVEdit，Gephi这些工具或知识。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;通过Python调用新浪API&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;在&lt;a href=&quot;http://open.weibo.com/&quot;&gt;新浪微博开放平台&lt;/a&gt;注册账号，创建应用。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1723&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;425&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/11.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/11.png&quot; alt=&quot;创建应用&quot;&gt;&lt;/a&gt; 创建应用[/caption]&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- more --&amp;gt;创建其他应用，客户端-桌面。一个账号可以创建10个应用，建议同时创建10个应用，因为新创建的应用是测试权限，每个应用每个用户每小时只有150次的调用次数，10个应用就可以1500次调用，为什么要保证最大调用次数，我会在后面的内容里讲。&lt;/p&gt;

&lt;p&gt;创建完成后，点击管理应用进入创建的应用中，应用信息&amp;gt;高级信息，添加其中的OAuth2.0 授权设置的回调页面，这个地址可以随便填写，但是不能空着，后面需要用到。&lt;/p&gt;

&lt;p&gt;我们来看一下新浪API的OAuth流程（即给一个应用授权的过程）。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment&lt;em&gt;1725&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;620&amp;quot;][&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/oAuth2_02.gif&quot; alt=&quot;oAuth2_02&quot;&gt;](http://www.cloga.info/wp-content/uploads/2012/11/oAuth2&lt;/em&gt;02.gif) oAuth2_02[/caption]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;引导需要授权的用户到如下地址：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;https://api.weibo.com/oauth2/authorize?client_id=YOUR_CLIENT_ID&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;response_type=code&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;redirect_uri=YOUR_REGISTERED_REDIRECT_URI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;如果用户同意授权,页面跳转至 YOUR&lt;em&gt;REGISTERED&lt;/em&gt;REDIRECT_URI/?code=CODE&lt;/li&gt;
&lt;li&gt;换取Access Token&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;https://api.weibo.com/oauth2/access_token?client_id=YOUR_CLIENT_ID&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;client_secret=YOUR_CLIENT_SECRET&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;grant_type=authorization_code&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;redirect_uri=YOUR_REGISTERED_REDIRECT_URI&lt;span class=&quot;err&quot;&gt;&amp;amp;&lt;/span&gt;code=CODE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（其中client&lt;em&gt;id=YOUR&lt;/em&gt;CLIENT&lt;em&gt;ID&amp;amp;client&lt;/em&gt;secret=YOUR&lt;em&gt;CLIENT&lt;/em&gt;SECRET可以使用basic方式加入header中）
返回值&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SlAV32hkKG&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;remind_in &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;expires_in&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;使用获得的OAuth2.0 Access Token调用API&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其中client&lt;em&gt;id和client&lt;/em&gt;secret对应的是应用基本信息中的App&lt;em&gt;key和App&lt;/em&gt;secret。redirect_url就是授权回调页的URL，如果URL没有填写调用时会报错。&lt;/p&gt;

&lt;p&gt;这个流程简单来说就是向新浪的认证服务器发出认证请求（1），新浪会在这个认证页面让用户填写用户名、密码，如果用户同意认证，新浪微博就会把用户重定向到填入的回调URL，URL参数中带有code这个参数（2），然后用这个code和App&lt;em&gt;key,App&lt;/em&gt;secret这些信息请求新浪的认证服务器就可以获得token（3）。获得了token之后，在url参数中携带这个参数就可以调用API。&lt;/p&gt;

&lt;p&gt;这个流程是不是听起来很复杂，不知道如何下手？不过不用担心，廖雪峰同学提供了&lt;a href=&quot;http://michaelliao.github.com/sinaweibopy/&quot;&gt;新浪微博AP&lt;/a&gt;&lt;a href=&quot;http://michaelliao.github.com/sinaweibopy/&quot;&gt;I&lt;/a&gt;&lt;a href=&quot;http://michaelliao.github.com/sinaweibopy/&quot;&gt;Python版SDK&lt;/a&gt;，可以帮我们简化这个过程，同时我在另外的一个文章中看到了如何获得code参数（链接找不到），这样，其实我们只需要一个Python函数就能完成认证流程，不需要再手动登陆认证。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;access_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;APP_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APP_KEYS_SECRETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#app key&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;APP_SECRET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APP_KEYS_SECRETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# app secret&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CALLBACK_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://www.cloga.info&amp;#39;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# callback url&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;XXXXX&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;YYYYY&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APIClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APP_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app_secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APP_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect_uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CALLBACK_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_authorize_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httplib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPSConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;api.weibo.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;postdata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;client_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APP_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;response_type&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;redirect_uri&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CALLBACK_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;submit&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;userId&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;passwd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;isLoginSina&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;from&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;regCallback&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;state&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ticket&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;withOfficalFlag&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/oauth2/authorize&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Referer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;application/x-www-form-urlencoded&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getresponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##拿新浪给的code&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_qs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request_access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 新浪返回的token，类似abc123xyz456&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expires_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expires_in&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# token过期的UNIX时间：http://zh.wikipedia.org/wiki/UNIX%E6%97%B6%E9%97%B4&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# TODO: 在此可保存access token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expires_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##生成token&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个函数的参数是app&lt;em&gt;index，这个参数是用来获得app&lt;/em&gt;key和app_secret，前面已经提到，新浪对测试版的app的调用限制为单用户一个小时150次请求，这个请求数对于转发数比较多的帖子是远远不够的，所以我将申请的10个App放在一个列表中，每次一个app的quota不足，则自动切换到下一个app。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;    &lt;span class=&quot;c&quot;&gt;#定义供替换的APP Key和Secret&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;APP_KEYS_SECRETS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;KKKKK&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SSSSS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;\
                      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;KKKKK&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SSSSS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;\
                      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;##随机取出一个app index&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APP_KEYS_SECRETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样，通过client=access&lt;em&gt;client(current&lt;/em&gt;index)就能获得token。&lt;/p&gt;

&lt;p&gt;通过client.statuses.repost_timeline.get(id=id,count=count,page=page)就能获得获取指定微博的转发微博列表，新浪的官方说明见：&lt;a href=&quot;http://open.weibo.com/wiki/2/statuses/repost_timeline&quot;&gt;statuses/repost_timeline&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以这个api为例说明Python SDK的API的调用规则：将&amp;quot;/&amp;quot;替换为&amp;quot;.&amp;quot;，如果是get方法就在后面使用get。&lt;/p&gt;

&lt;p&gt;client.statuses.repost&lt;em&gt;timeline.get(id=XXXX,count=200,page=1)就获得了id为XXXX的微博的第一页的2oo个转发的信息。由于新浪返回的是一个json对象。我们可以用类似字典的方式来处理这些数据，比如reposts=client.statuses.repost&lt;/em&gt;timeline.get(id=XXXX,count=200,page=1)，reposts[&amp;#39;reposts&amp;#39;]就获得了一个列表，这个列表的每个成员是一个转发的信息所构成的字典。&lt;/p&gt;

&lt;p&gt;id就是指定的微博id，count是指一页显示的结果数，page是页数。由于目前新浪微博API的Cursor和Max_id都不好用，因此，要获得一条微博的所有reposts只能通过翻页获得。&lt;/p&gt;

&lt;p&gt;这样我们通过repost&lt;em&gt;timeline返回的‘total&lt;/em&gt;number’就能知道这条微博一共有多少转发，将这个转发除以200，取ceil就获得共需翻页的次数，通过循环就可以获得所有的转发。&lt;/p&gt;

&lt;p&gt;刚才提到，新浪微博API的调用每个小时都有限制，如果一个app&lt;em&gt;key quota不足我们就应该用另一个去重新认证。因此，我把client.statuses.repost&lt;/em&gt;timeline.get和client.statuses.show.get的外面包了一层，加了个try，except，因为quota不足会抛异常出来，因此只要捕捉到这个异常，就重新授权，保证程序的连贯性（不过转发太多的帖子依然会超，这个没办法，只能申请更高的权限）。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statuses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost_timeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;current_index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_app_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;next_index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statuses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;current_index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_app_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;current_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;next_index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_index&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里有一点要说明的是，由于采用翻页的方式以及新浪api返回数据的限制（有的微博转发被大量的删除，这部分数据会被过滤掉），这种方式实际获得的转发数可能与页面上看到的不同。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;生成DOT文件&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;前面介绍了新浪微博API Python SDK调用方式。接下来就用Python生成我们需要的数据。&lt;/p&gt;

&lt;p&gt;我们需要的是传播路径图，我使用的是&lt;a href=&quot;http://www.graphviz.org/&quot;&gt;GVEdit&lt;/a&gt;的DOT语言生成图片（几百个节点GVedit可以支持，如果节点量比较大，windows下就崩溃，不知道什么原因，不过我们可以用Gephi代替）。下面是DOT语言的样例：&lt;/p&gt;

&lt;p&gt;&amp;quot;joeghwu&amp;quot; -&amp;gt; &amp;quot;刘&lt;em&gt;黑七&amp;quot; [weibo&lt;/em&gt;id=3506825367989409];&lt;/p&gt;

&lt;p&gt;&amp;quot;崔科增&amp;quot; -&amp;gt; &amp;quot;琴瑟樵夫&amp;quot; [weibo_id=3506945706899086];&lt;/p&gt;

&lt;p&gt;&amp;quot;琴瑟樵夫&amp;quot; -&amp;gt; &amp;quot;崔科增&amp;quot; [weibo_id=3506944666865337];&lt;/p&gt;

&lt;p&gt;可以看到每个DOT文件就是描述一个边（Edge）。形式为起点-&amp;gt;终点 标签，每个边的数据就是信息在两个人之间的传播方向。&lt;/p&gt;

&lt;p&gt;2013-5-20更新：新浪微博的转发中有一个pid参数，这个参数就是一个微博的上一个微博id，通过这个id就不需要递归获得传播方向。&lt;/p&gt;

&lt;p&gt;这里要说明的是，新浪微博的转发接口中提供的是所有转发，不仅仅是第一层的转发，即如果A发了一个微博，B转发这条微博，C转发B的这条微博，则通过新浪的转发接口获取A的转发也会获得C转发的那条微博，只是不知道信息的流动顺序。&lt;/p&gt;

&lt;p&gt;如果要获得这种传播的层次关系，一种方式就是定义一个函数进行递归，根据转发微博的发出者与被转发微博的发出者确定传播方向，第一次运行时，认为所有的转发都是原始微博的第一次传播（其实其中可能包含多次的传播），即认为每个边都是由被转发微博的发出者到转发微博的发出者，然后进行递归，第二次将所有带有转发的微博作为参数传给这个函数，同样的逻辑，认为所有的转发都是这些带有转发的微博进一步传播。&lt;/p&gt;

&lt;p&gt;举一个最简单的例子来说明一下这个过程：&lt;/p&gt;

&lt;p&gt;真实的传播路径：&lt;/p&gt;

&lt;p&gt;用户A发出微博a&lt;/p&gt;

&lt;p&gt;用户B转发了微博a，发出微博b，b：A&amp;gt;B&lt;/p&gt;

&lt;p&gt;用户C转发了微博b，发出微博c，c：B&amp;gt;C&lt;/p&gt;

&lt;p&gt;获得真实传播路径的过程：&lt;/p&gt;

&lt;p&gt;第一次：传给新浪a(发出者是A)，新浪返回a的转发b(发出者为B)和c(发出者为C)，这时b：A&amp;gt;B，c：A&amp;gt;C&lt;/p&gt;

&lt;p&gt;第二次：发现b有转发，把b(发出者为B)传给新浪，新浪返回b的转发c(发出者为C)，这时c：B&amp;gt;C&lt;/p&gt;

&lt;p&gt;下面是代码样例：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edeges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;total_number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##    print &amp;#39;Total Number:&amp;#39;,total_number&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page_reposts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_reposts&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##    print &amp;#39;Total Page Number:&amp;#39;,page_number&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##            print &amp;#39;page_number:&amp;#39;,i&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_repost_timeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;has_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts_count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##有些微博是删除的&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##    print &amp;#39;Total Reposts:&amp;#39;,len(reposts)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;screen_name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reposted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##存在Screen_name为空的情况&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;screen_name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;poster&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposted&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reposted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts_count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;comments&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;comments_count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;poster&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;screen_name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposted&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reposted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts_count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;comments&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;comments_count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;##存在Screen_name为空的情况&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposts_count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reposts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;get_edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edges&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样就将每一条微博转化为了一个边，其实是edges的一个Item，key是微博的ID，Value是个字典，其中的成员依次是转发的用户名，被转发的用户名，转发微博的内容，微博发布的事件，转发数，评论数。&lt;/p&gt;

&lt;p&gt;有了这个函数，使用edges=get&lt;em&gt;edges(post&lt;/em&gt;id)这个函数就可以将指定的微博转化为边。&lt;/p&gt;

&lt;p&gt;接下来，将edges输出为.dot文件。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.dot&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; -&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; [weibo_id=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;]&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weibo_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;reposted&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;gbk&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weibo_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;poster&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;gbk&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weibo_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weibo_id&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;strict digraph {&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;node [fontname=&amp;quot;FangSong&amp;quot;]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;}&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;dot file export&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;strict digraph是用来指定图形的类型为有向图，[fontname=&amp;quot;FangSong&amp;quot;]则是指定中文的仿宋字体，不然会是乱码。&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;生成微博传播路径图&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;有了DOT文件，只要将DOT文件导入&lt;a href=&quot;http://www.graphviz.org/&quot;&gt;GVEdit&lt;/a&gt;生成circo类型的图片即可。下载安装&lt;a href=&quot;http://www.graphviz.org/Download_windows.php&quot;&gt;graphviz的windows stable版本&lt;/a&gt;就能获得GVEdit（Windows下的GVEdit有很多局限性，graphviz对应的Python包pygraphviz也不能用）。&lt;/p&gt;

&lt;p&gt;打开GVEdit&amp;gt;file&amp;gt;open，打开刚才生成的DOT文件。点击Graph的setting。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1730&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;412&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/444.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/444.png&quot; alt=&quot;Graph Setting&quot;&gt;&lt;/a&gt; Graph Setting[/caption]&lt;/p&gt;

&lt;p&gt;将Layout改成circo，默认是dot。将Output File Name设定为你要保存的路径(不支持中文路径)及文件名，点击保存，传播路径图就会被生成到对应的路径中。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1731&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/555.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/555-300x127.png&quot; alt=&quot;传播路径图&quot;&gt;&lt;/a&gt; 传播路径图[/caption]&lt;/p&gt;

&lt;p&gt;此外，也可以用&lt;a href=&quot;https://gephi.org/&quot;&gt;Gephi&lt;/a&gt;生成传播路径图，尤其是节点比较多的情况。&lt;/p&gt;

&lt;p&gt;打开Gephi，文件&amp;gt;打开，对应的DOT文件。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1732&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/6666.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/6666-300x282.png&quot; alt=&quot;初始状态&quot;&gt;&lt;/a&gt; 初始状态[/caption]&lt;/p&gt;

&lt;p&gt;点击概览(Gephi支持中文，请使用中文版本)，右侧会显示上图的初始的状态。这是一个混乱的状态。流程选择Yifan Hu，点击运行。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1733&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;279&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/777.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/777.png&quot; alt=&quot;流程选择&quot;&gt;&lt;/a&gt; 流程选择[/caption]&lt;/p&gt;

&lt;p&gt;Gephi会根据算法进行迭代计算，生成传播图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1734&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/888.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/888-300x292.png&quot; alt=&quot;中间状态中间状态&quot;&gt;&lt;/a&gt; 中间状态[/caption]&lt;/p&gt;

&lt;p&gt;上面是计算过程中的一个中间状态。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1735&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;294&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/99999.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/99999-294x300.png&quot; alt=&quot;最终状态&quot;&gt;&lt;/a&gt; 最终状态[/caption]&lt;/p&gt;

&lt;p&gt;迭代完成后的最终状态可以明显的看到，这次传播有三个二次传播的中心。&lt;/p&gt;

&lt;p&gt;要保存Gephi中的图形，点击预览，如果需要中文标签，则在节点标签中勾选显示标签，将字体设置为中文字体（比如，微软雅黑，黑体之类，不然会是乱码），点击刷新，每个节点就会显示对应的中文标签。在预设值这里还可以选择边的类型。点击左下角SVG/PDF/PNG就可以将图形保存下来。&lt;/p&gt;

&lt;p&gt;以上就是制作新浪微博传播路径图的简单介绍，有兴趣的同学，可以自己动手尝试一下。如果遇到任何问题，欢迎给我留言。&lt;/p&gt;

&lt;p&gt;最后，再给大家分享几个传播路径图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1737&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/1233.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/1233-300x289.png&quot; alt=&quot;传播路径图001&quot;&gt;&lt;/a&gt; 传播路径图001[/caption]&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1738&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/22233.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/22233-300x261.png&quot; alt=&quot;传播路径图002&quot;&gt;&lt;/a&gt; 传播路径图002[/caption]&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1739&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;300&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/11/33334.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/11/33334-300x242.png&quot; alt=&quot;传播路径图003&quot;&gt;&lt;/a&gt; 传播路径图003[/caption]&lt;/p&gt;

&lt;p&gt;动手制作属于你自己的传播图吧~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>在GTM中指定Tag的依存关系</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/10/25/GTM&Tags"/>
   <updated>2012-10-25T10:36:16+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/10/25/GTM&Tags</id>
   <content type="html">&lt;p&gt;Google Tag Manager便利了网站分析师的工作，我一直认为它有一个局限性：一个Container中的Tag是异步加载的，各个Tag之间没有顺序，因此，如果一些Tag之前有依存关系，即如果B tag必须要在A Tag执行之后执行才有效。比如GA触发Beacon的Tag（trackPageview，trackEvent等），必须要在定义了跟踪器对象及各种参数之后执行才有效，不然轻者造成数据丢失，重则造成数据异常。关于这一点&lt;a href=&quot;http://jiyang.me/?p=441&quot;&gt;纪杨同学&lt;/a&gt;的文章中也有提到，昨天我也有和&lt;a href=&quot;http://rokie.ueuo.com&quot;&gt;Rokie同学&lt;/a&gt;聊到这一点，并且在他那里找到了一个相对完美的解决方案（话说他的项目都有够复杂，Minisite用到虚拟电子商务跟踪有木有~）。&lt;/p&gt;

&lt;p&gt;解决方案的思路是这样利用GTM的Data layer为A Tag的触发指定一个Event，B Tag的触发条件定义为这个事件。OK，很精巧的一个逻辑，不需要很复杂的东西。&lt;/p&gt;

&lt;p&gt;以我的Blog为例，首先你需要在页面上放置GTM的Data Layer，很简单，只需要在页面的Body部分放置：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;script&amp;gt;
  dataLayer = [];
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我将定义GA跟踪器参数的那一堆Tag（不包含trackPageview等触发Beacon的Tag）定义为GAS-GTAC，我用的是cardinal path的插件，跟踪器名称有一些小小的差异。同时要在这个Tag的最底部指定一个Event：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dataLayer.push({&amp;#39;event&amp;#39;: &amp;#39;gatc&amp;#39;});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样在这个tag执行之后就在data layer中产生一个event，而这个event可以用于其他tag的触发规则，这样就保证其他的tag是在这个tag执行后触发。 这个tag的触发规则为：&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1705&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;658&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/10/All-Pages.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/10/All-Pages.jpg&quot; alt=&quot;All Pages Rule&quot;&gt;&lt;/a&gt; All Pages Rule[/caption]&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;最后再将触发beacon的tag放在一个tag里面，比如trackPageview等，定义为GAS-trackPageview，GAS还提供了一些其他的功能比如form监测，outbound监测。&lt;/p&gt;

&lt;p&gt;这个tag的触发规则为：&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1706&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;651&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/10/GATC-Rule.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/10/GATC-Rule.jpg&quot; alt=&quot;GATC-Rule&quot;&gt;&lt;/a&gt; GATC-Rule[/caption]&lt;/p&gt;

&lt;p&gt;OK，这样就在两个Tag之间建立的依存关系，GAS-trackPageview的触发是在GAS-GATC之后。&lt;/p&gt;

&lt;p&gt;用GTM Preview结果如下：&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1707&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;506&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/10/GTM-preview.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/10/GTM-preview.jpg&quot; alt=&quot;GTM preview&quot;&gt;&lt;/a&gt; GTM Preview[/caption]&lt;/p&gt;

&lt;p&gt;Tag触发正常。&lt;/p&gt;

&lt;p&gt;GA Debugger也显示GA的Beacon发送正常。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1709&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;742&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/10/GA-Debugger.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/10/GA-Debugger.jpg&quot; alt=&quot;GA Debugger&quot;&gt;&lt;/a&gt; GA Debugger[/caption]&lt;/p&gt;

&lt;p&gt;大功告成，Happy Analytics~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>用Python写简单爬虫</title>
   <link href="http://cloga.github.io/python/2012/10/20/pythoncrawler"/>
   <updated>2012-10-20T23:55:19+08:00</updated>
   <id>http://cloga.github.io/python/2012/10/20/pythoncrawler</id>
   <content type="html">&lt;p&gt;Python提供了许多Module，通过这些Module，可以很简单的做一些工作。比如，要获得cloga这个词在百度搜索结果页中的排名结果（排名结果+URL），这就是一个很简单的爬虫需求。&lt;/p&gt;

&lt;p&gt;首先，要通过urllib2这个Module获得对应的HTML源码。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/cloga/8171284.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;通过上面这三句就可以将URL的源码存在content变量中，其类型为字符型。&lt;/p&gt;

&lt;p&gt;接下来是要从这堆HTML源码中提取我们需要的内容。用Chrome查看一下对应的内容的代码（也可以用Firefox的Firebug）。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1697&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;600&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/10/QQ%E6%88%AA%E5%9B%BE20121020214746.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/10/QQ%E6%88%AA%E5%9B%BE20121020214746-1024x367.png&quot; alt=&quot;Java Console&quot;&gt;&lt;/a&gt; Java Console[/caption]&lt;/p&gt;

&lt;p&gt;可以看到url的信息存储在span标签中，要获取其中的信息可以用正则式。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;import re
urls_pat=re.compile(r&amp;#39;&amp;lt;span class=&amp;quot;g&amp;quot;&amp;gt;(.*?)&amp;lt;/span&amp;gt;&amp;#39;)
siteUrls=re.findall(results_pat,content)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;re.compile是将字符串编译为用于python正则式的模式，字符前的r表示是纯字符，这样就不需要对元字符进行两次转义。re.findall返回的是字符串中符合results&lt;em&gt;pat的列表，由于在results&lt;/em&gt;pat中使用了子表达式，所以results存储的就是子表达式所匹配的内容，即&lt;span&gt;与&lt;/span&gt;之间的内容。&lt;/p&gt;

&lt;p&gt;此外，也可以用BeautifulSoup这个Module来获得提取同样的信息。直接从源码中用正则式提取信息适用于那些按照标准写的HTML页面，BeautifulSoup则可以处理一些编写不规范的页面。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;from BeautifulSoup import BeautifulSoup
soup=BeautifulSoup(content)
siteUrls=soup.findAll(&amp;#39;span&amp;#39;,attrs={&amp;#39;class&amp;#39;:&amp;#39;g&amp;#39;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;BeautifulSoup()可以把刚才抓到的字符串转化为Beautiful的对象。这样就可以应用BeautifulSoup提供的一些方法处理HTML。比如，findAll(&amp;#39;a&amp;#39;)就可以返回一个所有页面的a标签的List，我觉得这个和JS里面的getElementByTagName挺像的。另外也可以指定attrs参数，这个参数就是一个筛选条件，其数据结构是一个字典。findAll(&amp;#39;span&amp;#39;,attrs={&amp;#39;class&amp;#39;:&amp;#39;g&amp;#39;})的意思就是返回所有class=&amp;#39;g&amp;#39;的span标签的内容（包括span标签自身）。&lt;/p&gt;

&lt;p&gt;用正则式和BeautifulSoup获得内容还需要进一步处理，因为其中包含html标签。类似，hi.baidu.com/&lt;b&gt;cloga&lt;/b&gt; 2010-8-29或者&lt;span&gt;  hi.baidu.com/&lt;b&gt;cloga&lt;/b&gt; 2010-8-29  &lt;/span&gt;，同样可以用正则式的sub方法替换掉这些标签。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;strip_tag_pat=re.compile(r&amp;#39;&amp;lt;.*?&amp;gt;&amp;#39;)
file=open(&amp;#39;results000.csv&amp;#39;,&amp;#39;w&amp;#39;)
for i in results:
    i0=re.sub(strip_tag_pat,&amp;#39;&amp;#39;,i)
    i0=i0.strip()
    i1=i0.split(&amp;#39; &amp;#39;)
    date=i1[-1]
    siteUrl=&amp;#39;&amp;#39;.join(i1[:-1])
    rank+=1
    file.write(date+&amp;#39;,&amp;#39;+siteUrl+&amp;#39;,&amp;#39;+str(rank)+&amp;#39;\n&amp;#39;)
file.close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再来就是把对应的结果输出到文件中，比如，排名、URL、收入日期这样的形式。OK，这样就用Python实现了一个简单的爬虫需求。秀一下上面代码的输出。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1699&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;640&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/10/Result.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/10/Result.png&quot; alt=&quot;Result&quot;&gt;&lt;/a&gt; Result[/caption]&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>如何制定一个完整的监测方案</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/08/14/e5a682e4bd95e588b6e5ae9ae4b880e4b8aae5ae8ce695b4e79a84e79b91e6b58be696b9e6a188"/>
   <updated>2012-08-14T22:24:47+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/08/14/e5a682e4bd95e588b6e5ae9ae4b880e4b8aae5ae8ce695b4e79a84e79b91e6b58be696b9e6a188</id>
   <content type="html">&lt;p&gt;数据收集是数据分析的第一步，有了准确完备的数据未必能做出有价值的分析，但是，没有准确完备的数据，必定无法做出有价值的分析。因此网站分析监测方案对网站分析成败至关重要，它直接决定将收集哪些数据。&lt;/p&gt;

&lt;p&gt;一个完备的监测方案至少应包含三部分内容：流量来源的标记规范（用户从哪里来）、站内互动的标记规范（在网站上做了什么）、设置转化（有什么商业意义）。下面以GA为例分别说明这三部分的内容。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;流量来源的标记规范&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;流量来源的标记包括两部分内容：外部广告活动（通常所说的Campaign）的标记和内部广告活动（Internal Campaign）的标记。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;外部广告活动的标记&lt;/strong&gt;大家应该都比较熟悉。对GA来说，主要是使用UTM参数标记，&lt;a href=&quot;http://support.google.com/googleanalytics/bin/answer.py?hl=zh-Hans&amp;amp;answer=55578&quot;&gt;GA官方提供的说明&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;utm_source：通常用来标记媒体名，这是一个主参数。&lt;/p&gt;

&lt;p&gt;utm_mdium：通常用来标记媒体的性质，比如cpc、banner。&lt;/p&gt;

&lt;p&gt;utm_campaign：通常用来标记广告活动的名称也对应与cpc的推广计划。&lt;/p&gt;

&lt;p&gt;utm_content：通常用来标记广告的点位或cpc的推广单元。&lt;/p&gt;

&lt;p&gt;utm_term：通常用来标记cpc的关键词，也会用来标记同一个点位上的不同链接。&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- more --&amp;gt;比如，你要进行奥运相关的广告活动，在A网站的B页面购买了Banner，在V网站购买了15秒的视频前贴片，在百度上购买了关键词。Landing page为www.yoursite.com。则A网站广告的Landing page URL应为：www.yoursite.com?utm&lt;em&gt;source=a&amp;amp;utm&lt;/em&gt;medium=banner&amp;amp;utm&lt;em&gt;campaign=olympic2012&amp;amp;utm&lt;/em&gt;content=b；V网站对应的为：www.yoursite.com?utm&lt;em&gt;source=v&amp;amp;utm&lt;/em&gt;medium=pre&lt;em&gt;roll&lt;/em&gt;15s&amp;amp;utm&lt;em&gt;campaign=olympic2012；百度对应的为：www.yoursite.com?utm&lt;/em&gt;source=baidu&amp;amp;utm_medium=cpc&lt;/p&gt;

&lt;p&gt;这里有几点要说明一下，对于15s前贴片广告来说，如果有几个不同版本的广告，则可以适用utm&lt;em&gt;content来进行标记。对于百度cpc广告来说，上面的标记方式标记的是搜索词而不是出价词，如果想要了解具体的推广计划、单元和出价词则需要使用utm&lt;/em&gt;campaign、utm&lt;em&gt;content和utm&lt;/em&gt;term。另外在标记时请尽量使用英文或拼音，而不要中文以及转义的中文，因为在转码过程中可能出现乱码。&lt;/p&gt;

&lt;p&gt;制定了以上的规则之后，最终需要为营销部门制作一个链接标记的模版，并举例说明具体的应用场景。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;内部广告活动（站内广告）的标记&lt;/strong&gt;是容易被忽视的一个部分，而站内营销也是营销的一个重要部分。不同产品之间如何互相引荐流量，站内的不同广告的表现如何，这些问题的答案都需要通过站内广告活动的标记。&lt;/p&gt;

&lt;p&gt;GA默认是不支持内部广告活动标记，但是，GA的Advocator Justin曾给出&lt;a href=&quot;http://cutroni.com/blog/2010/03/30/tracking-internal-campaigns-with-google-analytics/&quot;&gt;一个利用站内搜索功能来完成内部广告活动跟踪的解决方案&lt;/a&gt;。对这个解决方案我在这里就不在赘述了。&lt;/p&gt;

&lt;p&gt;这里我给出一个用Page级的自定义变量来做站内广告跟踪的解决方案，参考了SiteCatalyst的用eVar（Custom Conversion）监测站内广告的思路。&lt;/p&gt;

&lt;p&gt;基本思路很简单：1、为每个站内的广告点位的Landing Page指定一个标记广告的参数，比如intc，其参数值的形式为广告活动名称&lt;em&gt;广告页面&lt;/em&gt;目标页面&lt;em&gt;广告点位&lt;/em&gt;广告版本；2、新增一个函数比如intctrack（请注意，这个方法要在&lt;em&gt;trackPageview之前调用），其功能是判断页面的query中是否包含intc这个参数，如果包含则调用&lt;/em&gt;setCustomVar，定义一个页面级的自定义变量。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function intctrack(param,index,scope){
  var index=index||2;
  var scope=scope||3;
  function getQueryStringByName(name){ 
         var result = location.search.match(new RegExp(&amp;quot;[\?\&amp;amp;]&amp;quot; + name+ &amp;quot;=([^\&amp;amp;]+)&amp;quot;,&amp;quot;i&amp;quot;)); 
         if(result == null || result.length &amp;lt; 1){ 
              return &amp;quot;&amp;quot;; 
         } 
         return result[1]; 
     }
  var para1=getQueryStringByName(param)
  if(para1){_gaq.push([&amp;#39;_setCustomVar&amp;#39;,index,param,para1,scope]);}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请注意，这里我将intc放在的slot2中，你可以根据需要修改。
使用页面级的自定义变量的一个优势是即可以获得点位的点击量即自定义变量的PV，也可以看到对应点位贡献的转化（按照Last Touch方式进行归因）。&lt;/p&gt;

&lt;p&gt;完成了这个部分后，你应该有两个产出物，一个是固化在CMS中的现有所有点位的Link Tag，另一个就是intc的生成规则以及intctrack方法。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;站内互动的标记&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我将配置文件的设置也放在了这个部分。 配置文件的设置主要包括网站URL的设置（只影响报告中的查看Page的链接）；默认页面；排除无关的URL参数，别忘了把intc也一并排除掉；站内搜索的设置。除此之外，有两个过滤器是必不可少的。&lt;/p&gt;

&lt;p&gt;1、完整URL&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1628&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;653&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/08/Full-URL.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/08/Full-URL.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; Full URL[/caption]&lt;/p&gt;

&lt;p&gt;这个过滤器是让GA的Page维度显示完整的URL，默认情况下不包含域名。无论你是否使用跨子域这个过滤器都是必要的。&lt;/p&gt;

&lt;p&gt;2、提取referrer存入User Defined&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1629&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;648&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/08/Referrer.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/08/Referrer.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; Referrer[/caption]&lt;/p&gt;

&lt;p&gt;这个过滤器的作用是将Landing Page的referrer存在User Defined维度中。这个值可以帮你解决需要问题，比如，为什么搜索引擎的流量被标记为referral；一些付费媒体的真实来源等等，如果你没有User Defined，那么我建议你一定要使用这个过滤器。&lt;/p&gt;

&lt;p&gt;下面我们再来重点来看一下GATC的定制，主要包含：1、页面上的通用GATC的定制；2、页面上的交互的标记&lt;/p&gt;

&lt;p&gt;我以下面的例子说明一下页面通用GATC的定制。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;var _gaq = _gaq || [];
_gaq.push([&amp;#39;_setAccount&amp;#39;, &amp;#39;UA-18159656-1&amp;#39;]);
_gaq.push([&amp;#39;_setDomainName&amp;#39;,&amp;#39;.cloga.info&amp;#39;]);
_gaq.push([&amp;#39;_addOrganic&amp;#39;,&amp;#39;baidu&amp;#39;,&amp;#39;word&amp;#39;]);
_gaq.push([&amp;#39;_addOrganic&amp;#39;,&amp;#39;soso&amp;#39;,&amp;#39;w&amp;#39;]);
_gaq.push([&amp;#39;_addOrganic&amp;#39;,&amp;#39;sogou&amp;#39;,&amp;#39;query&amp;#39;]);
_gaq.push([&amp;#39;_addIgnoredRef&amp;#39;, &amp;#39;cloga.info&amp;#39;]);
intctrack(&amp;quot;intc&amp;quot;);
_gaq.push([&amp;#39;_trackPageview&amp;#39;]);
  (function() {
    var ga = document.createElement(&amp;#39;script&amp;#39;); ga.type = &amp;#39;text/javascript&amp;#39;; ga.async = true;
    ga.src = (&amp;#39;https:&amp;#39; == document.location.protocol ? &amp;#39;https://ssl&amp;#39; : &amp;#39;http://www&amp;#39;) + &amp;#39;.google-analytics.com/ga.js&amp;#39;;
    var s = document.getElementsByTagName(&amp;#39;script&amp;#39;)[0]; s.parentNode.insertBefore(ga, s);
  })();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里我们看到主要的自定义包含将soso、sogou以及使用word作为搜索参数的baidu搜索（通常为百度的搜索合作伙伴，移动搜索也是以word为搜索参数）添加GA可识别的搜索引擎；将.cloga.info作为主域实现跨子域；将intc参数识别为内部推广。当然，页面上通用GATC的定制远不止这些，但是我相信上面的例子对大多数网站已经足够。请不要忘记将其中的UA及域名换成你的。&lt;/p&gt;

&lt;p&gt;再来看一下页面上交互的标记。&lt;/p&gt;

&lt;p&gt;页面上交互主要指Flash和Ajax Button点击，也包括文件下载、出站链接点击等默认的pageview方法无法记录的交互。 关于Flash交互的监测方法请参见：&lt;a href=&quot;http://www.cloga.info/2012/07/27/%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8ga%e7%9b%91%e6%b5%8bflash%e4%b8%ad%e7%9a%84%e4%ba%92%e5%8a%a8/&quot;&gt;使用GA监测Flash中的互动&lt;/a&gt;。而页面上其他交互则可以有两种标记方式，一种是在HTML源码中添加onclick事件，另外一种则是添加事件监听。两种方式各有利弊，直接添加onclick事件，相对来说比较灵活，难度也低一些，但是，如果页面中有大量元素要添加标记，则是一个灾难；事件监听的好处是无论页面上有多少个元素要监听，都可以通过一小段通用JS来实现，但是，缺点也显而易见，灵活性较差，如果要针对某个元素进行监听或指定特殊的名称则比较麻烦。我的建议是如果类似的监听不是一个常规需求，并且数量较少，那么手动添加onclick事件即可，如果这是一个常规需求或需要监听的元素较多，则最好开发一小段通用的事件监听JS来完成这个工作，同时页面上的元素要使用ID或Name进行区分，以便脚本利用这些标识来区分不同的元素。&lt;/p&gt;

&lt;p&gt;对于页面交互的跟踪是使用&lt;em&gt;trackPageview还是&lt;/em&gt;trackEvent其实不需要太纠结，二者本质上没有很大的区别，所不同的是&lt;em&gt;trackPageview属于GA的交互对Bounce Rate有影响，而Event则可以自定义是否是交互，可以选择是否对Bounce Rate有影响，另外，就目前来说渠道只支持&lt;/em&gt;trackPageview。&lt;/p&gt;

&lt;p&gt;这里补充一点，关于如何使用GA监测Flash的加载的时间。其基本的解决思路是这样，在页面的顶部添加一个时间戳，在Flash的第一帧创建一个时间戳，并调用&lt;em&gt;trackEvent或&lt;/em&gt;trackTiming，将两个时间戳相减作为Flash加载时间记录下来。&lt;/p&gt;

&lt;p&gt;站内互动标记完成后，你的产出物应包括页面上放置的通用的GATC，页面交互的标记规范。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; 转化的设置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后的一部分就是转化的设置。转化是指我们希望用户在网站上完成一个动作，在GA中，它可以是查看一个特定的页面也可以是页面上的一些事件，甚至是电子商务的交易数据。&lt;/p&gt;

&lt;p&gt;在GA中有四类转化，四种目标类型其实是三类转化，再加上电子商务跟踪。&lt;/p&gt;

&lt;p&gt;1、阈限类转化&lt;/p&gt;

&lt;p&gt;在GA中，可以设置停留时间或Pages/Visits的阈限作为目标，既可以是高于也可以是低于某一阈值。&lt;/p&gt;

&lt;p&gt;2、URL转化&lt;/p&gt;

&lt;p&gt;这类转化是将用户到达一个页面作为转化。如果你使用了虚拟页面浏览（就是将一个非页面浏览的交互行为在GA中记录为页面浏览）来监测非页面浏览的交互，那么也应设置这类目标。&lt;/p&gt;

&lt;p&gt;3、事件类转化&lt;/p&gt;

&lt;p&gt;这类转化主要应用于非页面浏览的其他交互事件。&lt;/p&gt;

&lt;p&gt;4、电子商务跟踪&lt;/p&gt;

&lt;p&gt;电子商务跟踪简而言之，就是把关于订单的相关信息提交给GA，然后就可以在GA中查看这类数据。关于电子商务的跟踪可以参见&lt;a href=&quot;http://www.cloga.info/2010/10/23/ga%E7%94%B5%E5%AD%90%E5%95%86%E5%8A%A1%E8%B7%9F%E8%B8%AA%E7%9A%84%E5%8E%9F%E7%90%86%E3%80%81%E5%AE%9E%E6%96%BD%E5%8F%8A%E6%B5%8B%E8%AF%95/&quot;&gt;GA电子商务跟踪的原理、实施及测试&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下面用一个例子来说明GA转化的设置。&lt;/p&gt;

&lt;p&gt;假设你关注的转化之一是注册成功，对于注册成功，你们的技术可能选择不同实现方式。对应的GA也需要进行相应的调整。对网站分析师来说，最简单的方式是注册流程是一个单独的页面，那么，只要保证页面上有通用的GATC就可以。GA会忠诚的记录下每个页面的URL，而网站分析师所要做的只是在GA中将注册成功页面的URL（如果你使用了我前面推荐的Full URL的过滤器的话）填写到URL目标中即可。而如果你们的注册是一个Ajax的弹出窗，甚至连注册成功的欢迎页面也没有，注册成功后只是在当前页面，那么就需要技术做一些处理，在注册成功后调用_trackPageview产生一个虚拟的页面浏览，当然，这部分内容属于站内互动的标记，如果你在目标设置的阶段才提出这个需求，我想这应该理解为站内互动的标记不完整。剩下的内容也是在GA将这个URL设置为目标。&lt;/p&gt;

&lt;p&gt;完成了转化的设置，那么恭喜你你已经完成了一个完整的监测方案。你现在应该有交给营销部门的外部广告活动的标记规范，同时也已经将内部广告活动的固化在CMS中，对站内的互动也已经完整标记，在GA中也将转化定义清楚。但是，监测方案不是一成不变的，随着网站的改版或跟踪需求的变化，你需要不断的调整监测方案。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>使用GA监测Flash中的互动</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/07/28/e5a682e4bd95e4bdbfe794a8gae79b91e6b58bflashe4b8ade79a84e4ba92e58aa8"/>
   <updated>2012-07-28T07:48:01+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/07/28/e5a682e4bd95e4bdbfe794a8gae79b91e6b58bflashe4b8ade79a84e4ba92e58aa8</id>
   <content type="html">&lt;p&gt;由于国内IE6的“普及”，限制了HTML5的广泛应用，国内的互动广告形式仍然是以Flash为主。而Flash互动的监测也就成为Flash Builder和Digital Analyst的标配技能。下面以GA为例，讲一下Flash互动监测基本方法论。&lt;/p&gt;

&lt;p&gt;监测的基本原理很简单：通过AS调用页面上的JS方法。&lt;/p&gt;

&lt;p&gt;AS调用页面的JS有两种方式：&lt;/p&gt;

&lt;p&gt;1、ExternalInterface类的call方法&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ExternalInterface.call(functionName:String,...arguments):*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;fuctionName:要调用的JavaScript函数名&lt;/p&gt;

&lt;p&gt;arguments:参数，可选&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不带参数的情况&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;JavaScript：function Show() {　 alert(&amp;quot;I am a func!&amp;quot;);}




ActionScript：ExternalInterface.call(&amp;quot;Show&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;带参数的情况&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript：function Show(message) {　　alert(message);}&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ActionScript：ExternalInterface.call(&amp;quot;Show&amp;quot;,&amp;quot;I am a message from AS&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2、用getURL方法来调用&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;getURL(&amp;quot;javascript:show(&amp;#39;i am a message from as)&amp;quot;,&amp;quot;_self&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;几点说明如下：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1、不要忘记在HTML源码中调用GATC，以及封装的JS方法&lt;/p&gt;

&lt;p&gt;2、遇到同时调用多个方法（比如，一个交互要使用多种监测工具跟踪，GA、DC、Webtrends、Admaster，相信我确实有的项目要这样做，至于产生的数据垃圾在分析时会不会用则是另外的事情）时，可以这几个方法封装在一个JS了，再在AS中调用这个方法。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function trackinter(argument){
    GA function
    DC Floodlight function
    Webtrends function
    Admaster function
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GA提供专门针对Flash跟踪的gaforflash：&lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/other/flashTrackingIntro?hl=zh-CN&quot;&gt;https://developers.google.com/analytics/devguides/collection/other/flashTrackingIntro?hl=zh-CN&lt;/a&gt;，这个是要在Flash开发过程中调用GA的组件，这是另外一个故事了。使用AS调用JS即可以完成Flash的互动监测。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Bluehost上安装Python3</title>
   <link href="http://cloga.github.io/python/2012/07/25/bluehoste4b88ae5ae89e8a385python3"/>
   <updated>2012-07-25T22:14:54+08:00</updated>
   <id>http://cloga.github.io/python/2012/07/25/bluehoste4b88ae5ae89e8a385python3</id>
   <content type="html">&lt;p&gt;最近做了一次Blog的迁移，从Godaddy的付费空间（是的，我的空间以前就是Godaddy的付费空间，很坑爹各种打不开）上迁到了Bluehost上。迁到Bluehost上主要有两个原因，看到一些评论说Bluehost的访问速度还可以，迁移过来后这几天确实还比较稳定，而且最近Bluehost在做促销，一年的话是$4.95每月，三年的话是$3.95月，应该也比狗爹的便宜，狗爹好像是$5；第二个原因是Bluehost支持多种语言，最近再看一些Python的东西，希望可以找个环境学习测试一下。我看的书是Head First Python里面的东西是基于3.0的，而Bluehost上的Python默认版本是2.6的，貌似是CentOS自带的版本。所以就需要先在Bluehost的空间上安装Python3。经过几天的研究终于将Python3安装上了。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1605&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;640&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/07/Python3.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/07/Python3.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; Python3[/caption]&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- more --&amp;gt;网上似乎没有相关介绍的文章，这里主要是结合两篇文章：1、&lt;a href=&quot;https://my.bluehost.com/cgi/help/python-install&quot;&gt;Bluehost关于如何从Python2.6升级到2.7的文章&lt;/a&gt;；2、&lt;a href=&quot;http://141.109.37.164/%7Elxu/wp/?p=72&quot;&gt;在CentOS上安装Python3&lt;/a&gt;，希望可以帮到有类似需求的同学少走一些弯路。&lt;/p&gt;

&lt;p&gt;1、先要获取Bluehost的SSH权限。这个流程Bluehost有详尽的说明，这里只是简单说一些流程。首先是&lt;a href=&quot;https://my.bluehost.com/cgi/help/180&quot;&gt;获取SSH权限&lt;/a&gt;，默认情况下SSH是不开启的需要手动开启，同时先要验证账户，验证账户的时候各位同为要注意账户的信息不要填写中国的信息，不然验证后就没有了100刀的AdWords代金卷；接着是要&lt;a href=&quot;https://my.bluehost.com/cgi/help/putty&quot;&gt;创建公钥和私钥&lt;/a&gt;；最后是&lt;a href=&quot;https://my.bluehost.com/cgi/help/301&quot;&gt;连接SSH&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;2、下载安装Python3&lt;/p&gt;

&lt;h1&gt;下载Python3&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;wget http://www.python.org/ftp/python/3.2/Python-3.2.tar.bz2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我这里将Python3安装在根目录下，安装版本是3.2&lt;/p&gt;

&lt;h1&gt;解压Python3的tar包&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tar -xjf Python-3.2.tar.bz2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建了Python-3.2的目录&lt;/p&gt;

&lt;h1&gt;安装Python3&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;./configure --prefix=$HOME/python3

make

make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，Python3的安装完成了，但是，要加载这个Python还需要修改.bashrc
3、.bashrc的修改&lt;/p&gt;

&lt;h1&gt;进入.bashrc&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;vim ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;将Python3添加进去，按Insert（不知道Bluehost为什么写的是输入/）变成编辑状态输入下面的内容&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;export PATH=$HOME/python3/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;按Esc退出编辑状态，输入&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;:wq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;保存退出，再输入&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK，Python3已经安装到Bluehost上了，你可以使用python3 -v确认一下。希望本篇文章能够给和我一样技术小白有一些帮助~如果你还有任何疑问欢迎给我留言。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>让维度和指标门当户对-GA中的测量实体、维度和指标</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/07/17/e8aea9e7bbb4e5baa6e5928ce68c87e6a087e997a8e5bd93e688b7e5afb9-e8b088e8b088gae4b8ade79a84e6b58be9878fe5ae9ee4bd93"/>
   <updated>2012-07-17T00:53:10+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/07/17/e8aea9e7bbb4e5baa6e5928ce68c87e6a087e997a8e5bd93e688b7e5afb9-e8b088e8b088gae4b8ade79a84e6b58be9878fe5ae9ee4bd93</id>
   <content type="html">&lt;p&gt;开始这个话题前，我们先来看一下几个GA中异常数据：&lt;/p&gt;

&lt;p&gt;1、查看页面时，UV&amp;gt;visit&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1593&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;1021&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/07/UV-Visit-Page1.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/07/UV-Visit-Page1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; UV&amp;gt;Visit-Page[/caption]&lt;/p&gt;

&lt;p&gt;2、同一个页面，在Content&amp;gt;Site Content&amp;gt;All Page和Exit Page中看到的PV数不一致。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1594&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;450&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/07/PV-Allpage.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/07/PV-Allpage.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; All Pages[/caption]&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1595&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;561&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/07/PV-Exitpage1.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/07/PV-Exitpage1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; Exit Pages[/caption]&lt;/p&gt;

&lt;p&gt;3、有的搜索词的Visits with Search为0&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1597&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;1019&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/07/Search-exit.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/07/Search-exit.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; Site Search[/caption]&lt;/p&gt;

&lt;p&gt;相信大家都曾有过类似的疑问，希望我的这篇文章能够解答大家的这些疑问。&lt;/p&gt;

&lt;p&gt;在解答这些疑问前，我们先来看一下GA测量的实体以及维度和指标。&lt;/p&gt;

&lt;p&gt;GA测量的实体就是GA测量的东西。GA主要的测量实体是Visit和Pageview，Visitor也是一个实体，只是实际应用较少。当然还有一些其他的实体，比如订单、Event、Search、Social Action等。&lt;/p&gt;

&lt;p&gt;维度和指标则是测量实体的一个属性。维度是那些不可以量化的属性，一般用使用文本描述，比如对于一个Visit，这个Visit来源的地域就是维度，而这个visit的Time On site就是一个指标。同样对于Pageview来说，这个Pageview产生的Page name就是个维度，Pageview出现的Frequency就是Pageview这个指标。&lt;/p&gt;

&lt;p&gt;需要注意的是维度和指标也是有层次的，相应的可以分为：Visitor级别的维度，GA默认没有这类维度，但是我们可以通过用户定义的值及自定义变量来生成这类维度，比如将GA的UID存在自定义变量中从而分析单个访客的行为，Visitor级别的指标，比如UV；Visit级别的维度，比如地域、来源，这些属性都是Visit级别的，一旦Visit产生就不会更改，Visit级别的指标，比如Visit，Bounce；Pageview级别的维度，比如Page Name，Page Title，这些属性都是Pageview级别的，Pageview级别的指标，比如Pageview，time on page, Exit等。&lt;/p&gt;

&lt;p&gt;GA提供了灵活的自定义报告，我们可以灵活的进行维度和指标的组合，但是，在进行维度和指标的组合时要注意维度和指标的门当户对，一个基本的原则是高级的维度可以和低级的指标组成报表，比如Visitor级别的维度可以和Visit、Page级别的指标组成报表，而低级的维度则尽量不要和高级的指标组成报告，比如，Page级别的维度尽量不好与Visit及Visitor的指标组成报表，除非你能很明确的知道这些维度和指标组合的意义，并且能够给出合理的解释。&lt;/p&gt;

&lt;p&gt;好了介绍完这些基本的知识，让我们再来看一下前面介绍的那些&amp;quot;问题&amp;quot;数据。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1、查看页面时，UV可能大于visit。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;按照我们之前将一些原则来看一下这个自定义报告。页面是个页面级的维度，而Visit则是Visit级别的指标。当违反我们前面的原则构建自定义报告时，你要小心的求证这个这些指标与维度组合后的含义。这里之所以会出现Visit大于UV的情况是因为对于页面Visit其实是这个页面作为Entrance的次数，而不是大家理解的Visit。如果一个页面作为Landing Page的次数较少，那么就会出现UV大于Visit的情况。&lt;/p&gt;

&lt;p&gt;对于单个页面来说，真正等同于它所获得Visit的指标其实Unique Pageview。而一组页面的Visit则不能简单由各个页面的UPV相加得到，比如要通过高级细分活动。因为一个Visit访问2个单独的页面的UPV为2，而实际的Visit仅为1。&lt;/p&gt;

&lt;p&gt;这里再谈几句UV这个指标，真正意义上的UV是Lifetime的UV，但在实际的应用过程中我们却会遇到Daily UV，Monthly UV，Quarterly UV，Yearly UV。与Visit遇到的问题类似，任何的UV数据都不能简单的加和，都需要重新进行一次查询，因为其需要一次排重。更不要提UV其标识的不是一个人，只是一个浏览器cookie，因此，UV这个指标是最不靠谱的一个指标，建议大家不要使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2、同一个页面，在Content&amp;gt;Site Content&amp;gt;All Page和Exit Page中看到的PV数不一致。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;先看一下这两个报告。Content&amp;gt;Site Content&amp;gt;All Page这个报告中的Page是Pageview级别的，在这个报告中的Pageview是指每个页面被浏览的次数。而Content&amp;gt;Site Content&amp;gt;Exit Page这个报告中的Exit Page是Visit级别的，只有Visit才会有Exit Page这个属性，同样Landing Page也是Visit级别的维度尽管这两个维度里面都有page这个词，那么Exit Page报告的Pageview的含义其实就与All Page报告中的Pageview的含义完全不同，Exit Page报告中特定页面Pageview的含义是指以这个页面为Exit Page的Visit所获得PV数。这个PV数与All Page中PV数没有任何的关系，即可以大于All Page中这个页面的PV数也可能小于。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3、有的搜索词的Visits with Search为0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我想分析完前两个“问题”数据后，这个“问题”数据就比较好理解了。首先，我们先来判断一下搜索词这个维度是哪个级别的？我们知道一个visit可能触发多个搜索词，因此我们知道，它比Visit低一级，具体是哪个级别，我想网站搜索应该自己是一个级别，同时还可以和Pageview交叉分析，因为我们可以知道一个搜索词是在哪个页面上生成的。既然搜索词比Visit的级别低，那么用Visit With Search这个visit级别的指标就不太合适。Visit With Search这个指标应该与其他的Visit级别的维度一起使用，比如查看一下不同来源对站内搜索的使用情况。&lt;/p&gt;

&lt;p&gt;而如果要查看一下每个搜索词各自的Visit其实应该查看的指标是Total Unique Searches，这个指标类似于UPV，其含义就是包含Search Term的Visit数。其注意Total Unique Search大于等于Visit With Search，因为一个visit可能存在多个Search Term。类似的指标还有Unique Event，Unique Event是指特定Event Category获得Visit数。&lt;/p&gt;

&lt;p&gt;好了这篇文章就介绍到这里，希望当你下次发现“问题”数据时，能先判断一下所使用的维度和指标都是什么级别，这样组合是否有意义。如果您关于GA的报告数据解读有其他的疑问欢迎给我留言~&lt;/p&gt;

&lt;p&gt;PS：关于网站分析中的维度与指标推荐阅读：数码林的&lt;a href=&quot;http://blog.digitalforest.cn/webanalytics-basic-catalogue&quot;&gt;网站分析基础概念系列&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>再谈用GA监测在线客服的按钮点击</title>
   <link href="http://cloga.github.io/ga%E7%9A%84js%E6%89%A9%E5%B1%95/2012/07/10/e5868de8b088e794a8gae79b91e6b58be59ca8e7babfe5aea2e69c8de79a84e68c89e992aee782b9e587bb"/>
   <updated>2012-07-10T23:35:28+08:00</updated>
   <id>http://cloga.github.io/ga%E7%9A%84js%E6%89%A9%E5%B1%95/2012/07/10/e5868de8b088e794a8gae79b91e6b58be59ca8e7babfe5aea2e69c8de79a84e68c89e992aee782b9e587bb</id>
   <content type="html">&lt;p&gt;之前我曾有一篇Blog谈到了&lt;a href=&quot;http://www.cloga.info/2012/02/24/%E4%BD%BF%E7%94%A8ga%E7%9B%91%E6%B5%8B%E5%95%86%E5%8A%A1%E9%80%9A%E7%AD%89%E5%9C%A8%E7%BA%BF%E5%AE%A2%E6%9C%8D%E7%9A%84%E5%AF%B9%E8%AF%9D/&quot;&gt;使用GA监测商务通等在线客服的对话&lt;/a&gt;，现在回过头去想其实当时的思路把问题搞得复杂了。&lt;/p&gt;

&lt;p&gt;当时的思路是找到对应的DOM仅检测需要的DOM元素的click事件。那也就意味着对于不同的在线客服系统都需要修改code，而实际上只要用一个通用的JS监测a标签以及img的click事件就可以完成监测的目的，这样我们需要做的就是在GA中指定对应的地址。下面我将介绍三种方法来实现对在线客服的监测：利用Skyglue提供的自动监测服务；利用Google提供的Autotrack.js；利用&lt;a href=&quot;http://cutroni.com/blog/&quot;&gt;Justin&lt;/a&gt;的自动跟踪脚本。（已有方法只对Flash之外的图标有效，对flash的咨询图标无效。）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一、利用SkyGlue提供的自动监测服务&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;关于SkyGlue介绍，请参见&lt;a href=&quot;http://www.cloga.info/2012/06/28/%e8%87%aa%e5%8a%a8%e6%a0%87%e8%ae%b0%e6%89%80%e9%9c%80%e8%a6%81%e7%9a%84%e4%ba%92%e5%8a%a8-%e5%82%bb%e7%93%9c%e7%ba%a7ga%e8%87%aa%e5%8a%a8%e6%a0%87%e8%ae%b0%e6%9c%8d%e5%8a%a1skyglue/&quot;&gt;自动标记所需要的互动-傻瓜级GA自动标记服务SKYGLUE&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;SkyGlue的安装比较简单，你所需要做的只是将SkyGlue的代码放在GA代码的后面即可。&lt;/p&gt;

&lt;p&gt;接下来你有两个选择，一个选择是直接使用默认设置。这时对于在线客服相当于一个出站链接，SkyGlue会将其记录为Click::(outbound)::A::对应URL。另外一个选择是在线客服指定一个自定义名称，比如我指定了Click::在线客服这个名称。&lt;/p&gt;

&lt;p&gt;下面你所要做的就是在GA中创建一个目标，将这个事件定义为目标。请注意SkyGlue目前是将每个Click都记录为事件，因此你要使用事件目标，SkyGlue只会使用Event Category一个参数。因此在GA的目标设置中只要设置为Event category等于对应名称即可。这样你就完成了利用SkyGlue跟踪在线客户的按钮点击。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、利用Google提供的Autotrack.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个JS最初是&lt;a href=&quot;http://xiaoq.in/&quot;&gt;肖庆同学&lt;/a&gt;发现的。这个JS也提供了对DOM元素的Click事件的监测，但是与SkyGlue相比灵活性较差，也没有灵活的自定义功能。&lt;/p&gt;

&lt;p&gt;这个脚本的部署方式也很简单，代码样例如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;script src=&amp;quot;//www.google.com/js/gweb/analytics/autotrack.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;

      new gweb.analytics.AutoTrack({
        profile: &amp;#39;UA-18159656-3&amp;#39;,
        heatMapper: true});
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你要做的是将profile替换为你的网络资源ID，这个脚本自身已经包含对GATC的调用，因此，不需要再调用GATC。hearMapper这个参数是一个可选参数，true表示开启热图。细分的同学可能发现，我们对GA的一些自定义没法地方设置了，比如&lt;em&gt;addOrganic，&lt;/em&gt;setDomaiName这些方法，其实这些方法依然是可以添加，只是这个修改要在autotrack.js中进行，修改之后，你应把这个脚本放在自己的服务器上，并调用修改过的脚本。&lt;/p&gt;

&lt;p&gt;部署好这个脚本后，它会自动跟踪页面上的点击数据，只支持A标签的点击事件并将其分为link click和Outbound Click两类，相比之下，SkyGlue的监测要更加全面。&lt;/p&gt;

&lt;p&gt;autotrack.js使用Event category来对事件进行分类，主要有三类事件，heatmap，link click（站内的点击）和Outbound Click（出站的点击）。在线客户的click事件应该在outbound click中；用Event Action来标记对应的链接，heatmap的Action则统一为click；用Event Label来标记事件发生的页面，heatmap则是对应的坐标。&lt;/p&gt;

&lt;p&gt;了解了这些以后，你需要做的是点击一下对应的在线咨询按钮，看一下对应的URL并在GA中对其设置事件目标。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、利用Justin提供的自动跟踪脚本&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Justin提供过下面这段脚本，这段脚本自动实现了对出站链接跟踪，我略微修改了一下也跟踪了站内的Link，同时增加了对img Click事件的跟踪。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;script&amp;gt;
//
//  By default, this script will track links to the follwoing file 
//  types: .doc, .xls, .exe, .zip and .pdf
//
var fileTypes    = (&amp;quot;.doc&amp;quot;,&amp;quot;.xls&amp;quot;,&amp;quot;.exe&amp;quot;,&amp;quot;.zip&amp;quot;,&amp;quot;.pdf&amp;quot;);

// This is a debug mode flag.  Change to &amp;#39;&amp;#39; for production.  In debug mode
// the script will display an alert box and skip sending data to Google 
// Analytics.
//
var debug          = &amp;#39;&amp;#39;;

//
// This variable controls how outbond links will appear
// the GA reports.  By default, external links will appear as
// &amp;#39;/outbound/&amp;#39; where URL is the URL in the anchor tag.
//
//var extIdentifier  = &amp;#39;/outbound&amp;#39;+_udl.pathname+&amp;#39;/&amp;#39;+_udl.search+&amp;#39;/&amp;#39;;

/// No need to change anything below this line ///

if (document.getElementsByTagName) { 
  // Initialize external link handlers 
  var hrefs = document.getElementsByTagName(&amp;#39;a&amp;#39;); 

  for (var l = 0; l &amp;lt; hrefs.length; l++) { 
    //protocol, host, hostname, port, pathname, search, hash 
     if (hrefs[l].hostname == location.host) {
      var path = hrefs[l].pathname;
          if (path.indexOf(fileTypes) != -1) {
               startListening(hrefs[l],&amp;quot;click&amp;quot;,trackDocuments);
          }else {
               startListening(hrefs[l],&amp;quot;click&amp;quot;,trackLinks);
          }
    } else {
      startListening(hrefs[l],&amp;quot;click&amp;quot;,trackExternalLinks);
    }
  }
}

function startListening (obj,evnt,func) { 
  if (obj.addEventListener) {
    obj.addEventListener(evnt,func,false); 
  } else if (obj.attachEvent) {
    obj.attachEvent(&amp;quot;on&amp;quot; + evnt,func); 
  } 
} 

function trackDocuments (evnt) { 
  var url = (evnt.srcElement) ? &amp;quot;/&amp;quot; + evnt.srcElement.pathname : this.pathname; 

  if (!debug) {
    _gaq.push([&amp;#39;t._trackEvent&amp;#39;,&amp;#39;document&amp;#39;,url,,,,]);
      } else { 
          alert(url);
          return false;
  }
} 

function trackExternalLinks (evnt) { 
  var lnk; 
  if (evnt.srcElement) { 
    var elmnt = evnt.srcElement; 
    while (elmnt.tagName != &amp;quot;A&amp;quot;) { 
      var newelmnt = elmnt.parentNode; 
      elmnt = newelmnt; 
    } 
    lnk = &amp;quot;/outlinks/&amp;quot; +elmnt.hostname + &amp;quot;/&amp;quot; + elmnt.pathname + elmnt.search; 
  } else { 
    lnk = &amp;quot;/outlinks/&amp;quot; + this.hostname + this.pathname + this.search; 
  } 

  if (!debug) {
          _gaq.push([&amp;#39;_trackEvent&amp;#39;,&amp;#39;outlinks&amp;#39;,lnk,,,,]);
      } else {
          alert(lnk);
          return false;

  }
}
function trackLinks (evnt) {
  var url = (evnt.srcElement) ? evnt.srcElement.pathname : this.pathname;
  _gaq.push([&amp;#39;_trackEvent&amp;#39;,&amp;#39;links&amp;#39;,url,,,,]);
}

function trackImgs (evnt) {
  var url = (evnt.srcElement) ? evnt.srcElement.src : this.src;
  _gaq.push([&amp;#39;_trackEvent&amp;#39;,&amp;#39;img&amp;#39;,url,,,,]);
}

var imgs = document.getElementsByTagName(&amp;#39;img&amp;#39;);

  for (var l = 0; l &amp;lt; imgs.length; l++) {
        startListening(imgs[l],&amp;quot;click&amp;quot;,trackImgs);
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用这段脚本的一个好处是不需要修改你原来的GATC，如果你进行了一些自定义，那么需要去autotrack中修改。同时这个脚本也支持对跟踪器名称的定义，如果你为你的GA跟踪器指定了不同的名称，那么你只需要对trackLinks，trackImgs和trackExternalLinks进行对应的修改即可。这个脚本使用Event Category来标示Click的类型，共三种imgs，links以及Outlinks，Event Action则是对应的URL。&lt;/p&gt;

&lt;p&gt;与前面两个方式类似，你需要实际点击一下在线客服，记录下实际URL并将其在GA中设置为事件目标。&lt;/p&gt;

&lt;p&gt;目前我的网站同时使用了三种跟踪方式，感兴趣的同学可以测试一下，每点击一个link会产生4个utm.gif的请求。&lt;/p&gt;

&lt;p&gt;好了，关于在线客服的监测就介绍到这里，如果关于这方面您有任何的疑问，欢迎给我留言。&lt;/p&gt;

&lt;p&gt;PS：百度统计也提供了类似的解决方案：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hi.baidu.com/tongji2009/blog/item/09e04c001583c123738da5fc.html&quot;&gt;百度统计推出高级功能，让浮窗无所遁形&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hi.baidu.com/tongji2009/blog/item/3427b6a843a21fdc1f17a26e.html&quot;&gt;转化分析代码安装说明-技术文档&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>自动标记所需要的互动-傻瓜级GA自动标记服务SKYGLUE</title>
   <link href="http://cloga.github.io/ga%E7%9A%84js%E6%89%A9%E5%B1%95/2012/06/28/e887aae58aa8e6a087e8aeb0e68980e99c80e8a681e79a84e4ba92e58aa8-e582bbe7939ce7baa7gae887aae58aa8e6a087e8aeb0e69c8de58aa1skyglue"/>
   <updated>2012-06-28T00:29:41+08:00</updated>
   <id>http://cloga.github.io/ga%E7%9A%84js%E6%89%A9%E5%B1%95/2012/06/28/e887aae58aa8e6a087e8aeb0e68980e99c80e8a681e79a84e4ba92e58aa8-e582bbe7939ce7baa7gae887aae58aa8e6a087e8aeb0e69c8de58aa1skyglue</id>
   <content type="html">&lt;p&gt;作为一名Digital分析师，相信你遇到过以下这些情景：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;制作好的Tracking Plan，由于Campaign Site Layout的变化，要临时加班修改&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;客户关心的一些交互数据，由于Tracking Plan的不完善而无法提供&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一些很小的tag修改，却被技术告知要等到下周更新新版本时才能上线&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有了自助式自动标记服务以上的问题都迎刃而解。&lt;/p&gt;

&lt;p&gt;网站分析工具的实施即标记页面是Digital分析师的主要工作之一。页面标签方式的网站分析工具（比如GA）的出现使分析师只需要在页面上添加简单的几行JS就可以捕捉到基本的网站分析数据（Visit、PV、Avg. Time On Site等），但是，对于一些自定义的交互还是需要分析师进行一些自定义标记，比如监测站内Banner的click数据，表单的填写情况，外链的点击情况，白皮书的下载情况等等。Tag Management System（比如&lt;a href=&quot;http://www.tagman.com/&quot;&gt;Tag Man&lt;/a&gt;、&lt;a href=&quot;http://www.tealium.com/&quot;&gt;Tealium Universal Tag&lt;/a&gt;）进一步提升了分析师对Tag的掌控能力，分析师可以通过统一的后台对不同的页面使用不同的Tracking Code，而不需要麻烦IT同学，但是对于页面上一些自定义交互事件的标记还没很好的一个解决方案。&lt;/p&gt;

&lt;p&gt;一次偶然的机会我在Yahoo 的WAW Group里，看到有同学提到SkyGlue，它提供了GA的自动标记服务。其实GA的自动标记服务有很多，比如&lt;a href=&quot;www.skyglue.com&quot;&gt;&lt;img src=&quot;http://cdnwebsite.skyglue.com/wp-content/uploads/2012/05/pyramid_0501_trans.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.advanced-web-metrics.com/blog/auto-tracking-file-downloads-outbound-links/&quot;&gt;Brian大叔&lt;/a&gt;就提供过免费和付费的GA 自动标记脚本，&lt;a href=&quot;http://cutroni.com/blog/&quot;&gt;Justin同学&lt;/a&gt;也有类似的解决方案，甚至Google也有类似的脚本提供，感兴趣的同学可以看一下&lt;a href=&quot;https://www.google.com/appserve/fb/forms/cnawcoupon1000/&quot;&gt;AdWords Campaign Landing Page&lt;/a&gt;中的&lt;a href=&quot;https://www.google.com/js/gweb/analytics/autotrack.js&quot;&gt;autotrack.js&lt;/a&gt;，这里要感谢&lt;a href=&quot;http://xiaoq.in/&quot;&gt;肖庆同学&lt;/a&gt;，提供了这个非常有价值的信息。总的来说，这些自动跟踪的脚本都是很优秀的。但是，这些脚本基本上都是针对a标签的左键click事件进行跟踪，Google提供的autotrack还会额外记录HeatMap数据，只是目前目前还无法利用这些热图数据，同时要使用或修改这些脚本需要有一定JS基础，比如增加对button、img或者input事件的支持等。&lt;/p&gt;

&lt;p&gt;而SkyGlue则很好的解决了易用性问题，只需要在页面上添加一段JS，即可以自动的跟踪页面上对几乎是任意Dom元素的跟踪，Iframe、Flash都可以跟踪。同时，可以在他们的后台中对页面可跟踪的Dom指定名称，即使你是一个JS小白，也可以方便的完成对页面上复杂交互的GA部署。其实对页面上交互所有Dom元素的click事件都已经自动标记，你所需做的是在后台为重要的交互起一个有&amp;lt;!-- more --&amp;gt;意义的名字。&lt;/p&gt;

&lt;p&gt;下面让我们一起来了解一下这个傻瓜级产品，看看它能为我们的工作提供哪些帮助。&lt;/p&gt;

&lt;p&gt;在他们的官网上www.skyglue.com，可以看到这款产品的卖点被归结为4点：自动标记、个体行为跟踪、Dashboard（看截图很漂亮，只是在国内因为众所周知的原因无法使用）、智能分组。&lt;/p&gt;

&lt;p&gt;账号的注册比较简单，可以直接使用Google账号，产品的价格是按照PV来收费，有一个月的试用期。对于国内的用户来说，一个比较麻烦的地方时需要使用Master或者Visa的信用卡才可以支付。&lt;/p&gt;

&lt;p&gt;后台的界面比较简洁主要有这个部分：Dashboard、安装SkyGlue、自定义跟踪事件、用户行为报告。&lt;/p&gt;

&lt;p&gt;下面我们来看一下标签自定义设置的截图。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1564&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;681&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/06/123.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/06/123.png&quot; alt=&quot;SnapShot&quot;&gt;&lt;/a&gt; 页面标签设置截图[/caption]&lt;/p&gt;

&lt;p&gt;其中绿色虚线的部分为可以自动标记的元素，比如页面上的所有链接，页面上的所有图片，页面上输入框，甚至页面上的Iframe以及嵌入的Flash都是可以自动标记。你可以点击任意一个元素，弹出框中会显示这个元素能否被自动跟踪，以及跟踪的名称，同时可以修改这个默认的名称，比如在上例中，我将对新浪微博这个Iframe的点击事情命名为MicroBlog，自定义之后的元素会有绿色实线标注，以便与自动标记区分开。&lt;strong&gt;温馨提示：监测在线客服点击事件的需求，可以很方便的实现。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;目前实现自定义跟踪流程还是有一些繁琐，用户需要在setup页面找到要修改名称的元素，如果元素有id或name，则只需填入id或name即可修改名称，如果没有的话，则需要根据tag和其一个唯一的属性来定义这个元素。我使用过&lt;a href=&quot;http://adgrok.com/grok-o-matic/&quot;&gt;Adgrok&lt;/a&gt;（已经被Tweeter收购）的服务，他们提供AdWords投放自助服务，也是使用类似浮层来提高易用性，给用户以所见即所得的用户体验。我想如果SkyGlue能够将自定义跟踪的部分就在Setup模式下完成，而不是Setup模式只是一个查看标签属性的地方。&lt;/p&gt;

&lt;p&gt;也许有一天大的WA工具提供商也会提供类似的标记方式，那么也许广大的WA实施工程师将面临失业的可能。&lt;/p&gt;

&lt;p&gt;目前SkyGlue只支持将Click事件跟踪为Event，无法指定为虚拟的页面浏览，同时也不支持自定义变量的设置，目前，GA的Event还是有一定的局限性，无法用于渠道可视化和目标流，从这个意义上来说一些click事件跟踪为虚拟页面浏览还是有一定意义的。相信，在不远的将来GA会将事件与页面浏览整合为交互。&lt;/p&gt;

&lt;p&gt;当然在目前想要完全实现自动标记还不太现实，毕竟国内大部分交互的Campaign site还是使用Flash进行制作，让我们一起祈祷那些老掉牙的浏览器早日在国内消亡吧~&lt;/p&gt;

&lt;p&gt;看完了部署，我们再来看一下实际的跟踪数据：&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1565&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;705&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/06/23333.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/06/23333.png&quot; alt=&quot;Tracking Data&quot;&gt;&lt;/a&gt; 跟踪数据[/caption]&lt;/p&gt;

&lt;p&gt;从上面数据可以看到，数据的层次非常清晰，区分了URL、Click这些事件，同时可以发现对于图片和Flash都可以监测到数据。&lt;/p&gt;

&lt;p&gt;下面我们再来看一下用户报告，这个功能是可以查看单个访问者的点击流数据。访问者的UID是由SkyGlue生成的，不同于utma cookie中存储的UID，通过GA的自定义变量5来存储，因此，在使用之前，你需要将自定义变量5空出来。这对于研究用户行为（正常行为与作弊行为）有重要的意义。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;760&amp;quot;]&lt;img src=&quot;http://cdnwebsite.skyglue.com/wp-content/uploads/2012/06/smart_segment_760.png&quot; alt=&quot;UserReport&quot;&gt; 用户报告的数据[/caption]&lt;/p&gt;

&lt;p&gt;好了，以上就是自助式GA自动标记服务SkyGlue的一个简单介绍，如果你想要体验这个功能，那么马上访问&lt;a href=&quot;http://www.skyglue.com&quot;&gt;www.skyglue.com&lt;/a&gt;开始试用吧！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网站分析中归因建模(Attribution Modeling)</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/05/20/e7bd91e7ab99e58886e69e90e4b8ade5bd92e59ba0e5bbbae6a8a1attribution-modeling"/>
   <updated>2012-05-20T00:08:43+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/05/20/e7bd91e7ab99e58886e69e90e4b8ade5bd92e59ba0e5bbbae6a8a1attribution-modeling</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;什么是归因模型？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;归因模型是指一个规则集，用于解释转化路径中每个接触点所贡献的转化量或转化价值。例如，大家熟知的GA的的转化归因模型属于”最后互动“归因，即将转化归因为距离转化最近的一个接触点。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1541&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;553&amp;quot; caption=&amp;quot;GA中的归因建模&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/05/44564654.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/05/44564654.png&quot; alt=&quot;Attribution model in GA&quot;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;网站分析中归因模型的种类及其适用情景&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我们先来假设一个场景，以便更好的理解这些模型。&lt;/p&gt;

&lt;p&gt;假设有一个访问者，最初通过一个新浪上的Banner广告来到了你的网站，第二天上午，她又通过你们的官方微博发送的信息来到了网站，下午的时候她收到了你们的一封促销邮件，又一次来到的网站并产生了购买。我们来看一下几种归因模型如何归因这个订单。&lt;/p&gt;

&lt;p&gt;1、最后互动归因模型&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1542&amp;quot; align=&amp;quot;alignright&amp;quot; width=&amp;quot;113&amp;quot; caption=&amp;quot;最后互动&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/05/Last-Interaction.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/05/Last-Interaction.png&quot; alt=&quot;Last Interaction&quot;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;最后互动归因模型会将订单100%归因于转化发生前的一个接触点。促销邮件产生了一个订单。&lt;/p&gt;

&lt;p&gt;最后互动归因模型是目前应用最广泛的一种归因模型。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用情景：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用于吸引用户立即购买的广告或Campaign，或者购买周期中不存在考虑周期的情况。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1544&amp;quot; align=&amp;quot;alignright&amp;quot; width=&amp;quot;113&amp;quot; caption=&amp;quot;最初互动归因模型&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/05/First-Interaction1.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/05/First-Interaction1.png&quot; alt=&quot;First Interaction&quot;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;2、最初互动归因模型&lt;/p&gt;

&lt;p&gt;最初互动归因模型会将订单100%归因于转化路径上最初的接触点。新浪的Banner产生了一个订单。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用情景：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用于品牌初创阶段，这个阶段的重点是塑造品牌，因此，应该为能够带来品牌曝光的渠道增加更多的预算。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;3、线性归因模型&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1545&amp;quot; align=&amp;quot;alignright&amp;quot; width=&amp;quot;113&amp;quot; caption=&amp;quot;线性归因模型&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/05/linear.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/05/linear.png&quot; alt=&quot;Linear&quot;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;线性归因模型会将订单按照相等权重分配给转化路径上的每个接触点。新浪的Banner、微博和促销邮件都产生了1/3个订单。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用情景：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;如果你的商业模式中每个接触点都很重要，在整个销售周期中都要维持客户的注意并保持与客户的联系，那么这个模型是比较适用的。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;4、时间衰退归因模型&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1546&amp;quot; align=&amp;quot;alignright&amp;quot; width=&amp;quot;113&amp;quot; caption=&amp;quot;时间衰退归因模型&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/05/Time-Decay.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/05/Time-Decay.png&quot; alt=&quot;Time Decay&quot;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;时间衰退归因模型认为离转化越近的接触点其价值越高。那么，新浪Banner贡献了o.2个订单，微博贡献了0.3个订单，而促销邮件贡献了0.5个订单。（其中为每个渠道分配的权重，即随时间推移权重的变化，可以根据自身情况进行调整。）&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用情景：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;如果你进行了一个短期的营销活动，那么推广周期内交互的价值应该会更高，这种情况下，可以适用时间衰退归因模型来评估本次活动的效果。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;5、基于位置的归因模型&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1547&amp;quot; align=&amp;quot;alignright&amp;quot; width=&amp;quot;113&amp;quot; caption=&amp;quot;基于位置的归因模型&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/05/Position-Based.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/05/Position-Based.png&quot; alt=&quot;Position Based&quot;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;基于位置的归因模型为最后交互及最初交互各分配40%的权重，渠道中间的交互分配20%的权重。新浪Banner和促销邮件各产生了0.4个订单而微博产生了0.2个订单。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用情景：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;适用于既关注品牌认知和最终转化的情况。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;以上这些归因模型只是对转化流程中不同接触点的权重分配不同，如何找到真正适合自身发展阶段的归因模型才是难点所在。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;更新：&lt;/strong&gt;Lunametric在最新的文章中介绍了如果用Excel用GA免费版的数据构建归因模型：&lt;a href=&quot;http://www.lunametrics.com/blog/2012/05/17/multichannel-attribution-modeling-tool/&quot;&gt;http://www.lunametrics.com/blog/2012/05/17/multichannel-attribution-modeling-tool/&lt;/a&gt;，并给到了一个模版 &lt;a href=&quot;https://docs.google.com/spreadsheet/ccc?key=0AliSM9M0UxNsdElTeWxmNnJzX0NOOVdKUmlpcU90ZHc&quot;&gt;Attribution Modeling Tool&lt;/a&gt;，感谢Kurt的分享~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用Chrome的Google Analytics Debugger进行GA的故障排除</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/05/19/e588a9e794a8chromee79a84google-analytics-debuggere8bf9be8a18cgae79a84e69585e99a9ce68e92e999a4"/>
   <updated>2012-05-19T22:11:13+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/05/19/e588a9e794a8chromee79a84google-analytics-debuggere8bf9be8a18cgae79a84e69585e99a9ce68e92e999a4</id>
   <content type="html">&lt;p&gt;GA代码初次部署或代码修改后的故障排除是一件比较麻烦的事情。一般会使用的工具有httpwatch(IE/firefox)，firebug(firefox)，在这篇文章里我为大家介绍一下Google自己的一个故障排除工具：&lt;a href=&quot;https://chrome.google.com/extensions/detail/jnkmfdileelhofjcijamephohjechhna&quot;&gt;Google Analytics Debugger&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;Google Analytics Debugger的安装&lt;/h2&gt;

&lt;p&gt;这是一个Chrome浏览器的扩展程序，因此，首先需要安装Chrome。然后进入Chrome网上应用商城，安装&lt;a href=&quot;https://chrome.google.com/extensions/detail/jnkmfdileelhofjcijamephohjechhna&quot;&gt;Google Analytics Debugger&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;安装完成后会在Chrome地址栏右侧出现&lt;img src=&quot;http://www.cloga.info/files/debugger_icon1.png&quot; alt=&quot;bugger_icon1&quot;&gt;，点击一下这个图标，图标会点亮&lt;img src=&quot;http://www.cloga.info/files/debugger_icon1.png&quot; alt=&quot;bugger_icon2&quot;&gt;。&lt;/p&gt;

&lt;p&gt;点击F12，或Ctrl+Shift+J，调出Chrome的Javascript控制台。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.cloga.info/files/console.png&quot; alt=&quot;console&quot;&gt;&lt;/p&gt;

&lt;p&gt;点击Console，你会看到类似上面的界面。下面我们再来看一下如何进行GATC的故障排除。&lt;/p&gt;

&lt;h2&gt;GA跟踪代码的故障排除的基本步骤&lt;/h2&gt;

&lt;p&gt;1、打开GA Debugger&lt;/p&gt;

&lt;p&gt;2、访问要检查的URL&lt;/p&gt;

&lt;p&gt;3、相关的GA方法正确&lt;/p&gt;

&lt;p&gt;GA Debugger会先列出这个页面上调用的GA方法及其参数。通过这个列表可以发现是否每个参数都按照我们的预想工作。&lt;/p&gt;

&lt;p&gt;4、确保相关参数正确&lt;/p&gt;

&lt;p&gt;GA跟踪的本质是通过对http://www.google-analytics.com/__utm.gif的参数传递相关信息。完整的请求样例如下：&lt;/p&gt;

&lt;p&gt;http://www.google-analytics.com/&lt;strong&gt;utm.gif?utmwv=4&amp;amp;utmn=769876874&amp;amp;utmhn=example.com&amp;amp;utmcs=ISO-8859-1&amp;amp;utmsr=1280x1024&amp;amp;utmsc=32-bit&amp;amp;utmul=en-us&amp;amp;utmje=1&amp;amp;utmfl=9.0%20%20r115&amp;amp;utmcn=1&amp;amp;utmdt=GATC012%20setting%20variables&amp;amp;utmhid=2059107202&amp;amp;utmr=0&amp;amp;utmp=/auto/GATC012.html?utm&lt;em&gt;source=www.gatc012.org&amp;amp;utm&lt;/em&gt;campaign=campaign+gatc012&amp;amp;utm&lt;em&gt;term=keywords+gatc012&amp;amp;utm&lt;/em&gt;content=content+gatc012&amp;amp;utm_medium=medium+gatc012&amp;amp;utmac=UA-30138-1&amp;amp;utmcc=&lt;/strong&gt;utma%3D97315849.1774621898.1207701397.1207701397.1207701397.1%3B...&lt;/p&gt;

&lt;p&gt;其中的参数意义可以参考&lt;a href=&quot;https://developers.google.com/analytics/resources/articles/gaTrackingTroubleshooting#gifParameters&quot;&gt;GA的官方说明&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;通过Chrome的GA debugger，可以一目了然的看到各个参数的值。比如Account ID对应的是utmac，page title对应的是utmdt。&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;一些常见的错误&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;最后再简单和大家分享一下一些常见的错误&lt;/p&gt;

&lt;p&gt;1、GA的网络媒体资源ID错误&lt;/p&gt;

&lt;p&gt;GA的网络媒体资源ID是最重要的参数之一，如果这个参数错误会导致数据发送给另外的GA账户。如果_setAccount方法的参数存在空格，则数据会正常发送，但是，你的报告中不会有数据。因此，要注意GA的参数中没有空格。&lt;/p&gt;

&lt;p&gt;另外还需要提醒大家的一点是要保证页面上调用的跟踪器名称一致，如果调用一个并不存在的跟踪器，则utm请求还会正常发送，但是Account ID会显示为XXXXX-XX&lt;/p&gt;

&lt;p&gt;2、转化归属的错误&lt;/p&gt;

&lt;p&gt;如果域哈希值处理的有问题就会出现大部分转化归属为Direct，并且网站的新访比例也会偏高。&lt;/p&gt;

&lt;p&gt;比如，网站上一些页面使用了&lt;em&gt;gaq.push([&amp;#39;&lt;/em&gt;setDomainName&amp;#39;,&amp;#39;abc.com&amp;#39;]);，而有些页面则使用&lt;em&gt;gaq.push([&amp;#39;&lt;/em&gt;setDomainName&amp;#39;,&amp;#39;.abc.com&amp;#39;]);。&lt;/p&gt;

&lt;p&gt;3、Session超出500hit的上限&lt;/p&gt;

&lt;p&gt;GA记录一个Session的hit上限是500，如果超过这个上限则GA的请求不会发送。如果你在一个Session中发现莫名不发送utm.gif的请求，那么请删除一下cookie，再刷新一下页面。&lt;/p&gt;

&lt;p&gt;PS：如果注意观察的话，经常会发现GA的版本会经常升级，有时也会发现一些作用不明的参数。&lt;/p&gt;

&lt;h2&gt;代码检测实例&lt;/h2&gt;

&lt;p&gt;页面加载&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.cloga.info/files/GA_Method.png&quot; alt=&quot;GA Method&quot;&gt;&lt;/p&gt;

&lt;p&gt;上图是我的Blog加载后页面上的GATC加载的的一个截图。我们可以在里面看到我的GATC中一共定义了几个方法。Track Pageview，Tracking beacon sent!表明当前是发送的Pageview请求，发送成功。如果你是用的了Event或者电子商务的Track trans，那么也会有对应的提示。但是，请注意不代表有Track Pageview的方法就一定会发送数据，如果页面上定义了抽样的话，那么有可能你被排除了就不会发送beacon。&lt;/p&gt;

&lt;p&gt;接下来是beacon具体的参数信息，我们可以看到这个请求中包含的所有信息，比如对应的GA账户，URL，Referrer、VisitorID等。&lt;/p&gt;

&lt;p&gt;除了基本的Pageview以外，GA debugger也可以补抓到其他的GA方法请求。上图是我点击了页面的搜索框后发送的Event，由于我使用了GAS自动标记这些交互，因此，这个过程是自动的。我们可以看到GAS自动产生的事件类别是Form Tracking（不知道为啥写的的是Event Name），事件动作是form (none)（同样无厘头的写着Event Type），事件标签是s (change)。通过这些信息，我就可以事件与对应的GA标签对应起来，比如我要将这个事件设置为目标的话，那么就指定事件目标，其类型为Form Tracking，动作为form (none)，标签为form (none)。&lt;/p&gt;

&lt;p&gt;好了，GA Debugger的使用就介绍到这里，如果您有相关的问题可以给我留言~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>免费的GA数据导出插件Excellent Analytics使用方法介绍</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/ga%20api/2012/03/21/e5858de8b4b9e79a84gae5afbce587bae68f92e4bbb6excellent-analyticse4bdbfe794a8e696b9e6b395e4bb8be7bb8d"/>
   <updated>2012-03-21T00:49:01+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/ga%20api/2012/03/21/e5858de8b4b9e79a84gae5afbce587bae68f92e4bbb6excellent-analyticse4bdbfe794a8e696b9e6b395e4bb8be7bb8d</id>
   <content type="html">&lt;p&gt;Cloga：先插播一条广告~我所在公司（我们是一家4A广告公司）的网站分析Team目前有多个网站分析职位空缺，有无经验均可，如果你对网站|数字分析（我们的业务还会涉及Mobile site，Social Media）感兴趣，并且有良好的学习能力，我们都欢迎您的加入。当然也欢迎有经验的同学。简历请发送至：cloga0216@gmail.com。欢迎推荐与自荐。&lt;/p&gt;

&lt;p&gt;你是否为每次只能同时查看两个维度而苦恼？你是否厌倦了每次导出后CSV之后将编码方式修改为ANSI来避免乱码？你是否希望能直接在Excel获取GA数据，而不需要登陆GA的界面？&lt;/p&gt;

&lt;p&gt;如果你有以上的需求，那么，来试一下&lt;a href=&quot;http://excellentanalytics.com&quot;&gt;Excellent Analytics&lt;/a&gt;吧~这是一款免费的Excel插件，通过它你就可以在Excel中直接查询GA数据。这个插件是在Excel中实现对GA API的调用。这意味着在一次查询中，我们最多可以查询7个维度（GA的界面中是2个，虽然支持的下钻最多4次），10个指标，总量为10,000条（GA默认是500，通过修改参数可以最多导出20,000）GA的数据。Excellent Analytics还提供查询更新，只要点击更新就可以在现有查询条件的基础上修改条件查询更新数据（我们需要做的通常只是更新一下时间），你也可以将查询条件复制到表格的其他地方更新数据，同时也支持一次查询多个Profile的数据（这个功能比较少会用到）。如果希望的话，你可以用Excellent Analytics制作Dashboard，并且通过更新查询，来更新数据。下面让我们来看一下Excellent Analytics的使用。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;h4&gt;使用Excellent Analytics&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;http://excellentanalytics.com/wp-content/uploads/2009/08/ga1.jpg&quot; alt=&quot;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在你安装了Excellent Analytics之后，打开Microsoft Excel，找到Excellent Analytics并在菜单选择“Account”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;http://excellentanalytics.com/wp-content/uploads/2009/08/ga2.jpg&quot; alt=&quot;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;输入你用来登陆Google Analytics的电子邮件地址和密码。确保你输入的信息正确。如果你登录失败，请检查&lt;a href=&quot;http://www.google.com/support/accounts/bin/answer.py?answer=48598&amp;amp;hl=en&quot;&gt;谷歌的帮助 &lt;/a&gt;。如果你做了太多的登录尝试，你就必须输入Google Analytics（分析）网站上captcha图像中的字母，或请求一个新的密码。&lt;/p&gt;

&lt;p&gt;当您已成功登陆后，下一步是创建您的第一个query。只需按一下“New Query”。将打开Excellent Analytics窗口。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dimensions（维度）&lt;/strong&gt;
&lt;strong&gt;&lt;img src=&quot;http://excellentanalytics.com/wp-content/uploads/2009/08/dim2.jpg&quot; alt=&quot;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;首先，你必须选择包括哪些维度。如果你勾选一个复选框，你会选择在该级别中包含的所有维度。例如，如果你勾选的“content（内容）”复选框“、那么，exit page path（退出页面路径）”、“Landing page path（着陆页面路径）”、“page path（页面的路径）”和“page title（页面标题）”都将被选中。如果你只想选择其中之一，你需要展开这个水平，只勾选你想添加的维度前面的复选框。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Metrics（指标）&lt;/strong&gt;
&lt;strong&gt;&lt;img src=&quot;http://excellentanalytics.com/wp-content/uploads/2009/08/met2.jpg&quot; alt=&quot;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;选择指标的工作与选择维度的方式相同。勾选整个水平，或者只勾选你选择的指标。&lt;/p&gt;

&lt;p&gt;谷歌已经写了&lt;a href=&quot;http://code.google.com/intl/sv-SE/apis/analytics/docs/gdata/gdataReferenceDimensionsMetrics.html&quot;&gt;一个清单，很好的解释了可以组合维度和指标&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;执行query前的最后一步是要考虑是否设置一个或多个过滤器限制导入的数据。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Filter（过滤器）&lt;/strong&gt;
&lt;strong&gt;&lt;img src=&quot;http://excellentanalytics.com/wp-content/uploads/2009/08/filt.jpg&quot; alt=&quot;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最后，你可以随时刷新数据。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;http://excellentanalytics.com/wp-content/uploads/2009/08/refresh.jpg&quot; alt=&quot;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;只要选中query产生的表单的第一行，然后按一下“Update Query”。你需要选中您希望更新的表的标题。它包含了选定的Google Analytics（分析）配置文件的名称和选定日期范围。&lt;/p&gt;

&lt;p&gt;好了，关于Excellent Analytics的使用就介绍到这里，如果您对Excellent Analytics的使用有任何疑问，欢迎给我留言~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用GWO进行页面组的A/B Test-GWO的高级使用技巧</title>
   <link href="http://cloga.github.io/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7/2012/03/03/e588a9e794a8gwoe8bf9be8a18ce9a1b5e99da2e7bb84e79a84ab-test"/>
   <updated>2012-03-03T01:08:10+08:00</updated>
   <id>http://cloga.github.io/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7/2012/03/03/e588a9e794a8gwoe8bf9be8a18ce9a1b5e99da2e7bb84e79a84ab-test</id>
   <content type="html">&lt;p&gt;[caption id=&amp;quot;attachment&lt;em&gt;1350&amp;quot; align=&amp;quot;alignright&amp;quot; width=&amp;quot;180&amp;quot;][&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/12/ab0_sm1.gif&quot; alt=&quot;&quot;&gt;](http://www.cloga.info/wp-content/uploads/2011/12/ab0&lt;/em&gt;sm1.gif) A/B Test[/caption]&lt;/p&gt;

&lt;p&gt;A/B Test是网站分析的主要工作内容之一。通过A/B Test能够有效的比较多个版本页面之间的效果。&lt;a href=&quot;http://www.google.com/websiteoptimizer&quot;&gt;Google Web Optimizer（GWO）&lt;/a&gt;是Google提供的一款免费工具，利用它营销人员可以很方便的进行A/B Test及多变量测试，所需要做的只是在指定页面上添加几行JS代码，而不需要更多的IT资源。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一、GWO A/B Test访问者分配的基本流程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1、访问者在浏览器中请求实验页面的URL&lt;/p&gt;

&lt;p&gt;2、你的网站服务器返回实验页面的HTML代码&lt;/p&gt;

&lt;p&gt;3、放在页面顶部的GWO控制脚本执行&lt;/p&gt;

&lt;p&gt;4、控制脚本判断应该为访问者分配的页面版本，如果是原始页面，则不作任何处理，如果是替换页面，则按照用户在GWO指定的URL进行跳转&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、GWO标准的A/B Test的局限性&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GWO标准的A/B Test主要用于对单个页面的测试，因为在GWO中输入的替换页面是固定的。比如，测试不同版本首页的效果。但是，如果你想要测试的内容页面组效果，比如不同版本的产品类目页。&lt;/p&gt;

&lt;p&gt;原始页面组：&lt;/p&gt;

&lt;p&gt;http://www.mysite.com/category1/index.htm&lt;/p&gt;

&lt;p&gt;http://www.mysite.com/category2/index.htm&lt;/p&gt;

&lt;p&gt;http://www.mysite.com/category3/index.htm&lt;/p&gt;

&lt;p&gt;……&lt;/p&gt;

&lt;p&gt;对应的实验页面组：&lt;/p&gt;

&lt;p&gt;http://www.mysite.com/category1/index-t.htm&lt;/p&gt;

&lt;p&gt;http://www.mysite.com/category2/index-t.htm&lt;/p&gt;

&lt;p&gt;http://www.mysite.com/category3/index-t.htm&lt;/p&gt;

&lt;p&gt;这类的实验无法用GWO标准的A/B Test实现，但是，在实践过程中，却有着巨大的应用价值。通过一些简单的自定义GWO也可以帮我们实现这个需求。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、用GWO实现页面组A/B Test的基本思路及实现方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通过一些自定义GWO的A/B Test和多变量Test都可以实现页面组的A/B Test。&lt;/p&gt;

&lt;p&gt;1、GWO的A/B Test实现页面组A/B Test&lt;/p&gt;

&lt;p&gt;对于GWO的A/B test来说，我们可以指定一组页面（GWO的控制脚本可以放在模板页面）跳转到一个页面，将这个（或多个）跳转的页面作为中间页面，再通过页面JS跳转到对应的替换页面。&lt;/p&gt;

&lt;p&gt;以上面的页面组A/B Test情景为例：&lt;/p&gt;

&lt;p&gt;（1）在GWO中创建一个A/B Test&lt;/p&gt;

&lt;p&gt;（2）任选一个实验页面URL填入GWO中原始页面中&lt;/p&gt;

&lt;p&gt;（3）在GWO的界面中不要填写任何的实验页面，而是填写一个中间的跳转页，比如：www.mysite.com/redirect.html。在这个页面上写一段JS跳转脚本。起作用是从referer中获得url，并将替换其中的某一部分，然后跳转。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/02/5555.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/02/5555-300x37.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;对于上面的页面组来说，这段JS跳转脚本要做的就是把referer中的index.htm替换为index-t.htm。例如下面这段：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
var r=document.referrer
if(r.indexOf(&amp;#39;index.html&amp;#39;)!=-1){
　　r2=r.replace(/index.html/,&amp;#39;index-t.html&amp;#39;)
　　document.location=r2}
else{
document.location=&amp;quot;http://www.mysite.com&amp;quot;
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样当访问者访问实验页面组时，GWO会进行判断，如果需要为访问者展示替换页面则将访问者跳转到www.mysite.com/redirect.html这个中间页面，这个页面上根据referrer的值再将访问者跳转到对应的具体替换页面上。&lt;/p&gt;

&lt;p&gt;（4）填写转化页面URL&lt;/p&gt;

&lt;p&gt;（5）在原始页面组中，与标准的A/B Test一样，添加对应的控制脚本及跟踪脚本。&lt;/p&gt;

&lt;p&gt;（6）在转化页面添加转化脚本&lt;/p&gt;

&lt;p&gt;这种方法的缺点是需要经过两次跳转，对用户体验较差。其优点是实施相对简单一些。&lt;/p&gt;

&lt;p&gt;2、用GWO的MVT（多变量测试）来实现页面组A/B Test&lt;/p&gt;

&lt;p&gt;整体思路与上一种方法是一致的。一点区别是利用GWO MVT的功能，将URL变化的部分存储在GWO的服务器，再通过一些JS脚本根据这些内容来拼成实际的URL。&lt;/p&gt;

&lt;p&gt;还以上面的页面为例：&lt;/p&gt;

&lt;p&gt;（1）在GWO中创建一个MVT&lt;/p&gt;

&lt;p&gt;（2）从实验页面组中任选一个填入实验页面URL&lt;/p&gt;

&lt;p&gt;（3）填入转化页面URL&lt;/p&gt;

&lt;p&gt;（4）在实验页面组中添加控制脚本，请注意控制脚本应放在页面的最上面。但是不需要按照指示添加section脚本。在控制脚本下，填入下面的代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;!-- utmx section name=&amp;quot;page-url&amp;quot; --&amp;gt;
&amp;lt;script&amp;gt;
function filter(v) {
  var b = utmx(&amp;#39;variation_content&amp;#39;, &amp;#39;page-url&amp;#39;);
  var u = v[0].contents;
  if (b &amp;amp;&amp;amp; u.substr(0,7) == &amp;#39;http://&amp;#39; &amp;amp;&amp;amp; b.substr(0, 7) != &amp;#39;http://&amp;#39;) {
    u = u.substr(7);
  }

  var l = document.location.href;
  var prefix = &amp;#39;mysite.com/&amp;#39;;
  var i = l.indexOf(prefix);
  var j = l.indexOf(&amp;#39;/&amp;#39;, i + prefix.length);
  u = u.replace(&amp;#39;category&amp;#39;, l.substring(i + prefix.length, j));

  return u;
}
utmx(&amp;#39;url&amp;#39;, &amp;#39;page-url&amp;#39;, 0, filter);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;!-- utmx section name=&amp;quot;page-url&amp;quot; --&amp;gt;&lt;/code&gt;这段注释的作用与Section脚本类似，声明了名为page-url的section。&lt;/p&gt;

&lt;p&gt;utmx这个函数在GWO中有多种用途，其调用形式为utmx( feature, arg1, arg2, ... argn )，其中第一个参数是一个字符串用来描述所请求的功能，后面的参数随第一个参数的不同而不同。已知有如下几种情况：&lt;/p&gt;

&lt;p&gt;a、用于重定向的跳转：utmx(&amp;#39;url&amp;#39;, &amp;#39;page-url&amp;#39;, 0, filter)，见上面的情况；或者utmx(&amp;#39;url&amp;#39;, &amp;#39;A/B&amp;#39;)，见标准的A/B Test。第一个参数URL，告诉GWO要进行重定向；第二个参数是section的名称，在标准的A/B Test情况下，实际上是为指定了名称为A/B的Section；第三个参数是一个位置标识符，不需要管它；第四个参数是定义在重定向发生前对重定向URL进行过滤的函数。&lt;/p&gt;

&lt;p&gt;这个函数的作用机制是这样的：首先，从名为第二个参数的section中获得跳转的URL。然后按照位置标识符及过滤器规则对获取的信息进行重写。最后，按照重写后的URL进行重定向（如果需要展示替换版本的话）。标准A/B Test直接就使用GWO界面中输入的替换URL，因此，不需要位置标识符和URL过滤器。&lt;/p&gt;

&lt;p&gt;在调用过滤器函数前，utmx函数会对目标URL做许多事情，首先，它将当前URL的查询参数附加到目标URL后，另外，它会查看目标URL是否包含协议，如果不包含协议，则会为目标URL添加http://。&lt;/p&gt;

&lt;p&gt;b、获取当前访问者的变量信息：utmx( &amp;quot;variation&lt;em&gt;number&amp;quot;, section&lt;/em&gt;name )及utmx( &amp;quot;variation&lt;em&gt;content&amp;quot;, section&lt;/em&gt;name )。这个方法的作用是根据section名称返回数字形式的变量名（0至N-1，原始版本为0，N为替换版本数。）或者在GWO中输入的section的替换信息。&lt;/p&gt;

&lt;p&gt;例如，你用utm&lt;em&gt;section在页面上创建了一个名为ABC的section，有二个替换内容，内容以此为DEF、GHI。那么，如果一个访问者被选择为查看DEF，则utmx( &amp;quot;variation&lt;/em&gt;number&amp;quot;, &amp;quot;ABC&amp;quot; )会返回1，utmx( &amp;quot;variation_content&amp;quot;, &amp;quot;ABC&amp;quot;)则会返回DEF。&lt;/p&gt;

&lt;p&gt;这个主要是获得单个变量的信息。&lt;/p&gt;

&lt;p&gt;C、获取当前访问者的组合信息：utmx( &amp;quot;combination&amp;quot; )及utmx( &amp;quot;combination_string&amp;quot; )。前者返回的是数字形式代表的组合信息（0至N-1，N为实验条件数），后者返回的是字符形式的组合信息。后者在GA与GWO数据整合过程中有重要的应用，基本思路是以Visitor级别的自定义变量将访问者的组合信息与访问行为关联，或者将组合信息以参数形式附加在实验URL后，以便比较不同实验条件的效果，我会在下一篇关于GWO高级使用技巧中介绍。&lt;/p&gt;

&lt;p&gt;例如，你进行了一个三个变量的MVT，A变量为section a，B变量为section b，C变量为section c，A变量有3个水平，a1、a2、a3，B变量有2个水平b1、b2，C变量有4个水平，c1、c2、c3、c4，即3&lt;em&gt;2&lt;/em&gt;4实验设计，共24种实验条件。如果一个访问者被选择的实验条件为a1b2c3，则utmx( &amp;quot;combination&amp;quot; )会返回5，而utmx( &amp;quot;combination&lt;em&gt;string&amp;quot; )会返回1-2-3。utmx( &amp;quot;variation&lt;/em&gt;number&amp;quot;, &amp;quot;a&amp;quot; )会返回0，utmx( &amp;quot;variation_content&amp;quot;, &amp;quot;b&amp;quot; )会返回GWO中为b2输入的替换内容。&lt;/p&gt;

&lt;p&gt;filter这个方法。它的主要作用是用来重组重定向的URL。稍后我们再来看一下。&lt;/p&gt;

&lt;p&gt;（5）在转化页面添加转化脚本。&lt;/p&gt;

&lt;p&gt;（6）在GWO的Variation页面输入替换的URL。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1473&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;950&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/03/wwww3331.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/03/wwww3331.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; Variation[/caption]&lt;/p&gt;

&lt;p&gt;让我们再来看一下filter函数的作用。简单来说呢，就是用当前页面URL（document.location.href）中类别（通过前缀与其后的&amp;quot;/&amp;quot;进行定位）替换GWO界面中Variation中存储的备选URL中category。&lt;/p&gt;

&lt;p&gt;到这里，利用MVT进行的页面组A/B Test就介绍完了。与利用GWO的A/B Test进行的页面组A/B Test相比，其优势在于仅使用一次重定向，用户体验稍好，其劣势是JS相对复杂，同时要对GWO的API有一定了解。&lt;/p&gt;

&lt;p&gt;以上就是如何用GWO进行页面组的A/B Test的基本思路和实现方式，欢迎您分享这方面的经验，如果有任何疑问，也欢迎给我留言~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>开源网站分析工具-OWA介绍</title>
   <link href="http://cloga.github.io/%E5%BC%80%E6%BA%90%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2012/02/23/e5bc80e6ba90e7bd91e7ab99e58886e69e90e5b7a5e585b7-owae4bb8be7bb8d"/>
   <updated>2012-02-23T18:19:25+08:00</updated>
   <id>http://cloga.github.io/%E5%BC%80%E6%BA%90%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2012/02/23/e5bc80e6ba90e7bd91e7ab99e58886e69e90e5b7a5e585b7-owae4bb8be7bb8d</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.openwebanalytics.com/wp-content/uploads/owa_logo_200w.png&quot; alt=&quot;&quot;&gt;Google Analytics大家都比较熟悉，其实有许多开源网站分析工具也很强大，可以与GA媲美，有些功能甚至走在了GA的前面。今天为大家介绍的就是这样一款开源的网站分析工具：Open Web Analytics。&lt;/p&gt;

&lt;p&gt;首先唠叨几句，关于开源的网站分析与GA相比的优势与劣势。&lt;/p&gt;

&lt;p&gt;GA作为免费网站分析的领跑者，制定着行业的准则也影响着行业的走向。但是，其作为一款免费的工具也有一定的局限性。首先，由于是saas架构，因此，数据都是host在google的服务器，这本身限制其在数据敏感的客户中应用。其次，如果数据量较大，GA为保证效率采用抽样数据，会影响数据的准确性。再次，由于GA自身的隐私设置，其中存储的数据都是经过聚合匿名数据，无法获得个体的访问行为，无法与其他数据源，比如CRM进行有效的整合。最后，尽管GA提供了API接口，但是由于抽样数据也同样出现在API中，同时也会受到聚合数据的影响。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;而对于开源的网站分析工具，它们在界面上的功能完善度要落后于GA，但是，由于是开源的软件，数据的可控性很强，与其他数据源的集成也更方便，也可以直接访问开源工具的数据库。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment_1443&amp;quot; align=&amp;quot;alignright&amp;quot; width=&amp;quot;192&amp;quot; caption=&amp;quot;click stream&amp;quot;]&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2012/02/click-stream.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/02/click-stream-192x300.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;我们来看一下OWA这款工具。&lt;/p&gt;

&lt;p&gt;Open Web Analytics（OWA）是开源的网站分析工具，你可以用它来跟踪访问者对网站或应用的使用情况，是用php+Mysql开发的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一、特色功能介绍&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1、支持两种跟踪&lt;/p&gt;

&lt;p&gt;OWA既支持用JS的pagetag方式，也可以使用php API进行跟踪。同样是php+mysql的&lt;a href=&quot;http://www.piwik.org&quot;&gt;piwik&lt;/a&gt;也是两种方式都支持。&lt;/p&gt;

&lt;p&gt;2、多站点支持：跟踪多个站点，并且可以单独或者将所有站点汇总来查看统计数据。&lt;/p&gt;

&lt;p&gt;3、&lt;strong&gt;点击流：&lt;/strong&gt;查看每个访问者的实际点击流。（GA由于隐私问题，不提供单独用户的点击流数据，给出的一个聚合数据。）以访问者为单位，可以查看每个访问者每次访问的实际点击流。&lt;/p&gt;

&lt;p&gt;4、点击跟踪：准确跟踪访问点击的位置。（实际报告中是跟踪Dom树的点击情况。）&lt;/p&gt;

&lt;p&gt;5、&lt;strong&gt;点击热图&lt;/strong&gt;：查看访问者的点击热图。（GA中其实不存在热图，页面内分析，不过是图形化的导航摘要。。）&lt;a href=&quot;http://demo.openwebanalytics.com/owa/index.php?owa_do=base.overlayLauncher&amp;amp;owa_document_id=3491704707&amp;amp;owa_overlay_params=siteId%3D%3Ec9b7d12e322c7c360fb8f7c72ffe4c41%7C%7C%7Cperiod%3D%3Elast_seven_days%7C%7C%7Caction%3D%3EloadHeatmap%7C%7C%7Cdocument_id%3D%3E3491704707&quot;&gt;查看Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[caption id=&amp;quot;attachment&lt;em&gt;1442&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;300&amp;quot; caption=&amp;quot;dom click&amp;quot;][&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2012/02/dom_click-300x142.png&quot; alt=&quot;&quot;&gt;](http://www.cloga.info/wp-content/uploads/2012/02/dom&lt;/em&gt;click.png)[/caption]&lt;/p&gt;

&lt;p&gt;6、&lt;strong&gt;鼠标跟踪&lt;/strong&gt;：类似于&lt;a href=&quot;http://www.clicktale.com&quot;&gt;ClickTale&lt;/a&gt;的访问者行为录像，记录访问者在网页上的动作，鼠标轨迹、页面滚动等。所不同的是OWA提供的是单页面的行为录像。而&lt;a href=&quot;http://www.clicktale.com&quot;&gt;Clicktale&lt;/a&gt;提供的是每个访问的行为录像。这个功能应该对UE人员来说价值比较大，可以了解访问者也页面之间的交互情况。&lt;a href=&quot;http://demo.openwebanalytics.com/owa/index.php?owa_period=last_thirty_days&amp;amp;owa_document_id=3491704707&amp;amp;owa_do=base.reportDomstreams&quot;&gt;查看Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7、跟踪转化渠道：fall-off分析是网站分析的重要组成部分。即使是开源网站分析工具也是支持的。&lt;/p&gt;

&lt;p&gt;8、电子商务跟踪：与GA的方式相同， 用JS提交订单信息和商品信息，完成电子商务跟踪。&lt;/p&gt;

&lt;p&gt;9、代码异步加载：自从GA代码改为异步方式加载后，开源工具也纷纷相仿，OWA也是采用异步的方式加载跟踪代码。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、OWA的安装&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1、系统要求&lt;/p&gt;

&lt;p&gt;服务器操作系统：Unix和Windows（最近才支持的Windows系统，官方说法是对Windows测试不足。）&lt;/p&gt;

&lt;p&gt;php5.2以上&lt;/p&gt;

&lt;p&gt;MySQL4.1以上&lt;/p&gt;

&lt;p&gt;2、安装流程&lt;/p&gt;

&lt;p&gt;（1）&lt;a href=&quot;http://wiki.openwebanalytics.com/index.php?title=Download&quot;&gt;下载最新版的OWA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;（2）新建一个OWA用的的MySQL数据库，记住数据库的地址，用户名等信息。&lt;/p&gt;

&lt;p&gt;（3）将下载好的OWA上传到服务器上&lt;/p&gt;

&lt;p&gt;（4）访问OWA所在路径。比如，你的网站是www.mysite.com，你将OWA放在了根目录下，则请访问www.mysite.com/owa。&lt;/p&gt;

&lt;p&gt;（5）进入安装向导，填写相关信息，刚才新建的数据库相关信息，OWA的超级管理员账户密码等。&lt;/p&gt;

&lt;p&gt;（6）安装完成。&lt;/p&gt;

&lt;p&gt;以上就是关于OWA的基本介绍及安装流程，如果关于OWA您还有其他的问题，欢迎给我留言~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>域设置-Google网站优化工具容易被忽视的一个设置</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/02/12/e59f9fe8aebee7bdae-googlee7bd91e7ab99e4bc98e58c96e5b7a5e585b7e5aeb9e69893e8a2abe5bfbde8a786e79a84e4b880e4b8aae8aebee7bdae"/>
   <updated>2012-02-12T10:35:56+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2012/02/12/e59f9fe8aebee7bdae-googlee7bd91e7ab99e4bc98e58c96e5b7a5e585b7e5aeb9e69893e8a2abe5bfbde8a786e79a84e4b880e4b8aae8aebee7bdae</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.google.com/analytics/siteopt&quot;&gt;Google网站优化工具&lt;/a&gt;是Google提供一个免费的网站测试工具。使用这个工具可以方便的进行A/B Test（通过重定向）和多变量测试（通过动态输出内容）。Google网站优化工具主要包含三段脚本，控制脚本、跟踪脚本和转化脚本。其中跟踪脚本和转化脚本其实就是GA的跟踪代码。&lt;/p&gt;

&lt;p&gt;既然是GA的跟踪代码就需要注意域哈希的设置，但是，在Google网站优化工具给出的默认代码中，一般都不包括域哈希的设置（貌似也没有相关说明）。&lt;/p&gt;

&lt;p&gt;那么，如果网站原来已经使用了GA进行跟踪并且对域设置进行了一些操作，比如说指定了主域，而GWO中则没有指定主域，会出现什么状况呢？&lt;/p&gt;

&lt;p&gt;考虑下面的情景：&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;你在网站的首页上进行A/B Test，网站上使用了GA跟踪，并且使用setDomainName指定了主域(.XXX.com)。而GWO的跟踪代码使用的是系统给出的默认代码，没有指定主域。GA在GWO的代码前面。&lt;/p&gt;

&lt;p&gt;一个访问者Landing到首页上，首先运行GA代码，将访问信息写入cookie，再运行GWO，由于两组代码使用的cookie相同，同时域哈希值不同~GWO会重新写入一次cookie。这时看不到太多的异常，因为，只会表现为GWO的新访比例高~而我们又不能查看GWO的新访。访问者接着点击网站的其他页面，其他的页面上只有指定了域的GA代码，同样需要进行域哈希值的比对，由于域哈希值不一致，GA会重写所有的cookie，将这个页面作为Landing page，然后这是一次直接访问。至此，一次PV为2的访问由于域哈希值的变化成为2次。如果访问者再回到首页，由于域哈希的不一致，则还会被认为是Direct的新访。&lt;/p&gt;

&lt;p&gt;如果访客不是Landing在首页上，那么，访客cookie中的域哈希值为GA的域哈希，但是，只要接触到GWO的代码，域哈希值变化，仍然会被认为是Direct处理。&lt;/p&gt;

&lt;p&gt;GWO在GA的前面时的表现会略有不同。&lt;/p&gt;

&lt;p&gt;综上，由于域设置的不一致，会造成GA数据的异常，会表现为访问量激增、交互下降，新访激增，大部分转化被归属为直接访问。&lt;/p&gt;

&lt;p&gt;其实，这种域设置不一致造成的GA数据异常，不仅仅出现在按照默认方式部署GWO的情况下，只要页面使用两套GA代码都有可能出现。&lt;/p&gt;

&lt;p&gt;这个问题的解决其实很简单，就是保证域设置的一致，比如，网站上使用的GA指定了主域，则GWO也应对应指定主域，如果GA关闭了域哈希，则GWO也应关闭域哈希。毕竟，GWO的跟踪脚本和转化脚本其实就是GA的代码而已。&lt;/p&gt;

&lt;p&gt;好了，我的这个问题就介绍到这里，如果您有关于GWO或者GA的域哈希值的任何问题，欢迎给我留言~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[译文]网站分析业的诞生</title>
   <link href="http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/11/13/e8af91e69687efbc9ae7bd91e7ab99e58886e69e90e4b89ae79a84e8af9ee7949f"/>
   <updated>2011-11-13T15:31:16+08:00</updated>
   <id>http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/11/13/e8af91e69687efbc9ae7bd91e7ab99e58886e69e90e4b89ae79a84e8af9ee7949f</id>
   <content type="html">&lt;p&gt;Cloga：这是UBC的网站分析课程中一部分内容，用两个人的对话浓缩了网站分析业的产生历史和相关技术产生的背景。强烈推荐大家读一下。&lt;/p&gt;

&lt;p&gt;从前（1993）在一个大公司有一个IT男，他听说了万维网就下载了一个服务器来玩玩。我们就叫他阿呆吧。&lt;/p&gt;

&lt;p&gt;阿呆把这个网站服务器放在一台老式的386电脑上，在上面摆弄了一些HTML并且连在了公司的网络上，他把这台电脑放在了桌子底下。一天，阿呆向他的老板展示它的这一成果，他的老板说：“这确实很棒。但是你的狗的照片应该拿掉。为什么你不扫描一些年报放在上面？”&lt;/p&gt;

&lt;p&gt;几个月以后(1995)，这个公司的一个营销男听说了万维网并且看到了一些竞争对手的网站。他想如果他的公司有一个网站的话那该多酷了。我们叫他阿瓜。&lt;/p&gt;

&lt;p&gt;阿瓜来到了IT部门找这种网站的材料，阿呆告诉他公司在18个月前就有网站了。阿瓜很震惊，感到受到了羞辱。怎么可以这样？怎么可以在没有通知营销部门前这样做？&lt;/p&gt;

&lt;p&gt;“这不是IT部门的职责！”他吼道。“这是在营销！这是在与世界进行交流，这是我的职责！”于是，阿瓜控制了他新发现的玩具，并且洋洋自得了三天。在这段时间之后，他认识到如果想让手册和半导体的混合体运转正常的话，他需要与阿呆一同协作。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;在打破了IT与营销之间不安的平静之后，他们竟然努力想要理解对方的语言，阿瓜问阿呆有没有什么方法了解网站上在发生什么，这段对话在现实世界中用了10年（Cloga：这段对话就是网站分析业发展的缩影）。&lt;/p&gt;

&lt;p&gt;“发生了什么？”阿呆问。&lt;/p&gt;

&lt;p&gt;“嗯。关于网站上发生了什么我们有哪些信息？”&lt;/p&gt;

&lt;p&gt;“哦”阿呆说，“你想要知道什么？”&lt;/p&gt;

&lt;p&gt;“你能告诉我什么？”&lt;/p&gt;

&lt;p&gt;“你需要什么？”&lt;/p&gt;

&lt;p&gt;“你有什么？”&lt;/p&gt;

&lt;p&gt;“嗯…”阿呆思索着，“我们有性能监测系统帮助我们规划可用性、吞吐能力和容量。”阿瓜怀疑阿呆是不是切换到了另一种语言，在说出事实还是只是想让阿瓜走开。&lt;/p&gt;

&lt;p&gt;阿瓜脸上的表情足以让阿呆动容，他解释道：“我们跟踪了我们服务了多少位和字节，以便知道我们的机器和我们的网络连接能否胜任。”&lt;/p&gt;

&lt;p&gt;阿瓜的眼睛里什么也没有闪现（依旧没有听懂），阿呆继续说，“每秒钟我们只能为那么多人提供那么多的页面。如果网站一次来了太多的人，那么，网站的任务和你的潜在客户就会收到错误信息。因此我们要跟踪我们的容量。”&lt;/p&gt;

&lt;p&gt;“哦，我明白了。但是，这能告诉我有多少人来到了我们的网站或者他们看了什么吗？”&lt;/p&gt;

&lt;p&gt;“是的，我们有服务器日志。”&lt;/p&gt;

&lt;p&gt;“很好…什么是服务器日志？”阿呆解释道每个事务系统都保留有一个事物的日志，因此，如果有重大的错误的话，将会保留上一次良好事物的记录。“日志文件记录了出去的每个页面，在什么时间，有多少字节，以及发送到什么IP地址。”&lt;/p&gt;

&lt;p&gt;“那么我们知道谁在什么时间看了什么！”阿瓜说。&lt;/p&gt;

&lt;p&gt;“差不多。”&lt;/p&gt;

&lt;p&gt;阿瓜抬起了头。“为什么只是差不多？”&lt;/p&gt;

&lt;p&gt;“IP地址可以是动态的。这意味着今天和明天可能会不同。事实上，在两个页面请求间也可能变化。反过来，许多人可能来自同一个IP地址，如果它们通过同一个公司网关的话。网关汇集所有进出公司的流量，以保证内部IP地址的安全。”&lt;/p&gt;

&lt;p&gt;“但是”阿瓜说道，寻找一线希望，“至少我们知道每一个人看了多少页面，对吧？我们知道那个页面最受欢迎！”&lt;/p&gt;

&lt;p&gt;“差不多。”&lt;/p&gt;

&lt;p&gt;阿瓜眯起了眼睛。“为什么只是差不多？”&lt;/p&gt;

&lt;p&gt;“嗯，页面存储在这里与网站访问者之间的缓存文件中，我们通常不知道一个访问者看了同一个页面两次还是其他人通过临时缓存存储看了那些页面。”&lt;/p&gt;

&lt;p&gt;“临时…缓存…存储…”&lt;/p&gt;

&lt;p&gt;阿呆毫不掩饰的看一下表。“是的，就是那样。”&lt;/p&gt;

&lt;p&gt;“所以，我们其实不知道那些页面被看了，我们甚至也不能说人们是不是从首页到了产品页。”&lt;/p&gt;

&lt;p&gt;“差不多。”&lt;/p&gt;

&lt;p&gt;“我们差不多可以？”&lt;/p&gt;

&lt;p&gt;“在一些情况下是可以的。我们开始使用URL标记，这有点帮助。”&lt;/p&gt;

&lt;p&gt;“好的”阿瓜说，交叉着双手，不希望被这些技术术语打败。“告诉我这是如何工作的。”&lt;/p&gt;

&lt;p&gt;阿呆解释道，发送首页时，为首页上的链接添加一个惟一系列号——每个访问者惟一。当访问者点击这个链接，服务器日志记录到这个系列号然后发送请求的页面，将这个系列号附加到随后的所有页面的连接上。&lt;/p&gt;

&lt;p&gt;阿瓜证明着他在认真的听。“因此，你查看服务器日志，看一下同一个人看哪些页面，不论什么IP地址？”&lt;/p&gt;

&lt;p&gt;“是的”阿呆说，看着阿瓜就像他不是那个曾经的典型的营销人。&lt;/p&gt;

&lt;p&gt;“因此，现在我们知道同一个人是不是经常回来，以及知道说服他们买我们的东西需要多少次访问！”&lt;/p&gt;

&lt;p&gt;“基本上不行。如果访问者点击一个Banner广告回来，或者在浏览器中直接输入域名，或者其他我们没有提供系列号的链接点击回来，我们不能认出他是谁。”&lt;/p&gt;

&lt;p&gt;“所以我们就没辙了。”&lt;/p&gt;

&lt;p&gt;“所以我们想到了cookies。”&lt;/p&gt;

&lt;p&gt;“哦，就连我都知道cookies。”&lt;/p&gt;

&lt;p&gt;“很好，那我不需要解释了。”&lt;/p&gt;

&lt;p&gt;“关于cookies我有一件事不明白…”&lt;/p&gt;

&lt;p&gt;“是什么？”&lt;/p&gt;

&lt;p&gt;“他们如何工作？”&lt;/p&gt;

&lt;p&gt;阿呆想到他的这个玩具网站项目有一天将成为大家伙，以及他需要阿瓜的友好和预算才能做到这一点。他轻轻的叹了一口气，继续说道。“当上网冲浪的人第一次来到网站，他请求一个具体的页面。他是未知的。因此，提供这个页面的服务器在访问者硬件设备上设置了一个cookie。Cookie是一个小的文本文件，可能包含一些实际的信息，但是，通常只是保留一些惟一的标识符。只有设置它的服务器可以读取，但是，当访问者点击下一个链接时，cookie信息会与页面请求一起传回。如果cookie是持久的，那么，即使访问者一个月没有查看网站，他的IP地址改变了几十次，它仍会起作用。”&lt;/p&gt;

&lt;p&gt;“所以现在我们已经有了！”&lt;/p&gt;

&lt;p&gt;“只是差不多。”&lt;/p&gt;

&lt;p&gt;“你的意思是我读到的那些文章，人们如何可以将它们删除？”&lt;/p&gt;

&lt;p&gt;“是的，还是缓存的问题。”&lt;/p&gt;

&lt;p&gt;阿瓜决定坚持下去。“好吧，那是什么？”&lt;/p&gt;

&lt;p&gt;阿呆开始喜欢自己了。自从他上次给高级IT经理讲蠕虫和木马之后，就没有遇到感兴趣的听众了。“创建了超文本传输协议（HTTP）后，人们不希望在互联网上保存任何无关的流量。因此，人们在硬件设备创建了缓存文件。”&lt;/p&gt;

&lt;p&gt;“cookie就存放在那吗？”&lt;/p&gt;

&lt;p&gt;“不，是在另外一个地方。先不谈那个。当你想要看一个网页时，服务器将页面封包，并且通过网络提供这些包。你的浏览器在你的缓存文件中存储他们，直到可以解释他们。因此，一旦所有的包都进入了缓存，你就可以看到整个页面了。现在，例如说，你看了第二个页面，并且点击了后退按钮。浏览器首先在缓存文件中查找，而不是通过网路获取一个全新的副本。”&lt;/p&gt;

&lt;p&gt;“所以，这就是为什么当单击后退按钮时页面立即出现。”阿瓜从来没有遇到过竟然可以这样清楚解释事情的IT男。&lt;/p&gt;

&lt;p&gt;“完全正确。但是，服务器不知道你又看了一次首页，因为，没有收到你的请求——因此，不会记录。更糟糕的是，如果你使用AOL，然后可能另一个AOL用户也从AOL缓存文件请求了同一个页面而不是服务器。”&lt;/p&gt;

&lt;p&gt;“因此，比我们认为的多许多的人看了我们的网站…我们其实并不能知道人们如何在页面间移动。但是，日志文件记录了我从首页去了页面A，然后是页面B，但是，如果页面A和页面B之间没有链接，那么你就知道我回到了首页，对吗？”&lt;/p&gt;

&lt;p&gt;“这只是假设。你可能通过搜索引擎发现页面B，其他人可能通过Email给你一个连接。你可能在出版物中读到这个链接或者从另一个之前查看了AOL的冲浪者的页面链接点击过来，服务器日志根本没有记录到你看了这个页面。”&lt;/p&gt;

&lt;p&gt;“我们怎样才能解决所有问题？”&lt;/p&gt;

&lt;p&gt;“一个不可见的像素！”&lt;/p&gt;

&lt;p&gt;“不可见的像素，我跺三下脚，在我的左肩膀上撒盐（Cloga：貌似是祈求好运的意思）？”&lt;/p&gt;

&lt;p&gt;阿呆现在完全进入了教学模式，没有理会阿瓜的幽默企图。“你可以嵌入一个设置为在每个页面上都‘不缓存’的，1×1透明的像素。这样，就可以在页面每次被访问时被记录。”&lt;/p&gt;

&lt;p&gt;“为什么不是‘不缓存’整个网站？”&lt;/p&gt;

&lt;p&gt;“因为你的用户会反对。当他们每次点击后退按钮时，获得每一页的时间会太长，他们会认为你的网站很愚蠢。”&lt;/p&gt;

&lt;p&gt;“但是他们实际上不介意这个像素吗？”&lt;/p&gt;

&lt;p&gt;“他们甚至不知道它在那，它是透明的，因此，他们看不到它，因为它是1×1大小的像素，下载不需要时间，我们就能记录这个事件。”&lt;/p&gt;

&lt;p&gt;“因此，我们现在有日志文件和cookies，”阿瓜说，试着将所有的东西联系在一起，“我们将在电子商务系统的购物车及其他程序例如产品配置中发生的所有数据都捕捉到。那么，这些数据能被整合到哪里，以便我们可以利用他们？”&lt;/p&gt;

&lt;p&gt;“这个问题要比看起来要难得多。完成数据清理、标准化，让它们准备好被细致观察，是非常繁重的工作。这就是创造嗅包器的原因。”&lt;/p&gt;

&lt;p&gt;“你告诉我什么是嗅包器，我来买午餐。”阿瓜提议。阿呆在阿瓜放下指向门口的手之前就走出了门，他们继续他们的话题。&lt;/p&gt;

&lt;p&gt;“并不是所有你想跟踪的信息服务器都知道。”阿呆边说边把他的食盘放到了食堂窗口。“如果我在表单中输入了email地址，并且点击了提交按钮，我的地址在一个数据包中返回到服务器，并且被预订应用程序读取，而不是服务器。因此，即使一些简单的事——匹配email地址这个网上冲浪的小插曲——也很棘手。因此，他们想出了这种方式（嗅包器）来观察——和记录——所有从服务器出来和从冲浪者那里返回的数据包。”&lt;/p&gt;

&lt;p&gt;“那么，现在有一个地方捕获了与这个页面相关的所有的偏好信息、颜色选择、姓名和地址信息。因此，现在我们能看一下每个人在网站上做了什么！”&lt;/p&gt;

&lt;p&gt;“事实上不是这样——数据量太大了。如果你存储了进入的每个数据包，你需要的磁盘空间比Google更多。”&lt;/p&gt;

&lt;p&gt;“于是，他们想出了——什么？”&lt;/p&gt;

&lt;p&gt;“页面标记。”&lt;/p&gt;

&lt;p&gt;“好的，”阿瓜边说边举起了他的三明治。“我开动了。”&lt;/p&gt;

&lt;p&gt;“你提供了一个正常的页面，然后你在页面底部放了一个Javascript标签。”&lt;/p&gt;

&lt;p&gt;“Javascript是页面加载时运行的小程序？”&lt;/p&gt;

&lt;p&gt;“恭喜你答对了！”&lt;/p&gt;

&lt;p&gt;“那这个标签能干什么？”&lt;/p&gt;

&lt;p&gt;“它是一个脚本，它能做你想做的任何东西——在浏览器中。因此，它不是间谍软件或其他类似的东西。它只是查看并收集数据。”&lt;/p&gt;

&lt;p&gt;“就像？”&lt;/p&gt;

&lt;p&gt;“嗯，例如，如果你预定了一个酒店，你告诉网站你想要在今天在这个酒店为这么多人预订一个房间，并且你有一个促销码，然后，Javascript能确保这些信息都被捕捉到了。因此，你能知道所有的信息，而不需要从千兆字节的数据包中筛选或者试着合并日志文件与预订系统的数据。”&lt;/p&gt;

&lt;p&gt;“但是，如果我只是部分完成了表单，并且没有点击提交按钮，那么我怎么能知道表单设计的问题呢？”&lt;/p&gt;

&lt;p&gt;“这需要更多的技术，我称之为客户端监视。”&lt;/p&gt;

&lt;p&gt;“听起来有点邪恶。”&lt;/p&gt;

&lt;p&gt;“落入坏人之手才会这样。客户端跟踪让我可以观察你所做的每件事。我可以记录你的鼠标运动，观察键盘按键动作，看一下你在搜索时如果错拼的话是否按了后退键…”&lt;/p&gt;

&lt;p&gt;“但是页面设计者需要实时的，实际的使用数据。实际上，我们知道人们如何使用每个页面！但是，是不是最终也会和数据包嗅探一样，有太多的数据需要手机。”&lt;/p&gt;

&lt;p&gt;“是的，这也是为什么你只能在一些特定想要优化的页面使用这种技术。”&lt;/p&gt;

&lt;p&gt;“哼。那这些工具中哪一个是网站应该使用的最佳工具？”&lt;/p&gt;

&lt;p&gt;“全部。”&lt;/p&gt;

&lt;p&gt;“全部？”&lt;/p&gt;

&lt;p&gt;“假设我们有能力可以负担的起，有能力实施它们，可以处理所有的结果，并且使用数据来改善网站，那么，你最好的选择是用以上工具的健康组合来获得网站上正在发生什么的清晰图像。”&lt;/p&gt;

&lt;p&gt;“那么，使用所有数据的最佳做法是什么？”&lt;/p&gt;

&lt;p&gt;“你的意思是，你知道我们可以测量什么，你想要指出我们应该测量什么？”&lt;/p&gt;

&lt;p&gt;“当然。”&lt;/p&gt;

&lt;p&gt;“对于这个，你需要和阿德聊一下。你可能要请他吃晚餐。”&lt;/p&gt;

&lt;p&gt;_Content originally contributed by _Jim Sterne, eMetrics Summit, June 2005.&lt;/p&gt;

&lt;p&gt;_Edited by _Ned Kumar (2010)&lt;/p&gt;

&lt;p&gt;Content © 2010 Web Analytics Association&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[译文]GA中的流可视化路径分析</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/10/24/e8af91e69687efbc9agae4b8ade79a84e6b581e58fafe8a786e58c96e8b7afe5be84e58886e69e90"/>
   <updated>2011-10-24T09:31:14+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/10/24/e8af91e69687efbc9agae4b8ade79a84e6b581e58fafe8a786e58c96e8b7afe5be84e58886e69e90</id>
   <content type="html">&lt;p&gt;Google最近宣布了GA的一个新功能：流可视化（Flow Visualization）。访问流报告、导航流报告和目标流报告，是分析人们如何在内容间浏览的一种新方式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-11.53.25-AM.png&quot; alt=&quot;GA流可视化的节点详情&quot;&gt;&lt;/p&gt;

&lt;p&gt;GA中的流可视化报告&lt;/p&gt;

&lt;p&gt;长时间以来，GA中没有真正的点击路径分析。当然，我们有导航摘要和进入路径报告，但是这些都非常有限。最近的设计就是如此。绝大多数点击路径报告，无论什么分析工具，都几乎没有价值。他们通常显示9845条转化路径。这会有帮助吗？&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;新的流可视化报告希望改善这个问题，使我们可以更简单的理解访问者的行为，理解访问者如何在内容间移动。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;节点：流可视化的基础&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;所有的流可视化报告都是用节点构建的。节点是一个页面组。节点是自动由一个智能算法创建的，这是一件很酷的事。例如，节点将自动将仅是一些查询参数不同的页面分为一组。&lt;/p&gt;

&lt;p&gt;不用担心，你能创建自己的节点，一会儿我将介绍如何这样做。&lt;/p&gt;

&lt;p&gt;新报告将显示访问者从节点流向了哪里，以及人们从哪里退出了流（即离开了网站）。这里重要的是可视化，并且我们有能力操纵可视化。因此，如果你在分析一个具体的问题或情境，那么你可以很方便下钻到你希望的情境。但是可视化也支持定制分析。这些新的报告在Home&amp;gt;智能&amp;gt;流可视化部分。&lt;/p&gt;

&lt;p&gt;接下来是访问流报告。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;访问流报告&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;访问流报告是原来点击路径报告的完美升级。不仅仅能查看从一个页面到另一个页面的点击，我们还可以看到访问者在节点间的移动。“故事”开始于可视化的左边，在这里你可以选择查看一个最初的细分，比如广告活动、流量来源、国家和地区等。&lt;/p&gt;

&lt;p&gt;这太神奇了！现在你可以很容易的根据不同的数据维度细分进入网站的流量！下次再有人问你哪个广告活动的流量做了什么，你就可以提供一个详尽的流信息。&lt;/p&gt;

&lt;p&gt;蓝色的连接代表节点间移动的访问。&lt;/p&gt;

&lt;p&gt;红色的连接代表某个节点的退出。&lt;/p&gt;

&lt;p&gt;理解起来多么容易！简单即是美。&lt;/p&gt;

&lt;p&gt;如果说你希望关注数据的特定细分，比如德州。从下拉菜单的维度中选择区域。然后从左侧点击德州这个节点，并且选择”突出显示来自这里的流量”。来自德州的流量将显示的深一些。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-9.28.34-AM.jpg&quot; alt=&quot;在流可视化报告中查看数据特定维度的路径&quot;&gt;&lt;/p&gt;

&lt;p&gt;我知道有太多路径需要吸收。如果你有点晕，那么可能我们应该减少看到的路径。使用顶部的“连接”滑块来查看更多或更少的路径，以便简化分析。&lt;/p&gt;

&lt;p&gt;点击路径报告长久以来一直被人们诟病，是因为将海量的数据塞进了确实相当蹩脚的界面中。Google想要用新的可视化、维度下拉菜单和联系滑块解决这个问题。你可以控制查看的数据，以便让分析有的放矢。&lt;/p&gt;

&lt;p&gt;用这个界面你可以看到人们从哪里来，跟着他们到不同的页面并且评估跳出率，看一下在着陆页之后他们看了什么内容。&lt;/p&gt;

&lt;p&gt;交互实在太棒了。&lt;/p&gt;

&lt;p&gt;[顺便提一句，当你看到一个拳头时，你可以拖拽到可视化的右侧。你也可以通过点击最右边的箭头添加更多的步骤。]&lt;/p&gt;

&lt;p&gt;如果你想要详细的了解某个节点。只需要将鼠标停在节点的上面，你将看到这些：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-9.45.01-AM.png&quot; alt=&quot;&quot;&gt;GA流可视化的节点详情&lt;/p&gt;

&lt;p&gt;我们了解的第一件事是这个节点有多少页面。记住，这个节点最初是由算法创建的。我们也将看到有多少访问退出以及有多少访问继续。非常有用。&lt;/p&gt;

&lt;p&gt;现在，可能我想要更多的了解这个页面。我可以点击这个节点并且选择“探索进入这里的流量”。&lt;/p&gt;

&lt;p&gt;我们被带到了下一个报告。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;导航流报告&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;导航流报告与GA中原有的导航路径类似。现在可以看到你所选择的节点前后的节点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-9.48.33-AM.jpg&quot; alt=&quot;Google Analytics Flow Navigation Report&quot;&gt;&lt;/p&gt;

&lt;p&gt;GA导航流报告&lt;/p&gt;

&lt;p&gt;让我们谈谈如何创建和修改节点。&lt;/p&gt;

&lt;p&gt;点击节点顶部的小齿轮。你可以使用正则式或者其他的基础模式来将页面组设置为节点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-7.30.31-AM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;例如，如果我是一个内容发布商，我可能想要将所有体育页面作为体育节点，就像这样：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-7.33.12-AM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;名称字段是将在报告中显示的名称，这很不错，可读性也不错:)&lt;/p&gt;

&lt;p&gt;这里的价值是你可以将内容分组，以便以自己的方式分析。&lt;/p&gt;

&lt;p&gt;电子商务人士想要理解进入产品页面的流量流？将他们作为一个节点。&lt;/p&gt;

&lt;p&gt;网站编辑想要看一下人们在所有文章的最后一页后去了哪里？将这些页面汇总为一个节点。&lt;/p&gt;

&lt;p&gt;点击流可视化的另一个非常酷的功能是我们有能力细分整个的图表。用报告顶部的下拉菜单来应用一个细分，比如新访问，回访等等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-10.17.53-AM.png&quot; alt=&quot;Apply a segment to a Flow Visualization&quot;&gt;&lt;/p&gt;

&lt;p&gt;为流可视化应用一个细分&lt;/p&gt;

&lt;p&gt;这些细分与维度下拉菜单的结合，我可以根据网站上的不同动作切片和切块不同行为组。实在是酷毙了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;目标流分析&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;除了基本的数据以外，目标流数据可以为你提供转化路径的见解。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-11.20.07-AM.jpg&quot;&gt;&lt;img src=&quot;http://cutroni.com/blog/wp-content/uploads/Screen-Shot-2011-10-19-at-11.20.07-AM-300x111.jpg&quot; alt=&quot;Goal Flow report in Google Analytics.&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GA中的目标流数据（点击放大）&lt;/p&gt;

&lt;p&gt;同样，你可以选择数据的一个维度，这里我选择的媒介，并且看一下流量在渠道之间如何移动。我希望你已经设置了一个渠道！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;现在目标流数据只在基于URL的目标和渠道有效。稍后将会支持事件。&lt;/p&gt;

&lt;p&gt;注意到那些环了吗？那些环代表“回流”到其他步骤的流量。我想这是对现存的目标渠道报告的巨大改进。现在更容易看到渠道（退出）和行为（回流）上的缺陷。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这只是个开始？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;希望这些内容可以告诉你流可视化报告是如何工作的以及你可以怎样操作他们。这里的关键是你可以细分数据并且分离出你想要检查的行为。&lt;/p&gt;

&lt;p&gt;我曾经说过，我认为这将对GA产生比大绝多数人所认为的更大的影响。确实，这些报告很诱人。我们将开始进行更多的路径分析。&lt;/p&gt;

&lt;p&gt;但是，这种数据可视化是关键的改变。我相信我们将看到Google将包含更多的有创造性的数据可视化来帮助分析。这才是真正激动人心的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;作者简介：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cutroni.com/blog/about-2/&quot;&gt;Justin Cutroni&lt;/a&gt;，&lt;a href=&quot;http://www.cardinalpath.com/&quot;&gt;Cardinal Path&lt;/a&gt;（GA Premium的合作伙伴）的数字智能（Digital Intelligence）总监，著有《&lt;a href=&quot;http://www.amazon.com/gp/product/0596158009/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=googlcom05-20&amp;amp;linkCode=as2&amp;amp;camp=217145&amp;amp;creativeASIN=0596158009&quot;&gt;Google Analytics&lt;/a&gt;》和《&lt;a href=&quot;http://www.amazon.com/Performance-Marketing-Google-Analytics-Strategies/dp/0470578319/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1285991804&amp;amp;sr=1-1&quot;&gt;Performance Marketing with Google Analytics: Strategies and Techniques for Maximizing Online ROI&lt;/a&gt;》&lt;/p&gt;

&lt;p&gt;原文链接：&lt;a href=&quot;http://cutroni.com/blog/2011/10/19/path-analysis-in-google-analytics-with-flow-visualization/&quot;&gt;http://cutroni.com/blog/2011/10/19/path-analysis-in-google-analytics-with-flow-visualization/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网站分析与控制实验</title>
   <link href="http://cloga.github.io/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7/2011/10/23/e7bd91e7ab99e58886e69e90e4b88ee68ea7e588b6e5ae9ee9aa8c"/>
   <updated>2011-10-23T18:29:05+08:00</updated>
   <id>http://cloga.github.io/%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7/2011/10/23/e7bd91e7ab99e58886e69e90e4b88ee68ea7e588b6e5ae9ee9aa8c</id>
   <content type="html">&lt;p&gt;优秀的网站分析师必然同时也是优秀的控制实验学家。网站分析的目的不仅仅是产生一些包含KPI的报告，更重要的是通过对访问者行为数据的分析，找到影响网站效果的因素，并通过实验推进网站效果的改善。&lt;/p&gt;

&lt;p&gt;从本质上来讲，网站分析属于行为科学一部分，属于在网络这个特殊介质中的行为科学。与其他行为科学类似，网站分析通过研究访问者在一定情境中的行为，进而找到影响访问者行为的环境因素及心理因素。&lt;/p&gt;

&lt;p&gt;我对网站分析的工作流程是这样：根据网站的目标，部署相应的网站分析工具，收集需要的数据，根据收集的数据找到转化流程中的坏点，并根据这些坏点，给出改进方案，通过控制实验，评估改进方案的效果，如此循环往复。&lt;/p&gt;

&lt;p&gt;下面简单介绍一下控制实验（简称实验）的相关概念及方法论。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;心理学对实验的定义：实验是指有目的地控制一定的条件或创设一定的情境，以引起被试的某些心理活动（行为）进行研究的一种方法。&lt;/p&gt;

&lt;p&gt;这里的控制的条件就是自变量，而引起的被试的行为则是指因变量。在网站分析中，自变量就是不同的页面版本，不同的Landing page，不同的广告创意等等，而因变量就是我们的转化目标，可以是转化率，也可以是交互度等等。&lt;/p&gt;

&lt;p&gt;除了因变量与自变量之外，还有这样一类变量，它们不是我们研究的对象，但是，它们却可能对因变量的变化产生影响，这类变量在实验过程中我们需要进行控制，以便保证因变量的变化确实是由于自变量的变化所引起，这类变量称为控制变量。在网站分析中，这类变量很多见。比如，有一些“A/B Test”的方式是，在前一个时间段采用A版本的页面，在后一个时间段采用B版本的页面，经过两个时间的对比，证明B版本的页面的转化率要高于A版本的页面。对于这个实验（准确的来说，这不是一个实验），由于没有控制时间这个控制变量，后一个时间段的转化率比前一个时间段的转化率，不能简单的归因于B页面比A页面效果更好，两个时间段访问者群体特征的差异，市场竞争环境的变化，线下的品牌营销活动等等都可能使两个时间段的转化率之间存在差异。&lt;/p&gt;

&lt;p&gt;随机化是控制控制变量简单而有效的方法，对于互联网这个媒介，我们可以用一些简单的方法对访问者进行随机分配，从而比较不同页面或创意等的效果。SEM投放过程中的广告轮显就是随机化的典型例子，另外，Google Website Optimizer也是采用随机化的方式将访问者平均分配到不同的实验条件，来比较不同的实验版本的效果。&lt;/p&gt;

&lt;p&gt;对于实验假设通常是无法证实只能证伪，Avinash曾经说过网络的一个优势是我们可以更快的失败。对于网络来说，进行随机化和数据处理是非常方便的，对于线下实验我们可能需要进行精心的实验设计，细致的挑选被试，花费一定的资金和时间来寻找被试，还需要花费精力进行实验完成后的数据录入和分析，其中的任意一个环节出现差错都有可能造成实验的失败，选择了本身有偏的样本，数据录入清理上的失误等等。而对于在网络上进行的实验，则要方便许多，海量的访问者保证了样本量的充足，网络技术的发展和网络环境本身，保证了随机化和控制条件相对容易，应用GWO这样的工具本身也可以自动帮我们完成假设检验的过程。&lt;/p&gt;

&lt;p&gt;接下来简单聊一下GWO的工作原理（这里主要以A/B Test为例，多变量测试略有不同，但其原理是一致的）。&lt;/p&gt;

&lt;p&gt;GWO的是一个完善的网络实验工具。实施之后，它主要帮你做下面几件事：&lt;/p&gt;

&lt;p&gt;1、  被试选取和随机分配&lt;/p&gt;

&lt;p&gt;2、  记录实验组和控制组的实验结果&lt;/p&gt;

&lt;p&gt;3、  给出实验结果的解释&lt;/p&gt;

&lt;p&gt;GWO通过三段脚本来完成前两项工作：&lt;/p&gt;

&lt;p&gt;1、控制脚本，放置在控制页面（即原来的页面，或者说A页面）上，用来给访问者分为控制组和实验组、打上标签并将实验组跳转到实验页面（替代页面或者说B页面）上，为保证实验公平性，每个访问者在其实验周期中只能看到一种实验条件，并且在其实验周期中发生的转化只会被记录一次，因为，本质上来说，A/B Test是一个被试间实验（即用同一总体中的两个相等的样本，在不同的条件进行的实验；与被试内实验相对，被试内实验是使用同一种被试来比较不同实验条件下行为。），其基本的假设是，一个访问者，发生了转化后，再次发生转化的可能性会加大，因此，在访问者的生命周期中无论发生几次转化都只记录一次，以免由于两个组之间由于这类回访者的数量不同而使实验结果有偏。另外，如果一个访问者在实验周期内，能看到不同的实验条件的话，那么对于转化的归属会比较困难，因此，一个访问者在一个实验周期中仅能看到一种实验条件。&lt;/p&gt;

&lt;p&gt;2、跟踪脚本，放着在控制页面及实验页面上，用来对实验条件计数。&lt;/p&gt;

&lt;p&gt;3、转化脚本，放着在转化页面上，用来对转化进行计数。&lt;/p&gt;

&lt;p&gt;其实，GWO的跟踪脚本和转化就是GA代码，或者我们这样来理解， GWO与GA的关系，GWO就是加了一段控制脚本的一个单独的GA账户，通过观察不同的实验条件页面到转化页面的转化率（这里是将不同实验的条件作为必要步骤，并且转化是可以跨访问发生的，计数条件也是Unique Visitor）来比较不同实验条件的效果。&lt;/p&gt;

&lt;p&gt;最后，我们再来看一下实验的流程。&lt;/p&gt;

&lt;p&gt;访问者来到我们的控制页面A页面，GWO控制脚本的首先判断，访问者是否存在实验cookie，如果存在则让访问者仍然看到之前的实验条件，如果不存在则随机判断访问者该归属于哪个实验条件并写入cookie，对于属于控制组的访问者，不做进行跳转，控制页面上的跟踪代码计数，如果属于实验组的访问者，则跳转到对应的实验页面（A/B Test可以比较多个实验条件，只不过是单变量），实验页面的跟踪代码计数。&lt;/p&gt;

&lt;p&gt;如果某个访问者到达了转化页面，同样首先需要判断其之前是否看到过某个实验条件（通过cookie），如果看过某个实验条件（控制页面或者某个实验页面），之前未发生转化，则该实验条件的转化数加一，否则将忽略该次转化。&lt;/p&gt;

&lt;p&gt;让我以GWO团队的一句话结束：不要停止测试直到转化率100%。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>多渠道路径-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/08/28/e5a49ae6b8a0e98193e8b7afe5be84-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-08-28T00:43:58+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/08/28/e5a49ae6b8a0e98193e8b7afe5be84-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>utm_nooverride参数的使用</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/08/04/utm_nooverridee58f82e695b0e79a84e4bdbfe794a8"/>
   <updated>2011-08-04T23:45:33+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/08/04/utm_nooverridee58f82e695b0e79a84e4bdbfe794a8</id>
   <content type="html">&lt;p&gt;首先，我要说的是utm&lt;em&gt;nooverride参数（形式为utm&lt;/em&gt;nooverride=1）的作用。这个参数的作用不是将以后所有的转化都计入当前这个关键词（人们常见的误解），GA默认的转化归属方式是最近接触（last touch），这个参数不会改变这个原则，这个参数正确的作用是添加了这个参数的Landing page的访问，如果存在来源cookie（utmz）则会被处理为直接访问，如果没有来源cookie，则会写入本次访问的来源。&lt;/p&gt;

&lt;p&gt;这里再说明一下处理为直接访问，不是表示将utmz cookie直接重写为direct，恰恰相反，是保留原来的非直接访问来源，即将本次访问记为上一个非直接访问来源。&lt;em&gt;addIgnoredOrganic和&lt;/em&gt;addIgnoredRef方法也是使用这种处理方式。&lt;/p&gt;

&lt;p&gt;utm_nooverride参数的应用情境主要有以下三个：&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;1、PPC广告中的品牌词&lt;/p&gt;

&lt;p&gt;在PPC广告投放过程中，我们经常会遇到这样一种情况：品牌词的转化很好，而其他的通用词、产品词则转化一般，但是，当我们暂停掉看似转化不好的那些词，会发现整个账户的投放效果都受到影响。这是因为，不同的关键词作用于客户购买决策的不同阶段。人们通过通用词、竞品词、产品词了解你的品牌（购买决策的初期阶段），通过品牌词发生转化（购买决策的后期阶段）。&lt;/p&gt;

&lt;p&gt;在品牌词的URL后使用utm&lt;em&gt;nooverride参数可以将转化归属计算到上一个访问来源，如果不存在上一个访问来源，则会写入本次的访问来源，这样我们就可以还原一部分品牌词的真实来源。这里我强调了一部分，是因为有些客户需要到网站上多次访问才会最终转化，每次转化都有可能通过不同的渠道，utm&lt;/em&gt;nooverride参数仍然无法帮我们获得最初为转化带来贡献的关键词或渠道。这个遗留问题需要一些工具来支持，通过一些自定义的JS和GA的自定义变量也可以解决，不是本文的重点，有时间再和大家分享。&lt;/p&gt;

&lt;p&gt;2、Email&lt;/p&gt;

&lt;p&gt;有一些你向客户发送的Email，你希望保留客户的原始来源，最典型的例子是注册的激活邮件，如果需要邮件激活，那么，你不会希望由此造成来源cookie的重写（注意，在一个session里是不会重写的），那么，你也需要在url后添加utm_nooverride=1。保留上一个访问来源。&lt;/p&gt;

&lt;p&gt;3、第三方支付系统的Callback页面&lt;/p&gt;

&lt;p&gt;比如，支付宝支付成功后的Callback页面，你也需要在url后添加utm_nooverride=1。保留上一个访问来源。&lt;/p&gt;

&lt;p&gt;好了，如果您对utm_nooverride的作用原理或使用情境有任何问题，欢迎给我留言~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用用户脚本监测网站使用的跟踪工具</title>
   <link href="http://cloga.github.io/ga%E7%9A%84js%E6%89%A9%E5%B1%95/2011/08/03/e588a9e794a8e794a8e688b7e8849ae69cace79b91e6b58be7bd91e7ab99e4bdbfe794a8e79a84e8b79fe8b8aae5b7a5e585b7"/>
   <updated>2011-08-03T00:49:15+08:00</updated>
   <id>http://cloga.github.io/ga%E7%9A%84js%E6%89%A9%E5%B1%95/2011/08/03/e588a9e794a8e794a8e688b7e8849ae69cace79b91e6b58be7bd91e7ab99e4bdbfe794a8e79a84e8b79fe8b8aae5b7a5e585b7</id>
   <content type="html">&lt;p&gt;想了解别人的网站上使用了哪些跟踪工具吗？想了解自己的GA代码安装是否正确吗？不习惯每次都要去查看源码？这篇文章会为你提供一个简便的方案。&lt;/p&gt;

&lt;p&gt;需要的工具：
FireFox浏览器/Chrome浏览器（原生支持用户脚本）
GreaseMonkey：FireFox里面的著名油猴子插件，运行用户脚本的环境。&lt;/p&gt;

&lt;p&gt;安装流程：
首先，下载FireFox浏览器，然后点击&amp;gt;工具&amp;gt;附加插件&amp;gt;搜索GreaseMonkey，下载安装油猴子
下载我修改的老外的&lt;a href=&quot;http://www.cloga.info/statistics_detector.user.rar&quot;&gt;statistics_detector用户脚本&lt;/a&gt;，主要是添加了baidu统计、51la、cnzz、99click、有道转化跟踪和搜搜转化跟踪，这些老外都不知道什么玩意的WA和转化跟踪。解压后，将脚本拖拽到开启了油猴子的FireFox中即可。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;超级简单，只要使用开启GreaseMonkey，并安装了这个statistics_detector.user脚本的FireFox浏览器，访问你想要页面，页面加载完成后就会在右上角显示这个页面所使用的跟踪工具。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/08/QQ20110803112820.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/08/QQ20110803112820.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/08/QQ20110803110319.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/08/QQ20110803110319.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当然，这种方式不是万能呢，只有当网站按照常规方式部署代码时，才有可能监测到，将各种跟踪代码封装在其他名称的JS调用，这种方法是没法监测到的。&lt;/p&gt;

&lt;p&gt;好了，开始你的互联网探秘之旅吧~看看每个网站都安装了哪些你知道或不知道的跟踪工具。
如果您希望这个用户脚本可以增加对那些跟踪工具的监测的话，请给我留言，我也会不定期的更新这个脚本。&lt;/p&gt;

&lt;p&gt;PS：感谢这个脚本的原作者http://yoast.com/tools/seo/greasemonkey/statistics-detector/为我们提供这样好的一个脚本。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>电子商务跟踪-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/08/03/e794b5e5ad90e59586e58aa1e8b79fe8b8aa-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-08-03T00:20:25+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/08/03/e794b5e5ad90e59586e58aa1e8b79fe8b8aa-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>Cookie与GA-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/07/10/cookiee4b88ega-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-07-10T20:41:02+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/07/10/cookiee4b88ega-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>GA中的正则式-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/07/09/gae4b88ee6ada3e58899e5bc8f-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-07-09T09:42:14+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/07/09/gae4b88ee6ada3e58899e5bc8f-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>GA V5小技巧-从界面中导出超过500条记录</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/07/03/ga-v5e5b08fe68a80e5b7a7-e4bb8ee7958ce99da2e4b8ade5afbce587bae8b685e8bf87500e69da1e8aeb0e5bd95"/>
   <updated>2011-07-03T17:42:20+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/07/03/ga-v5e5b08fe68a80e5b7a7-e4bb8ee7958ce99da2e4b8ade5afbce587bae8b685e8bf87500e69da1e8aeb0e5bd95</id>
   <content type="html">&lt;p&gt;在旧版的GA中导出超过500条记录，大家应该都比较熟悉了：在报告的url后面添加limit参数指定需要导出的数据量。其实V5也提供类似的功能，或许应该说是更强大的功能。&lt;/p&gt;

&lt;p&gt;从这个功能上的对比，我们可以看到 V5版的GA在性能上也有很大的提升，在旧版的GA中，即使通过limit参数，单次能导出的数据上限是20000，而在V5版中，单次可以导出数据的上限扩展为50000。&lt;/p&gt;

&lt;p&gt;与旧版的GA修改导出数据的上限的方式一致，我们需要修改URL代表数据上限的参数。&lt;/p&gt;

&lt;p&gt;首先，进入你希望导出数据的报告，这里我使用的报告是内容&amp;gt;网站内容&amp;gt;页面，我们得到了这样的URL：https://www.google.com/analytics/web/?hl=zh_cn#report/content-pages/a18159656w36598318p36050032/&lt;/p&gt;

&lt;p&gt;这个URL没有我们需要的参数，只是标识了我们所在的位置report/content-pages/，让我们选择一下，报告表单右下角的显示行数，比如说改为25行。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;我们得到了这样一个URL：https://www.google.com/analytics/web/?hl=zh_cn#report/content-pages/a7874902w16105261p41476608/%3Fexplorer-table.rowStart%3D0%26explorer-table.rowCount%3D25/&lt;/p&gt;

&lt;p&gt;注意这个URL中的explorer-table.rowCount%3D25，这个参数就代表了当前页面中显示的数据的上限，我们可以将它改为50000&lt;/p&gt;

&lt;p&gt;https://www.google.com/analytics/web/?hl=zh_cn#report/content-pages/a7874902w16105261p41476608/%3Fexplorer-table.rowStart%3D0%26explorer-table.rowCount%3D50000/&lt;/p&gt;

&lt;p&gt;敲一下回车，页面将重新加载。这个时间会比较长，想一下，50000条数据可能有几M，比如3M，如果你是1M的宽带的话，满负载下载的速度是125K/s，这个过程需要24S。&lt;/p&gt;

&lt;p&gt;数据显示出来后，点击左上的导出标签中的csv，导出csv格式的数据。这里有一个小技巧是，导出的csv文件无法直接用excel打开，直接打开会显示为乱码。请先用记事本打开，另存一下，另存的时候，编码选择ANSI。再用excel打开就是正常的中文了。&lt;/p&gt;

&lt;p&gt;这里显示了V5版本与旧版的一个改进，通过这种方式改变的不仅是导出数据的量，界面上显示的数据上限也发生了改变，即你在界面上看到的数据量也会变成50000。&lt;/p&gt;

&lt;p&gt;如果你需要的数据超过50000条的话，怎么办？（尽管很少有网站有这么大的数据量。）一种方式是在报告界面的右下方的转到输入50001；还有一种方式是修改URL中的explorer-table.rowStart这个参数，这个参数代表的是页面开始显示的记录序号，如果你需要显示50001条之后的数据，请将这个数据修改为50000，因此，这个序列号是从0开始的。&lt;/p&gt;

&lt;p&gt;这个小技巧就介绍到这里，如果您有什么疑问，欢迎给我留言~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GA中的过滤器-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/06/30/gae4b8ade79a84e8bf87e6bba4e599a8-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-06-30T23:37:47+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/06/30/gae4b8ade79a84e8bf87e6bba4e599a8-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>GA中的目标-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/29/gae4b8ade79a84e79baee6a087-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-05-29T21:43:01+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/29/gae4b8ade79a84e79baee6a087-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>渠道可视化—GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/29/e6b8a0e98193e58fafe8a786e58c96-gaiqe59ca8e7babfe8afbee7a88b"/>
   <updated>2011-05-29T01:19:55+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/29/e6b8a0e98193e58fafe8a786e58c96-gaiqe59ca8e7babfe8afbee7a88b</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>高级过滤器+二次交叉细分在信息中心中保存自定义的复杂查询</title>
   <link href="http://cloga.github.io/%E9%BB%98%E8%AE%A4/2011/05/26/e9ab98e7baa7e8bf87e6bba4e599a8e4ba8ce6aca1e4baa4e58f89e7bb86e58886e59ca8e4bfa1e681afe4b8ade5bf83e4b8ade4bf9de5ad98e887aae5ae9ae4b989"/>
   <updated>2011-05-26T22:51:29+08:00</updated>
   <id>http://cloga.github.io/%E9%BB%98%E8%AE%A4/2011/05/26/e9ab98e7baa7e8bf87e6bba4e599a8e4ba8ce6aca1e4baa4e58f89e7bb86e58886e59ca8e4bfa1e681afe4b8ade5bf83e4b8ade4bf9de5ad98e887aae5ae9ae4b989</id>
   <content type="html">&lt;p&gt;你是否遇到过多个维度的交叉细分数据需求？比如查看来自百度organic对某一类页面（比如说URI中包含a）的分关键词分日浏览量。如果你没有用高级过滤器或_trackPageview方法重写URI的话，那么从这篇blog中相信你可以找到答案。&lt;/p&gt;

&lt;p&gt;首先，先分析一下这个需求：&lt;/p&gt;

&lt;p&gt;查看的数据的维度是两个：关键词和日&lt;/p&gt;

&lt;p&gt;需查看的细分是来自百度organic，并且URI包含a&lt;/p&gt;

&lt;p&gt;看到这个细分条件，你可能想到使用高级细分，构建一个下面的高级细分：&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/05/segment11.05.24.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/05/segment11.05.24.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;其实，这样做的没法做出我们需要的细分的。 因为，高级细分是基于访问的，上面的高级细分的实际含义是获得来源来自百度、且媒介为organic，且访问过包含a的页面的&lt;strong&gt;访问&lt;/strong&gt;。看一下下面这张图：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/05/exclude.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/05/exclude.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;可以看到刚才的高级细分中还是包含URI中不包含a的网页。在这里我们应该意识到对于PV级的细分，高级细分是无能为力的，但是，这并不表示GA对PV级的细分无能无力。&lt;/p&gt;

&lt;p&gt;让我们回到最初的需求，两个细分条件是来自百度 organic和URI包含a。&lt;/p&gt;

&lt;p&gt;其中的任意一个细分条件，都很简单，但是将两个细分条件放在一起则显得有些棘手。这里为大家介绍一下GA一个小技巧，GA的二次交叉细分。&lt;/p&gt;

&lt;p&gt;交叉细分是指根据两个维度来细分数据。比如，你可以查看不同渠道的不同城市之间的流量情况。二次交叉细分是指，当你按照一个或二个维度细分数据后（通常是过滤一部分数据）可以再根据其他维度细分或过滤数据。可能听起来有点晕。让我用实例来说明。&lt;/p&gt;

&lt;p&gt;对于上面的需求，首先构建第一个层次的维度为关键词、第二个层次的维度为网页，指标为浏览量的自定义报告&lt;/p&gt;

&lt;p&gt;点击下钻到baidu / organic中&lt;/p&gt;

&lt;p&gt;点击高级过滤器，选择网页包含a，点击【应用过滤器】&lt;/p&gt;

&lt;p&gt;这时再将第一个维度选择为关键词，第二个维度选择为天，需要通过RoiRevolution的&lt;a href=&quot;http://www.roirevolution.com/blog/2008/06/google_analytics_report_enhancer.php&quot;&gt;GA Report Enhancer&lt;/a&gt;用户脚本实现（这是一个神奇的脚本，安装之后可以在第二个维度中找到大部分维度，默认情况下GA仅提供部分维度）。&lt;/p&gt;

&lt;p&gt;这样我们就获得了来自百度organic对某一类页面（比如说URI中包含a）的分关键词分日浏览量。同时这些查询条件可以通过【添加到信息中心】在信息中心添加一个小模块，点击这个模块下的查看报告链接即可查询这个查询条件下的记录。&lt;/p&gt;

&lt;p&gt;开始吧，将你日常经常用到的复杂查询条件添加到信息中心中，构建自己的个性化信息中心。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>广告活动跟踪和AdWords整合-GAIQ在线课程</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/11/e5b9bfe5918ae6b4bbe58aa8e8b79fe8b8aae5928cadwordse695b4e59088-gaiqe59ca8e7babfe8afbee7a88b"/>
   <updated>2011-05-11T21:32:15+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/11/e5b9bfe5918ae6b4bbe58aa8e8b79fe8b8aae5928cadwordse695b4e59088-gaiqe59ca8e7babfe8afbee7a88b</id>
   <content type="html">&lt;p&gt;讲解了利用GA跟踪广告活动（online）以及GA与AdWords的整合。同时讲解了GA与AdWords数据有差异的原因。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GA中的配置文件-GAIQ在线课程</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/01/gae4b8ade79a84e9858de7bdaee69687e4bbb6-gaiqe59ca8e7babfe8afbee7a88b"/>
   <updated>2011-05-01T22:47:13+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/05/01/gae4b8ade79a84e9858de7bdaee69687e4bbb6-gaiqe59ca8e7babfe8afbee7a88b</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>GA中的正则式之、|和?的使用</title>
   <link href="http://cloga.github.io/%E6%AD%A3%E5%88%99%E5%BC%8F/2011/04/12/gae4b8ade79a84e6ada3e58899e5bc8fe4b98be38081e5928ce79a84e4bdbfe794a8"/>
   <updated>2011-04-12T00:31:26+08:00</updated>
   <id>http://cloga.github.io/%E6%AD%A3%E5%88%99%E5%BC%8F/2011/04/12/gae4b8ade79a84e6ada3e58899e5bc8fe4b98be38081e5928ce79a84e4bdbfe794a8</id>
   <content type="html">&lt;p&gt;本系列文章的&lt;a href=&quot;http://www.cloga.info/archives/1022.html&quot;&gt;上一篇&lt;/a&gt;介绍了在GA中使用正则式的概述，本篇文章及后续的几篇文章会为大家介绍常用的元字符。让我们先从反斜杠开始。&lt;/p&gt;

&lt;p&gt;反斜杠是一个与众不同的元字符，它必须与其他元字符一同使用，无法单独使用。它为元字符与纯文本搭起了一座桥梁。在元字符之前使用反斜杠会将元字符转义（escape）为纯文本，因此反斜杠又称为转义符。可能你还无法理解这句话，不要紧，我将举出几个例子。&lt;/p&gt;

&lt;p&gt;比如，你想要查看/archives?pid=1027这个页面的浏览量，于是你在热门内容报告下面的过滤器中输入了/archives?pid=1027这个URL，并且点击了【转到】。但是，令你奇怪的是，GA返回给你的0个页面。这是正常的，因为，GA中的表单查询条件是支持正则式的，而“?”是正则式中的一个元字符，其含义是前面的项目（这里你可以理解为字符）出现0或1次。这里我们输入的查询条件应该是原始的问号而不是元字符，这是我们就需要使用转义符（）来将元字符转义为纯文本。即将输入的查询条件修改为/archives?pid=1027。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;另外，当我们在过滤器中进行配置时，也需要对注意对需要转义的元字符使用进行转义。&lt;/p&gt;

&lt;p&gt;接下来，介绍一下|这个元字符。|这个元字符在正则式中应用也比较广泛，它的意思是逻辑或。&lt;/p&gt;

&lt;p&gt;比如，如果你想在所有流量来源中查看来自百度和Google的流量，那么，你只需要在查询条件中输入google|baidu。又或者你想在高级细分中创建一个品牌词的高级细分，你的品牌词既包括你的品牌的中文还包括你的网址，那么，你可以选择维度为关键词，条件选择与正则式匹配，值输入品牌词|www.mysite.com，即可。&lt;/p&gt;

&lt;p&gt;更有用的情境是在目标设置中，如果你有两个注册成功页，一个是/resuccess.html，一个是/thankyou.html，那么你只需要在目标设置中选择正则式匹配，在目标网址中输入/resuccess.html|/thankyou.html就可以将两个目标合二为一。更多的情况是不同的产品线及转化页面有不同URL，我们都可以使用|将其合并为一个。&lt;/p&gt;

&lt;p&gt;本篇的最后再讲一下?的使用。前面的例子/archives?pid=1027中，已经讲到的?是一个元字符，它的意思是前面的项目出现0或1次，换句话说，?前面的项目是可选的。这里的项目其含义是一个字符或字符串（会在介绍括号元字符的时候介绍这部分内容）。对于/archives?pid=1027，其可以匹配的模式是/archivepid=1027及/archivespid=1027。在GA中正则式的匹配是包含关系，即只要查看的字符串包含给出的正则式即可，也就是说abc/archivespid=1027和/archivespid=102723都是可以匹配的。&lt;/p&gt;

&lt;p&gt;OK，、|和?的含义就介绍完了~下一篇文章会介绍元字符括号、方括号及破折号的应用。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>内容报告-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/04/10/e58685e5aeb9e68aa5e5918a-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-04-10T15:31:08+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/04/10/e58685e5aeb9e68aa5e5918a-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>流量来源-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/04/10/e6b581e9878fe69da5e6ba90-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-04-10T15:29:24+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/04/10/e6b581e9878fe69da5e6ba90-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>GA中的正则式简介</title>
   <link href="http://cloga.github.io/%E6%AD%A3%E5%88%99%E5%BC%8F/2011/04/10/gae4b8ade79a84e6ada3e58899e5bc8fe7ae80e4bb8b"/>
   <updated>2011-04-10T04:03:13+08:00</updated>
   <id>http://cloga.github.io/%E6%AD%A3%E5%88%99%E5%BC%8F/2011/04/10/gae4b8ade79a84e6ada3e58899e5bc8fe7ae80e4bb8b</id>
   <content type="html">&lt;p&gt;GA是被广泛用来测量和评估网站的分析工具之一。GA团队努力让它更简单更直观。但是，你可能仍会感到使用GA的初始功能有一些局限性。&lt;/p&gt;

&lt;p&gt;如果是这样的话，你应该学习一下正则式以及如何在GA中使用正则式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;什么是正则式？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在计算机科学中，正则式（正则表达式）是指一个用来描述或者匹配一系列符合某个句法规则的字符串的单个字符串。在很多文本编辑器或其他工具里，正则表达式通常被用来检索和/或替换那些符合某个模式的文本内容。许多程序设计语言都支持利用正则表达式进行字符串操作。例如，在Perl中就内建了一个功能强大的正则表达式引擎。正则表达式这个概念最初是由Unix中的工具软件（例如sed和grep）普及开的。正则表达式通常缩写成“regex”，单数有regexp、regex，复数有regexps、regexes、regexen。（以上内容引自&lt;a href=&quot;http://baike.baidu.com/view/94238.htm&quot;&gt;百度百科&lt;/a&gt;）&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;为什么要在GA&lt;/strong&gt;&lt;strong&gt;中使用正则式？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;正则式是强大的模式匹配工具，利用正则式可以完成许多常规查询无法完成的任务。例如利用默认过滤器查找百度和Google的流量、重写URI、过滤IP段、创建复杂的高级细分……以及其他你能想到的奇妙功能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GA&lt;/strong&gt;&lt;strong&gt;中哪里可以使用正则式？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;据我所知，目前GA（不是指测试中的新版本）中可以使用正则式的地方主要有报告列表中的默认过滤器及高级过滤器（是的，报告列表中的查询条件是正则式，如果你需要查找的内容包含元字符，而你的查询条件未使用转义符将其转义，那么你很可能看不到想要的条目）、目标及渠道设置（你会发现正则式匹配有时比前向匹配、完全匹配更加方便快捷）、高级细分（高级细分支持更复杂条件及布尔逻辑，即使没有正则式，通过多个条件的组合查询也可以获得想要的结果，但是正则式的使用能给你更大的灵活性）和过滤器（过滤器的查询也是正则式模式，正则式+过滤器可以完成非常奇妙的作用，比如重写URI，内容分组、关联电子商务订单与具体的流量来源等）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;元字符是指在正则式中有特殊含义的字符。比如“.”可以匹配任意一个字符，而“+”可以匹配一个或多个它之前的那个字符。转义符是指“”，在元字符前使用转义符可以将元字符转化为普通字符，比如“?”匹配的是“?”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如何学习正则式？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;相信您和我一样也不是技术出身，对我们而言，能够理解正则式的基本原理，可以编写和测试一些简单的正则式就OK了。因此，让我们看一些例子，进行一些自己的尝试，并且最终理解和书写自己的正则式。&lt;/p&gt;

&lt;p&gt;对于正则式，你不使用它的话，不会真正理解它；没有真正理解它，也无法使用它。因此，你应该学一点使用一点。&lt;/p&gt;

&lt;p&gt;对于正则式，还有一点，你会发现每一个元字符都很简单。但是，将它们放在一起会变得有些复杂。因此每学习一点，就应该进行一些练习，犯一些错误是正常的。给大家推荐一个正则式测试的小软件&lt;a href=&quot;http://www.weitz.de/regex-coach/&quot;&gt;http://www.weitz.de/regex-coach/&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这篇文章就到这吧，我会在以后的系列文章中介绍一些GA常用的正则式。如果您对正则式在GA中的应用有任何疑问可以给我留言。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>时间指标-GAIQ在线课程中文字幕</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/04/07/e697b6e997b4e68c87e6a087-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-04-07T13:41:35+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/04/07/e697b6e997b4e68c87e6a087-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>浏览量、访问数、访问者-GAIQ在线课程中文字幕 </title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/19/e6b58fe8a788e9878fe38081e8aebfe997aee695b0e38081e8aebfe997aee88085-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995"/>
   <updated>2011-03-19T12:32:07+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/19/e6b58fe8a788e9878fe38081e8aebfe997aee695b0e38081e8aebfe997aee88085-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>报告解释的原则-GAIQ在线课程中文字幕第四弹</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/08/e68aa5e5918ae8a7a3e9878ae79a84e58e9fe58899-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4b889e5bcb9"/>
   <updated>2011-03-08T09:32:52+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/08/e68aa5e5918ae8a7a3e9878ae79a84e58e9fe58899-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4b889e5bcb9</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>安装GA跟踪代码-GAIQ在线课程中文字幕第三弹</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/07/e5ae89e8a385gae8b79fe8b8aae4bba3e7a081-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4b889e5bcb9"/>
   <updated>2011-03-07T13:27:11+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/07/e5ae89e8a385gae8b79fe8b8aae4bba3e7a081-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4b889e5bcb9</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>GA界面导航-GAIQ在线课程中文字幕第二弹</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/06/gae7958ce99da2e5afbce888aa-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4ba8ce5bcb9"/>
   <updated>2011-03-06T21:49:12+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/03/06/gae7958ce99da2e5afbce888aa-gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4ba8ce5bcb9</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>Google Analytics介绍-GAIQ在线课程中文字幕第一弹</title>
   <link href="http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/02/28/gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4b880e5bcb9"/>
   <updated>2011-02-28T09:41:50+08:00</updated>
   <id>http://cloga.github.io/gaiq%E5%9C%A8%E7%BA%BF%E8%AF%BE%E7%A8%8B%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95/2011/02/28/gaiqe59ca8e7babfe8afbee7a88be4b8ade69687e5ad97e5b995e7acace4b880e5bcb9</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>解密GA导航摘要报告</title>
   <link href="http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/02/27/e8a7a3e5af86gae5afbce888aae69198e8a681e68aa5e5918a"/>
   <updated>2011-02-27T00:12:02+08:00</updated>
   <id>http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/02/27/e8a7a3e5af86gae5afbce888aae69198e8a681e68aa5e5918a</id>
   <content type="html">&lt;p&gt;Cloga点评：详细全面的解释了GA中的导航摘要报告，能够解除你关于导航摘要的所有疑问。&lt;/p&gt;

&lt;p&gt;原文地址：&lt;a href=&quot;http://dennisgraham.com.au/2010/11/navigation-summary-google-analytics/&quot;&gt;http://dennisgraham.com.au/2010/11/navigation-summary-google-analytics/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;解密GA导航摘要报告&lt;/h1&gt;

&lt;p&gt;你充分利用了GA中导航摘要吗？你的数据能加起来吗？你是否没找到可操作的见解？&lt;/p&gt;

&lt;p&gt;这篇文章将让你全面了解导航摘要报告。包含以下要点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;什么是导航摘要以及如何&lt;strong&gt;用它来获得有价值的见解&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;导航摘要报告中的&lt;strong&gt;数字是如何计算的&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何&lt;strong&gt;看到全部的前一页和后一页。&lt;/strong&gt;（你可能注意到当计算导航摘要数据时，它们很少等于100%）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何将&lt;strong&gt;导航摘要导出&lt;/strong&gt;到电子表格中并且看看到底多少人去了哪里&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解决一些&lt;strong&gt;混乱&lt;/strong&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;strong&gt;矛盾的数据问题&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解释为什么导航摘要中的“进入次数”通常与它们在最常见目标网页出现时不同&amp;lt;!-- more --&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;什么是GA的导航摘要&lt;/h1&gt;

&lt;p&gt;导航摘要报告是相当简单的；&lt;/p&gt;

&lt;p&gt;它告诉你&lt;strong&gt;在到达一个特定页面前人们在哪个页面，以及他们随后去了哪里&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;这个报告能为你做什么&lt;/h1&gt;

&lt;p&gt;导航摘要报告能够确认；&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;访问者是否以你期望的方式到达某页面&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;有多少访问者将这个页面作为指向你的网站的入口&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;访问者是否到了你期望他们去的地方&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支付流程中&lt;strong&gt;是否有什么东西让访问者分心&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这个报告对观察目标网页的有效性是相当有用的。我建议打印出到达页的导航摘要报告；看一下这份报告再看一下你的实际目标网页。&lt;/p&gt;

&lt;p&gt;注意一下，人们去了哪里，在你的目标网页上，是否有没用的链接、广告或图片？它们是否将访问者带离期望的动作（购买、订阅、下载、查看更多等）？可能改变这些链接的顺序会增加你所期望的目标的点击率（CTR）。用你的直觉和好奇心来弄清楚人们为什么在网站上做这些事，做出改变对你是否有利。在本文的稍后我将重点探讨这些…现在我来让你了解导航摘要报告的准确解释。&lt;/p&gt;

&lt;p&gt;下面是导航摘要报告外观的一个例子。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate1.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate1.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;为什么进入次数+先前网页或者退出次数+后续网页加在一起不等于100%&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先前网页+进入次数的总数加起来为&lt;strong&gt;89%&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;后续网页+退出次数的总户加起来为&lt;strong&gt;124%&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果你在你的报告中看到了同样的问题，好消息是你没有发疯…默认情况下，&lt;strong&gt;GA&lt;/strong&gt;&lt;strong&gt;不会报告所有的先前网页和后续网页&lt;/strong&gt;，它不可能逐个显示几千个网页。对于大多数GA用户，全部信息是没有必要和令人困扰的，但是，如果这个信息正是你所需要的——读下去&lt;/p&gt;

&lt;h1&gt;如何在导航摘要报告中查看全部的先前网页及后续网页&lt;/h1&gt;

&lt;p&gt;点击URL，在URL最后添加&amp;amp;limit=20000，因此，URL看起来是这样：&lt;/p&gt;

&lt;p&gt;https://www.google.com/analytics/reporting/content&lt;em&gt;detail&lt;/em&gt;navigation?id=36050032&amp;amp;pdr=20100801-20110225&amp;amp;cmp=average&amp;amp;trows=25&amp;amp;d1=%2Findex.php#lts=1298729749843&lt;strong&gt;&amp;amp;limit=1000&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;敲回车等待这个网页重新加载&lt;/p&gt;

&lt;h2&gt;为什么添加的是“limit=1000”？&lt;/h2&gt;

&lt;p&gt;当你将导航摘要报告导出到电子表格（稍后解释），将显示1000个先前网页和后续网页。如果你想查看1000个以上的网页，你能将这个数字修改为2000、5000等等。这样先前网页及后续网页将显示2000、5000等等。&lt;/p&gt;

&lt;p&gt;Cloga：导出的上限应为20000。&lt;/p&gt;

&lt;h1&gt;将导航摘要导出到电子表格&lt;/h1&gt;

&lt;p&gt;当你敲完回车页面重新加载之后，你仍将看到与之前相同的报告。然后点击&lt;strong&gt;“导出”&lt;/strong&gt;，选择&lt;strong&gt;“&lt;/strong&gt;&lt;strong&gt;CSV&lt;/strong&gt;&lt;strong&gt;”，不是&lt;/strong&gt;“适用于Excel的CSV”。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate2.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate2.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;打开文件，看一下所有缺失的先前网页及后续网页。&lt;/p&gt;

&lt;p&gt;Cloga：对于中文客户来说，我们可能遇到导出的文件为乱码的情况，别慌，只要将CSV文件以记事本打开，你会看到正常的文字，然后再保存一下，就OK了~&lt;/p&gt;

&lt;h1&gt;将百分比转化为浏览量&lt;/h1&gt;

&lt;p&gt;你想要知道来自特定页面或跑到特定页面的准确数字，而不仅仅是百分比吗？&lt;/p&gt;

&lt;p&gt;在这个例子中我们知道这个网页的浏览总量为410。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;strong&gt;列的数字代表百分比。&lt;/strong&gt;例如，0.664615385=66.46%。C列用总浏览量乘以了百分比。在下面的例子中，0.664615385×410来计算进入次数。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate3.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate3.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果看到你的浏览量不是整数，不要担心。为了方便起见…四舍五入到最接近的整数。&lt;/p&gt;

&lt;h1&gt;数字加起来总是总浏览量吗？&lt;/h1&gt;

&lt;p&gt;是的。&lt;/p&gt;

&lt;p&gt;进入次数+先前网页=总浏览量&lt;/p&gt;

&lt;p&gt;退出次数+后续网页=总浏览量&lt;/p&gt;

&lt;h1&gt;将百分比转化为浏览量（继续）&lt;/h1&gt;

&lt;p&gt; &lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate4.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate4.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate4.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在上面截图中，你能在C列中看到我用B列中的百分比乘以总浏览量。另外，我已经将每个数四舍五入为整数。&lt;/p&gt;

&lt;p&gt;我在先前网页的最后，将浏览量汇总，数字加起来是138与导航概述报告中的概述中看到的一样（见上面的截图）。换句话说，事情加起来刚刚好。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate5.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate5.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;重要：后续网页的计算与先前网页不同&lt;/h1&gt;

&lt;p&gt;当计算后续网页时，不要用B列中的百分比乘以总浏览量。用&lt;strong&gt;总后续网页&lt;/strong&gt;（总浏览量-退出次数）乘以百分比。见下面的截图。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate6.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/02/navigate6.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;更多问题&lt;/h1&gt;

&lt;p&gt;下面是一些GA导航摘要的一些已经&lt;strong&gt;不再是问题&lt;/strong&gt;的问题。我认为有必要提到这些问题，以防你在这些问题纠结。&lt;/p&gt;

&lt;h2&gt;在导航摘要，为什么显示0%的退出次数&lt;/h2&gt;

&lt;p&gt;不久之前，你可能注意到在导航摘要中，退出次数通常是0%。但是，当查看内容深入分析时，事情不是这样。这只是一个bug，问题已经解决了。&lt;/p&gt;

&lt;h2&gt;为什么同一个网页出现在先前网页及后续网页中？&lt;/h2&gt;

&lt;p&gt;我有一段时间没有碰到这个问题了，但是，这里是关于这一问题的原因及GA现在如何解释这一事件的一些信息（假如这个问题又出现的话）。这个观点的可信性已经得到&lt;a href=&quot;http://www.kaushik.net/avinash/2008/07/google-analytics-help-questions-answers-tips-ideas-suggestions.html&quot;&gt;Avinash&lt;/a&gt;和他的朋友Cari的证实。&lt;/p&gt;

&lt;p&gt;你可能已经知道GA使用JS和cookie跟踪访问者。当访问者加载页面时，JS了加载，收集到了数据（例如，访问者什么时间在哪个网页等等）。&lt;/p&gt;

&lt;p&gt;如果访问&lt;strong&gt;重新加载网页&lt;/strong&gt;（敲回车或F5等等），GA将查看之前在什么时间加载了哪个网页。因为，前面加载的网页是同一个网页——因此，GA将在导航摘要报告中显示先前网页和后续网页看到同一个网页。&lt;/p&gt;

&lt;p&gt;另一种引起这种先前网页+后续网页的问题的可能性是查看一个博客上的图片（没有被跟踪），然后点击后退回到原来的博客。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;最近，我注意到这些可能性被解释为进入&lt;/strong&gt;（当查看导航摘要报告时）。换句话说，当查看导航摘要时，&lt;strong&gt;重新加载网页&lt;/strong&gt;&lt;strong&gt;=&lt;/strong&gt;&lt;strong&gt;进入&lt;/strong&gt;。当你查看最常见的目标网页时，（也可以说指向你的网站的最常见的进入页）。我知道，我知道…有点纠结的问题。但是，GA就是这样做的，以便避免在先前网页和后续网页中显示同一个网页。&lt;/p&gt;

&lt;p&gt;PS：感谢海雷的问题，每次我被问住的时候，都会去寻找一些更完美的答案~&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GA API更新（新增127个维度及指标）</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/02/21/ga-apie69bb4e696b0efbc88e696b0e5a29e127e4b8aae7bbb4e5baa6e58f8ae68c87e6a087efbc89"/>
   <updated>2011-02-21T01:40:17+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/02/21/ga-apie69bb4e696b0efbc88e696b0e5a29e127e4b8aae7bbb4e5baa6e58f8ae68c87e6a087efbc89</id>
   <content type="html">&lt;p&gt;这次的更新是2011.01.15，添加了一些重要的数据，但是貌似有些新指标并未加入到UI界面中，不知近期是否会更新。&lt;/p&gt;

&lt;p&gt;1、更新了新数据&lt;/p&gt;

&lt;p&gt;（1）ga:visitors的计算修改为返回该时间段的惟一访客（此前为每日的惟一访客），并且支持更多的维度及指标组合&lt;/p&gt;

&lt;p&gt;（2）添加了10个新AdWords维度：&lt;/p&gt;

&lt;p&gt;这些指标在AdWords中已经存在只是将更多的AdWords信息直接导入到GA中。&lt;/p&gt;

&lt;p&gt;ga:adDistributionNetwork：提供你的广告的网络（内容、搜索、搜索伙伴等）。&lt;/p&gt;

&lt;p&gt;ga:adMatchType：关键词所应用的匹配类型（广泛、词组匹配、完全匹配）。内容网络的广告被定义为“内容网络”。&lt;/p&gt;

&lt;p&gt;ga:adMatchedQuery：触发你的AdWords广告展示的搜索查询（搜索词）。比较给力的新数据，打通消费端和收入端的AdWords搜索词报告从此可以从GA API中直接获得。&lt;/p&gt;

&lt;p&gt;ga:adPlacementDomain：在内容网络中展示你的广告的域。&lt;/p&gt;

&lt;p&gt;ga:adPlacementUrl：在内容网络中展示你的广告的URL。&lt;/p&gt;

&lt;p&gt;ga:adFormat：AdWords广告的形式（文本、图片、Flash、视频等）。&lt;/p&gt;

&lt;p&gt;ga:adTargetingType：AdWords广告如何定位（关键词、展示位置和人群定位等等）。&lt;/p&gt;

&lt;p&gt;ga:adTargetingOption：内容网络中你的广告如何管理。值是自动定位还是自选展示位置。&lt;/p&gt;

&lt;p&gt;ga:adDisplayUrl：AdWords广告的显示网址。&lt;/p&gt;

&lt;p&gt;ga:adDestinationUrl：AdWords广告的目标网址&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;（2）为广告系列组添加了指标ga:organicSearches&lt;/p&gt;

&lt;p&gt;ga:organicSearches：一个session中发生的自然搜索。这个指标与搜索引擎无关。新增的指标，目前在一个Session中发生的多次搜索引入，只会记录一个访问（第一个来源），其他的来源访问数会记为零。&lt;/p&gt;

&lt;p&gt;（3）为站内搜索组添加了指标ga:searchResultViews&lt;/p&gt;

&lt;p&gt;ga:searchResultViews：进行一次搜索后查看搜索结果页的次数。&lt;/p&gt;

&lt;p&gt;（4）添加了基于时间的三个维度：ga:nthDay, ga:nthWeek, ga:nthMonth&lt;/p&gt;

&lt;p&gt;ga:nthDay：在特定日期范围内天的指数。日期范围内第一天的指数（起始日期）是1，第二天是2。&lt;/p&gt;

&lt;p&gt;ga:nthWeek：在特定日期范围内周的指数。日期范围内第一周的指数是1，第二周是2。&lt;/p&gt;

&lt;p&gt;ga:nthMonth：在特定日期范围内月的指数。日期范围内第一个月的指数是1，第二个月是2。&lt;/p&gt;

&lt;p&gt;（5）改变了指标与维度的分组更好的反映了他们代表的功能。&lt;/p&gt;

&lt;p&gt;在维度中增加了session、系统、地域/网络、事件跟踪、时间等几个组，并将内容更名为页面跟踪，细化了分组。&lt;/p&gt;

&lt;p&gt;同样在指标的分组中，添加了session、AdWords两个分组，并将内容更名为页面跟踪。&lt;/p&gt;

&lt;p&gt;2、新的计算指标&lt;/p&gt;

&lt;p&gt;下面的计算指标来自于使用基础指标的计算。注：带有(n)的名称支持值1-20。&lt;/p&gt;

&lt;p&gt;（1）基于目标的：&lt;/p&gt;

&lt;p&gt;ga:costPerConversion：每转化成本（包括电子商务和目标转化）。ga:adCost/ (ga:transactions + ga:goalCompletionsAll)。&lt;/p&gt;

&lt;p&gt;ga:costPerGoalConversion：每目标转化成本。ga:adCost / ga:goalCompletionsAll。&lt;/p&gt;

&lt;p&gt;ga:costPerTransaction：每交易转化成本。ga:adCost / ga:transactions。&lt;/p&gt;

&lt;p&gt;ga:goal(n)AbandonRate：请求目标的放弃率。((ga:goal(n)Starts - ga:goal(n)Completions) / ga:goal(n)Starts) * 100。&lt;/p&gt;

&lt;p&gt;ga:goal(n)Abandons：在请求目标上，访问者开始了转化活动而没有最终完成的次数。ga:goal(n)Starts - ga:goal(n)Completions。&lt;/p&gt;

&lt;p&gt;ga:goal(n)ConversionRate：完成了请求目标的访问百分比。(ga:goal(n)Completions / ga:visits) * 100。&lt;/p&gt;

&lt;p&gt;ga:goalAbandonRateAll：放弃目标率。(ga:goalStartsAll - ga:goalCompletionsAll) / ga:goalStartsAll) * 100。&lt;/p&gt;

&lt;p&gt;ga:goalAbandonsAll：开始了一个目标而没有实际完成它们的总次数。ga:goalStartsAll - ga:goalCompletionsAll。&lt;/p&gt;

&lt;p&gt;ga:goalConversionRateAll：至少产生一个目标转化的访问百分比。(ga:goalCompletionsAll / ga:visits) * 100。&lt;/p&gt;

&lt;p&gt;ga:goalValueAllPerSearch：搜索的平均目标价值。ga:goalValueAll / ga:searchUniques。似乎是一个新指标。&lt;/p&gt;

&lt;p&gt;ga:goalValuePerVisit：访问的平均目标价值。ga:goalValueAll / ga:visits。&lt;/p&gt;

&lt;p&gt;（2）基于内容（英文原文为page Tracking页面跟踪）的&lt;/p&gt;

&lt;p&gt;ga:entranceBounceRate：单页访问百分比（即，从进入页离开网站的访问）。(ga:bounces / ga:entrances) * 100。&lt;/p&gt;

&lt;p&gt;ga:visitBounceRate：单页访问百分比（即，从第一页离开网站的访问）。(ga:bounces / ga:visits) * 100。这个指标的引入将跳出率区分为以visit计算和以entrances计算的两种，相信在不远的将来，热门内容中的跳出率将改为以visit计算。&lt;/p&gt;

&lt;p&gt;ga:entranceRate：这个页面作为入口的浏览量百分比。(ga:entrances / ga:pageviews) * 100。新增指标，预期出现位置内容报告的最常见目标网页。&lt;/p&gt;

&lt;p&gt;ga:exitRate：总页面浏览中发生网站退出的比率。(ga:exits / ga:pageviews) * 100。&lt;/p&gt;

&lt;p&gt;ga:pageviewsPerVisit：每次访问平均浏览页数。计算同一页面的重复浏览。ga:pageviews / ga:visits。&lt;/p&gt;

&lt;p&gt;ga:avgTimeOnPage：访问者查看此页面或此组页面所花费的平均时间。ga:timeOnPage / (ga:pageviews - ga:exits)&lt;/p&gt;

&lt;p&gt;ga:avgTimeOnSite：用总秒数表示的访问者平均会话持续时间。ga:visitLength / ga:visits。原计算公式为：ga:timeOnSite/ga:visits。二者之间的差异未知。&lt;/p&gt;

&lt;p&gt;ga:avgEventValue：平均事件价值。ga:eventValue / ga:totalEvents。&lt;/p&gt;

&lt;p&gt;（3）基于站内搜索的&lt;/p&gt;

&lt;p&gt;ga:avgSearchDepth：进行搜索后查看的平均页数。ga:searchDepth / ga:searchUniques。&lt;/p&gt;

&lt;p&gt;ga:avgSearchDuration：搜索后人们在网站上花费的平均时间。ga:searchDuration / ga:searchUniques。&lt;/p&gt;

&lt;p&gt;ga:avgSearchResultViews：进行搜索后，人们查看搜索结果页的平均次数。ga:searchResultViews / ga:searchUniques。&lt;/p&gt;

&lt;p&gt;ga:searchGoalConversionRateAll：至少完成了一个目标的搜索访问（至少包含一次搜索的访问）的百分比。(ga:goalCompletionsAll / ga:searchUniques) * 100。&lt;/p&gt;

&lt;p&gt;ga:searchGoal(n)ConversionRate：完成了所请求的目标的搜索访问（至少包含一次搜索的访问）的百分比。(ga:goal(n)Completions / ga:searchUniques) * 100。&lt;/p&gt;

&lt;p&gt;ga:searchExitRate：导致立即跳出的搜索百分比。(ga:searchExits / ga:searchUniques) * 100。&lt;/p&gt;

&lt;p&gt;（4）基于电子商务的&lt;/p&gt;

&lt;p&gt;ga:itemsPerPurchase：每笔交易平均出售此产品（一组产品）的平均值。ga:itemQuantity / ga:uniquePurchases。&lt;/p&gt;

&lt;p&gt;ga:margin：交易的总利润。(ga:transactionRevenue + ga:goalValueAll - ga:adCost) / (ga:transactionRevenue + ga:goalValueAll)。&lt;/p&gt;

&lt;p&gt;ga:percentNewVisits：从未访问过的人们的访问的百分比。(ga:newVisits / ga:visits) * 100。&lt;/p&gt;

&lt;p&gt;ga:revenuePerItem：每产品的平均收入。ga:itemRevenue / ga:itemQuantity。&lt;/p&gt;

&lt;p&gt;ga:revenuePerTransaction：每电子商务交易的平均收入。ga:transactionRevenue / ga:transactions。&lt;/p&gt;

&lt;p&gt;ga:ROI：投资回报是总交易利润除以广告花费。(ga:transactionRevenue + ga:goalValueAll - ga:adCost) / ga:adCost。&lt;/p&gt;

&lt;p&gt;ga:RPC：RPC或每点击收入是一个广告每次点击所收到的收入（来自电子商务销售和/或目标价值）。(ga:transactionRevenue + ga:goalValueAll) / ga:adClicks。&lt;/p&gt;

&lt;p&gt;ga:totalValue：网站的总价值（包括总收入和总目标价值）。ga:transactionRevenue + ga:goalValueAll。&lt;/p&gt;

&lt;p&gt;ga:transactionRevenuePerVisit：网站访问的平均交易收入。ga:transactionRevenue / ga:visits。&lt;/p&gt;

&lt;p&gt;ga:transactionsPerVisit：网站访问的平均交易数。ga:transactions / ga:visits。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>跳出率解密</title>
   <link href="http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/02/01/e8b7b3e587bae78e87e8a7a3e5af86"/>
   <updated>2011-02-01T13:51:18+08:00</updated>
   <id>http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/02/01/e8b7b3e587bae78e87e8a7a3e5af86</id>
   <content type="html">&lt;p&gt;原文地址：&lt;a href=&quot;http://blog.kissmetrics.com/bounce-rate/&quot;&gt;http://blog.kissmetrics.com/bounce-rate/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果你在网络上运行业务，并且在网站安装了Google Analytics，你很可能知道网站的跳出率。但是，你知道它是如何计算的吗？行业的平均跳出率是多少？哪些因素影响跳出率？下面的内容将给你答案，并且给你一些建议帮你改善跳出率。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/bounce-rate-dmsy.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/02/bounce-rate-dmsy.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/02/bounce-rate-dmsy.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>转化专家来自金星，测量专家来自火星</title>
   <link href="http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/01/19/e8bdace58c96e4b893e5aeb6e69da5e887aae781abe6989fefbc8ce6b58be9878fe4b893e5aeb6e69da5e887aae98791e6989f"/>
   <updated>2011-01-19T01:02:18+08:00</updated>
   <id>http://cloga.github.io/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2011/01/19/e8bdace58c96e4b893e5aeb6e69da5e887aae781abe6989fefbc8ce6b58be9878fe4b893e5aeb6e69da5e887aae98791e6989f</id>
   <content type="html">&lt;p&gt;原文地址：&lt;a href=&quot;http://www.advanced-web-metrics.com/blog/2011/01/12/conversionistas-are-from-venus-and-metrics-people-from-mars/&quot;&gt;http://www.advanced-web-metrics.com/blog/2011/01/12/conversionistas-are-from-venus-and-metrics-people-from-mars/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;作者 John Ekman&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.advanced-web-metrics.com/blog/wp-content/uploads/2010/12/MarsAndVenus.png&quot; alt=&quot;&quot;&gt;尽管工作目标相同——改善转化率和客户的网络营销——转化与测量专家有时似乎从不同的视角看待网络世界。这篇文章将探讨为什么是这样，以及如何整合这两种视角来&lt;strong&gt;为网络营销的有效性创建一种综合的全面的方法&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;数字是蛋而用户体验是鸡——还是？&lt;img src=&quot;http://www.advanced-web-metrics.com/blog/wp-content/uploads/2010/12/ChickenAnd-Egg.jpg&quot; alt=&quot;&quot;&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Conversion Conference（转化研讨会）和E-metrics summit（电子商务峰会）我都参加过。有时，它们一起举行，因此他们应该有许多共同点，对吗？！它们确实都关注同样的目标——改进网络营销的成果。然而，我听到的是来自两个视角的声音。&lt;/p&gt;

&lt;p&gt;那么这些观点是什么？&lt;/p&gt;

&lt;p&gt;我认为最主要的区别是决定“从哪里开始”。&lt;strong&gt;如果你的工作是关于测量，那么你从数字开始。&lt;/strong&gt;网站分析数据将告诉你哪些错了，哪些应该修复，该如何修复。一旦定位到具体的问题，那么测量数据将为你提供关于问题页面和功能的足够材料，并且可以开展测试。&lt;/p&gt;

&lt;p&gt;而如果是转化专家的话，他们会告诉你网站分析对“是什么”很有效，但是关于“为什么”却近乎一无所知。跳出率很高，订单减少等等。但是，测量数据不能给你任何为什么会这样的答案。&lt;strong&gt;因此，测试的起点又回到了用户测试、专家经验和最佳做法，基本上进入了之前的转化优化挑战所建立的体验之中。&lt;/strong&gt;当转化专家决定从何处开始测试时，将使用定性与定量方法的结合。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;局部最优化不行。最佳做法也一样。&lt;/strong&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&quot;http://www.advanced-web-metrics.com/blog/wp-content/uploads/2010/12/LocalOptimum.png&quot; alt=&quot;&quot;&gt;如果你与转化专家坐在一起，他们将告诉你&lt;strong&gt;过分依赖测量数据从长远来看无法获得最优化结果。&lt;/strong&gt;这是因为任何未来的解决方案都是对现有解决方法的修改。在计算机科学中将这一现象称为“解决方案背景的限制（restriction in the solution landscape）”。你只能涉足目前所处的背景邻近的风景。其风险是你将无法看到超越你的视线以外的“更高的山峰”。你只能止于所谓的“局部最优”，并且不可能看到“全局最优”。&lt;/p&gt;

&lt;p&gt;换句话说：“你能知道A可以超过B和C，但是，你永远不会知道D、E和F可能也可以。”&lt;/p&gt;

&lt;p&gt;当你以后在酒吧遇见一个转化专家，他甚至可能称这种方法“有点扯（Putting lipstick on a pig）”。&lt;/p&gt;

&lt;p&gt;因此，一个测量传教士是如何谈论转化专家的“最佳做法”及“专家经验”的呢？他们说——“不要相信他们”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;有许多例子可以证明适合于一个公司的东西（最佳做法）不适合于另一家公司。&lt;/strong&gt;也有海量的证据证明专家的建议（专家经验）对于原创版本惨痛的失败了，当他们看到结果时，“没有人相信自己的眼睛”。因此，信任建议与信任数字相当愚蠢和不专业。&lt;/p&gt;

&lt;p&gt;当他们后来在酒吧碰到转化专家时，他们将说——“用你的肚子喝啤酒，用你的用户引导你的转化项目”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;嗨，哥们——让我们和睦相处，怎么样？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“男人来自金星，女人来自火星”这本名著的标题将焦点放在性别的差异上。他们来自不同的地方，因此，他们不能合作。&lt;/p&gt;

&lt;p&gt;但是，男人和女人在一起做了许多大事。比如，我和我的妻子有两个可爱的小孩。因此，关注我们如何可以互补，而不是因为差异而沮丧，我们可以一起完成大事。&lt;/p&gt;

&lt;p&gt;对于转化专家与测量专家同样是这样。他们关于“真理”的视角以及对彼此的批评是100%正确的。&lt;strong&gt;这也正是为什么在大型的转化优化项目中二者缺一不可。&lt;/strong&gt;有一个部分没有做到最好或有一个方法有瑕疵都不能称为一个最优的优化项目。&lt;/p&gt;

&lt;p&gt;因此，为了良好的转化率，转化专家及测量传教士联合在一起。在测量驱动的项目中邀请一位转化专家是为了扩展解决方案的视角以及建立新的假设检验。而测量专家在项目中存在是为了那些我们很容易喜欢上的伟大的想法中的枯燥的数据处理及反复的检测和测试。&lt;/p&gt;

&lt;p&gt;最后，受益者才是最关心的人——客户。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关于作者&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src=&quot;http://www.conversionista.com/wp-content/uploads/2010/07/john.jpg&quot; alt=&quot;&quot;&gt;John Ekman&lt;/strong&gt;是一个转化专家！他自己的咨询公司的创建者，他用一套结构化的方法来设置、实施和跟进客户线上受众的转化目标。关注Johns的&lt;a href=&quot;http://www.conversionista.com/&quot;&gt;Conversion blog&lt;/a&gt;（或者Konverteringsblogg-瑞典语版本）或者直接在&lt;a href=&quot;http://www.twitter.com/conversionista&quot;&gt;@twitter&lt;/a&gt;|&lt;a href=&quot;http://se.linkedin.com/pub/john-ekman/0/a03/8b2&quot;&gt;LinkedIn&lt;/a&gt;联系John。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GA对访问来源的判断</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/01/09/gae5afb9e8aebfe997aee69da5e6ba90e79a84e588a4e696ad"/>
   <updated>2011-01-09T02:18:17+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/01/09/gae5afb9e8aebfe997aee69da5e6ba90e79a84e588a4e696ad</id>
   <content type="html">&lt;p&gt;GA默认可以识别的访问来源有三种：直接访问、引介网站和搜索引擎，你可以通过在Landing page的URL添加utm参数来标识自定义访问来源。直接访问的来源为（direct），媒介为（none），这里的括号是为了与direct和none这两个字符进行区分；引介网站的来源为网站主域名，媒介为referral；搜索引擎的来源为网站主域名，媒介为organic。
直接访问为用户通过直接输入网址或通过书签到达Landing page（用户在一个session中到达网站的第一页），换句话说，Headers的request中不包含referer的值（这里有一个前提条件是用户的utmz为空或只有direct值）。
引介网址为用户通过其他网站到达Landing page。
搜索引擎为用户通过GA可识别的搜索引擎到达Landing page，这里强调可识别的搜索引擎包括两层意思，首先GA必须将这个主域识别为搜索引擎，其次，GA也需要知道这个主域的查询参数。其实，引介网站与搜索引擎在Headers的request中都是通过referer的值来判断的，只是对于搜索引擎，GA会将包含在referer的查询参数提取出来。&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- more --&amp;gt;GA是通过_utmz这个cookie值来判断访问来源的。GA创建及更新这个cookie值的基本思路如下：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2011/01/referral-source.gif&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2011/01/referral-source.gif&quot; alt=&quot;&quot;&gt;&lt;/a&gt;图1  GA对访问来源的判断&lt;/p&gt;

&lt;p&gt;首先判断Landing page是否存在gclid参数，如果存在，则存储这个参数，这个参数是Adwords的自动标记，其优先级最高，存在这个参数则其他utm参数无效。如果没有gclid参数，则判断是否存在utm参数，如果存在utm参数，则将对应值写入utmz值，必要参数为utm&lt;em&gt;source，其余参数可为空，其默认为值（not set）。如果不存在，则判断Headers的request中referer的值是否为空，如果不为空，则获得referer的主域名作为来源，写入utmcsr，同时判断这个主域是否在可识别的搜索引擎列表中（即包括GA默认可识别列表也包括用户通过addOrganic添加的自定义搜索引擎），如果在不可识别的搜索引擎列表中，则在utmccn写入(referral)，在utmcmd写入referral，将referer中的URI写入utmcct，如果主域名在可识别的搜索引擎列表中，则判断referer的URI中是否存在对应的查询参数，如果不存在则按照引介网站进行处理，如果存在则将查询参数中的值记录在utmctr中，并将在utmccn写入（organic），在utmcmd写入organic。如果Headers的request中referer的值为空，则判断是否存在&lt;/em&gt;utmz，如果存在则保留原信息，如果不存在则在utmcsr中写入(direct)，在utmccn写入(direct)，在utmcmd中写入(none)。
这里看到只有当不存在_utmz的情况下，访问者的直接访问才会被记录为直接访问。因为如果用户以前通过直接访问以外的渠道访问过网站之后，GA会将其随后的访问都归属到上一个访问来源。&lt;/p&gt;

&lt;p&gt;Update：之前没考虑utm_nooverride参数的使用，GA应该是首先判断是否存在这个参数，如果这个参数的值为1，则会保留原有的utmz值，如果不存在，才会写入utmz值。&lt;/p&gt;

&lt;p&gt;下面介绍一个&lt;em&gt;utmz这个cookie值。
_utmz
有效期：默认值为6个月，但是，你可以通过&lt;/em&gt;setCampaignCookieTimeout()函数来自定义这个值。
形式：
域哈希值.当前时间.访问次数.不同来源的访问次数.utmcsr=X(|utmccn=X|utmctr=X|utmcmd=X|utmcct=X|utmgclid=X)
&lt;em&gt;utmz是一个引介跟踪cookie。它跟踪所有的引介信息，包含所有的引介媒介与来源。这意味着所有的organic、cpc、广告计划或广告单元的信息都存储在&lt;/em&gt;utmz中。关于引介的信息存储在几个名-值对中，引介的每个属性如下：
utmcsr：存储utm&lt;em&gt;source参数中的值，utm参数中必要参数，如果仅适用这一个utm参数，则其他参数设置为（not set）；如果没有使用utm参数，则存储Header中referer的主域名。
utmccn：存储utm&lt;/em&gt;campaign参数中的值；如果没有使用utm参数，则引介网站存储（referral），自然搜索存储（organic）。
utmctr：存储utm&lt;em&gt;term参数中的值；如果没有使用utm参数，则引介网站存储URI，自然搜索存储搜索词，直接访问为空。
utmcmd：存储utm&lt;/em&gt;medium参数中的值，如果没有使用utm参数，则引介网站存储referral，自然搜索存储organic，直接访问存储（none）。
utmcct：存储utm_content参数中值，如果没有utm参数，则为空。
utmgclid：存储AdWords的自动标识，如果存在则utmcsr为（not set），utmccn为（not set）。但是在GA的报告中会将来源显示为google，媒介显示为cpc，能否正确显示广告系列、广告组和关键词等AdWords相关数据，则要看gclid能否与AdWords的数据匹配，无法匹配则显示（not set）。
&lt;strong&gt;&lt;a href=&quot;http://www.cuiii.com&quot;&gt;注：&lt;/a&gt;&lt;/strong&gt;这里的参数都为utf8编码的urlencode值。&lt;/p&gt;

&lt;p&gt;注：目前Google官方也给出了流量来源判断的流程图，感兴趣的同学可以在https://developers.google.com/analytics/devguides/platform/features/campaign-flow?hl=zh-CN看到。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GA域哈希值、跨域跟踪与多跟踪器</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/01/03/gae59f9fe59388e5b88ce580bce38081e8b7a8e59f9fe8b79fe8b8aae4b88ee5a49ae8b79fe8b8aae599a8"/>
   <updated>2011-01-03T16:43:30+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2011/01/03/gae59f9fe59388e5b88ce580bce38081e8b7a8e59f9fe8b79fe8b8aae4b88ee5a49ae8b79fe8b8aae599a8</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;GA域哈希值的介绍
*&lt;em&gt;域哈希值是GA用来代表你的网站的固定长度的数值。Google Analytics哈希值算法的运作机制，请见：
&lt;a href=&quot;http://www.google.com/support/forum/p/Google+Analytics/thread?tid=626b0e277aaedc3c&amp;amp;hl=en&quot;&gt;http://www.google.com/support/forum/p/Google+Analytics/thread?tid=626b0e277aaedc3c&amp;amp;hl=en&lt;/a&gt;
默认情况下（未使用setDomainName()的情况下），GA会为每一个二级域名指定不同的域哈希值。如果使用setDomainName()的话，域哈希值会发生变化，
*&lt;/em&gt;GA跨域跟踪的最佳实践&lt;/strong&gt;
假如你的网站有多个子域，比如&lt;a href=&quot;http://www.cloga.info&quot;&gt;www.cloga.info&lt;/a&gt;和bbs.cloga.info，如果你使用一个网络资源ID来跟踪这两个子域。默认情况下，GA会将这两个网站单独设置Cookie，每一个网站的访问数会单独计数，两个子域之间的链接会显示为引荐来源。
比如，访问者A从百度来到了&lt;a href=&quot;http://www.cloga.info&quot;&gt;www.cloga.info&lt;/a&gt;，GA会记录到来自百度的一次访问，访问者A随后从&lt;a href=&quot;http://www.cloga.info&quot;&gt;www.cloga.info&lt;/a&gt;的链接来到了bbs.cloga.info，GA会记录到来自&lt;a href=&quot;http://www.cloga.info&quot;&gt;www.cloga.info&lt;/a&gt;的一次引荐访问（两个域的哈希值不同）。本来的一次访问会记录为两次访问。
如果你希望将cloga.info这个主域作为一个整体。则需要使用GA的跨域跟踪。GA跨域跟踪代码的实例如下：
&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
 var _gaq = _gaq || [];
 _gaq.push([&amp;#39;_setAccount&amp;#39;, &amp;#39;UA-18159656-1&amp;#39;]);
 _gaq.push([&amp;#39;_setDomainName&amp;#39;,&amp;#39;.cloga.info&amp;#39;]);
 _gaq.push([&amp;#39;_setAllowHash&amp;#39;,false]);
 _gaq.push([&amp;#39;_trackPageview&amp;#39;]);
 (function() {
  var ga = document.createElement(&amp;#39;script&amp;#39;); ga.type = &amp;#39;text/javascript&amp;#39;; ga.async = true;
  ga.src = (&amp;#39;https:&amp;#39; == document.location.protocol ? &amp;#39;https://ssl&amp;#39; : &amp;#39;http://www&amp;#39;) + &amp;#39;.google-analytics.com/ga.js&amp;#39;;
  var s = document.getElementsByTagName(&amp;#39;script&amp;#39;)[0]; s.parentNode.insertBefore(ga, s);
 })();
&amp;lt;/script&amp;gt;
&lt;/code&gt;这里比默认的跟踪代码多使用了两个函数：
setDomainName(“.cloga.info”)：设置主域名，主域名下的所有子域都可能共享cookie
setAllowHash(false)：关闭域哈希值，将域哈希值强制设置为1
GA跨域跟踪官方文档：
&lt;a href=&quot;http://code.google.com/intl/zh-CN/apis/analytics/docs/tracking/gaTrackingSite.html&quot;&gt;http://code.google.com/intl/zh-CN/apis/analytics/docs/tracking/gaTrackingSite.html&lt;/a&gt;
这里有个比较邪恶的想法：可以通过在页面中进行使用setDomainName()与不使用setDomainName()的混搭来使GA跟踪到流量翻N倍，N决定于你的平均页面浏览深度。
*&lt;em&gt;GA多跟踪器的使用
*&lt;/em&gt;异步的GA代码使用push数组的方式向GA服务器发送跟踪器对象方法名称及参数。其实其中包含一个名称为””的跟踪器（Tracker）。默认情况下，GA代码仅包含一个跟踪器。当需要为一个使用网站使用多个跟踪器（即使用多个网络资源ID收集同一个网站的数据）时，需要按照GA多跟踪器来部署GA。
仅使用默认单独GA代码跟踪单一二级域的流量信息时，可以简单将两段GA代码粘贴到网页源码中，也可以将两个跟踪器写在一个JS中，不需要为每个跟踪器单独指定名称。
但是当使用了进行了自定义设置（比如设定主域名称、虚拟综合浏览量和电子商务跟踪等）的GA代码跟踪时，需要为每个跟踪器指定名称。
因为不指定跟踪器名称，则JS会将最后一个push数据里的网络资源ID作为跟踪器的网络资源ID。使用虚拟页面浏览时，这个页面浏览的信息只会发送给最后一个网络资源ID。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Piwik-文档</title>
   <link href="http://cloga.github.io/%E5%BC%80%E6%BA%90%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2010/12/26/piwik-e69687e6a1a3"/>
   <updated>2010-12-26T17:18:20+08:00</updated>
   <id>http://cloga.github.io/%E5%BC%80%E6%BA%90%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2010/12/26/piwik-e69687e6a1a3</id>
   <content type="html">&lt;p&gt;下面是一些Piwik有用的用户文档。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://piwik.org/docs/installation/&quot;&gt;如何安装Piwik？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你的服务器满足&lt;a href=&quot;http://piwik.org/docs/requirements/&quot;&gt;技术需求&lt;/a&gt;，按照这个一步一步的安装指南，Piwik将在5分钟内运行。对中高流量的网站，看一下&lt;a href=&quot;http://piwik.org/docs/setup-auto-archiving/&quot;&gt;如何设置自动存档页&lt;/a&gt;让Piwik超高速运行！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://piwik.org/docs/update/&quot;&gt;如何更新Piwik？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;阅读如何将Piwik从老版本更新到最新版本的快速指南。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://piwik.org/docs/tracking-goals-web-analytics/&quot;&gt;目标跟踪&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多的了解如何用Piwik创建和跟踪目标，提供了一些博客、电子商务网站及内容网站跟踪的例子。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://piwik.org/docs/javascript-tracking/&quot;&gt;Javascript跟踪&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;了解如何使用Piwik Javascript标签自定义页面名称，跟踪目标或下载。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://piwik.org/faq/&quot;&gt;常见问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看一下关于Piwik最常见的问题，安装、更新、配置、插件等等。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://piwik.org/docs/tracking-api/&quot;&gt;Piwik跟踪API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;了解如何不用Javascript而用图片Tracker，以及/或直接调用HTTP跟踪API用Piwik跟踪用户。
&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://piwik.org/docs/analytics-api/&quot;&gt;Piwik分析API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;你可以使用Piwik分析API请求一个或几个网站的网站分析报告，指定日期或时间（天、周、月、年）。这个API也允许创建、修改和删除网站、用户和目标，因此，Piwik能与你的现有程序轻松整合在一起。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.piwik.org/&quot;&gt;Piwik开发者文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.piwik.org/&quot;&gt;Piwik开发者园地&lt;/a&gt;里可以找到所有的开发者文档：如何使用Piwik API、如何建立插件、教程、数据库模式等等。如果你想熟练掌握Piwik，那么请仔细研究这些内容。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>开源的WA程序 Piwik 介绍</title>
   <link href="http://cloga.github.io/%E5%BC%80%E6%BA%90%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2010/12/19/piwik_overview"/>
   <updated>2010-12-19T21:53:32+08:00</updated>
   <id>http://cloga.github.io/%E5%BC%80%E6%BA%90%E7%BD%91%E7%AB%99%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/2010/12/19/piwik_overview</id>
   <content type="html">&lt;p&gt;Piwik是一款可下载、开源（GPL许可的）实时网站分析软件程序。它为您提供了网站访问者的详细报告：他们所使用的搜索引擎及关键词、他们的语言、您受欢迎的页面…&lt;a href=&quot;http://demo.piwik.org/&quot;&gt;等等&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Piwik旨在成为&lt;a href=&quot;http://google.com/analytics&quot;&gt;Google Analytics&lt;/a&gt;的一个开源替代品。&lt;/p&gt;

&lt;p&gt;Piwik是下载并安装在您的服务器上的一个PHP MySQL软件程序。在5分钟的安装过程之后，Piwik将为您提供JavaScript 标签。只需要将这个标签复制粘贴到你想要跟踪的网站上（或者使用&lt;a href=&quot;http://piwik.org/faq/plugins/#faq_20&quot;&gt;现有的插件&lt;/a&gt;来为您自动完成这一步骤），就可以实时获得您的分析报告。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://piwik.org/wp-content/uploads/2008/01/Piwik-%E2%80%BA-Web-Analytics-Reports-.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;用通俗的话来说，你能查看谁访问了您的页面，什么时间访问了您的页面，如何访问您的页面以及为什么访问您的页面。如果您不会英语，不用害怕。Piwik有&lt;a href=&quot;http://piwik.org/translations/&quot;&gt;30多种语言&lt;/a&gt;（持续增加中）可用。&lt;/p&gt;

&lt;p&gt;是什么使Piwik在竞争中脱颖而出：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;实时的网站分析报告&lt;/strong&gt;：在Piwik中，默认情况下，报告是实时产生的。对于高流量的网站，你能选择报告处理的频率（&lt;a href=&quot;http://piwik.org/faq/general/#faq_41&quot;&gt;了解更多&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;Piwik的功能是构建在内部&lt;strong&gt;插件&lt;/strong&gt;中的：你能添加新功能也可以删除不需要的功能。如果你是一个&lt;a href=&quot;http://dev.piwik.org/&quot;&gt;开发人员&lt;/a&gt;，那么你可以很方便的&lt;strong&gt;构建你自己的网站分析插件！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;你拥有自己的数据&lt;/strong&gt;：因为Piwik是安装在你的服务器上，所以，数据是存储在你自己的数据库中，您能用&lt;a href=&quot;http://dev.piwik.org/trac/wiki/API&quot;&gt;开放的API&lt;/a&gt;（以各种格式：xml、json、php、csv，发布这些数据）获得所有的统计数据
•&lt;strong&gt;完全定制化的用户界面&lt;/strong&gt;：你能拖放想要的小工具，并且创建专门为你定制的报告！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;试试看&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;你可以试一下&lt;a href=&quot;http://demo.piwik.org/&quot;&gt;在线演示&lt;/a&gt;，这个演示版本展示了最新发布的Piwik。请注意Piwik是一个在不断进行的持续工程，一些用户界面部分是正在不断更新！&lt;/li&gt;
&lt;li&gt;如果想要安装Piwik，请下载&lt;a href=&quot;http://piwik.org/latest.zip&quot;&gt;最新发布的版本&lt;/a&gt;，将它上传到你的服务器上（需要PHP5.1以上以及Mysql数据库），打开你的浏览器：安装过程是自动的，只需不到5分钟。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;想要了解更多？&lt;/p&gt;

&lt;p&gt;Piwik正在开发中，我们努力的&lt;a href=&quot;http://piwik.org/the-piwik-team/&quot;&gt;核心团队&lt;/a&gt;正在不断壮大。作为Piwik的一员我们很自豪，但是也乐于花费大量的时间在改进现有的功能或扩展补充新功能（这是一个不断进行的持续工作！）。我们&lt;a href=&quot;http://piwik.org/the-piwik-team/&quot;&gt;有一个Piwik1.0计划&lt;/a&gt;，我们很高兴您想了解更多！我们经常在&lt;a href=&quot;http://piwik.org/blog/&quot;&gt;官方博客&lt;/a&gt;（订阅到&lt;a href=&quot;http://piwik.org/blog/&quot;&gt;rss feed&lt;/a&gt;）中发表新闻和网站分析信息。&lt;/p&gt;

&lt;p&gt;如果你真的想要帮助我们的Piwik，并且有一些空闲时间来帮助我们，那么，你能成为我们全世界团队的一员，并且参与加入到这个有趣的工作中来。例如，你对翻译工作或测试版测试感兴趣，那么可以&lt;a href=&quot;mailto:hello@piwik.org&quot;&gt;通过email&lt;/a&gt;告诉我们。如果你有新的网站分析相关功能的建议或设想，那么不用客气，&lt;a href=&quot;http://forum.piwik.org/&quot;&gt;在论坛中发表您的想法&lt;/a&gt;。我们愿意接受您的想法和贡献，因为我们将这些视为团队合作。&lt;/p&gt;

&lt;p&gt;如果您是一名&lt;a href=&quot;http://dev.piwik.org/&quot;&gt;开发人员&lt;/a&gt;，您一定是有所帮助的。我们的主要目标之一是让外部开发者可以 的为Piwik构建插件。请到开发者园地了解&lt;a href=&quot;http://dev.piwik.org/&quot;&gt;如何构建Piwik插件&lt;/a&gt;。您是否对帮助Piwik的核心感兴趣？有许多有趣的问题需要解决，有许多新功能需要补充，有许多Bug需要修复：更多的信息和链接请查看&lt;a href=&quot;http://piwik.org/contribute/&quot;&gt;投稿页面&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.piwik.org/&quot;&gt;开发者园地&lt;/a&gt;包含了开始所需的所有资源。&lt;a href=&quot;http://dev.piwik.org/trac/roadmap&quot;&gt;路线图&lt;/a&gt;将告诉你我们将去哪里，计划了哪些新功能，考虑了哪些新分析报告，等等。你能&lt;a href=&quot;http://dev.piwik.org/trac/newticket&quot;&gt;报告bug&lt;/a&gt;或者完成&lt;a href=&quot;http://dev.piwik.org/trac/roadmap&quot;&gt;现有的bug报告&lt;/a&gt;。更多的技术问题，你可以询问&lt;a href=&quot;http://lists.piwik.org/cgi-bin/mailman/listinfo/piwik-hackers&quot;&gt;piwik-hackers邮件列表&lt;/a&gt;；我们很乐于帮助您。&lt;/p&gt;

&lt;p&gt;感谢OpenX！&lt;/p&gt;

&lt;p&gt;感谢OpenX使Piwik成为可能，OpenX是开源的广告服务！
注：piwik是&lt;a href=&quot;http://www.phpmyvisites.us/&quot;&gt;phpMyVisites&lt;/a&gt;的&lt;a href=&quot;http://piwik.org/faq/phpmyvisites/&quot;&gt;新的改进版本&lt;/a&gt;。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>报告细分：用高级细分（高级群体）细分访问者</title>
   <link href="http://cloga.github.io/2010/12/12/e68aa5e5918ae7bb86e58886efbc9ae794a8e9ab98e7baa7e7bb86e58886efbc88e9ab98e7baa7e7bea4e4bd93efbc89e7bb86e58886e8aebfe997aee88085-2"/>
   <updated>2010-12-12T23:22:27+08:00</updated>
   <id>http://cloga.github.io/2010/12/12/e68aa5e5918ae7bb86e58886efbc9ae794a8e9ab98e7baa7e7bb86e58886efbc88e9ab98e7baa7e7bea4e4bd93efbc89e7bb86e58886e8aebfe997aee88085-2</id>
   <content type="html">&lt;p&gt;高级细分菜单允许你在报告中细分你的数据。与配置文件过滤器不同，你不需要为高级细分创建单独的配置文件，因为，它保持你的原始数据原样。配置文件过滤器修改页面浏览级别的数据，而高级细分在访问级别改变报告的数据视图、
&lt;strong&gt;注：&lt;/strong&gt;再次重申一下，高级细分作用于整个访问。例如，如果你创建一个等于“页标题匹配X”的高级细分，结果将显示所有查看了X的访问，包括在这些访问中发生的其他页面浏览。
*&lt;em&gt;创建高级细分
*&lt;/em&gt;大多数Google Analytics报告在界面的右上角包含一个高级细分下拉菜单（参见图4.4）。默认情况下，选择的是“所有访问次数”。如果你点击这个选项，它下面的区域将展开，如图8.23所示。这是你选择、创建和管理高级细分的地方。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/12/8-23.png&quot; alt=&quot;&quot;&gt;图8.23  高级细分管理区&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- more --&amp;gt;正如你在图8.23中所看到的，有两个可用的选项：默认群体是预置的并且可以立即使用，自定义群体允许你根据具体的需求创建自己的高级细分。如果你之前没有创建任何自定义群体，那么自定义群体的区域将是空白的。
&lt;strong&gt;默认高级细分
*&lt;em&gt;正如名称所表达的，Google包含了一些预置的高级细分供你使用。
*&lt;/em&gt;所有访问次数&lt;/strong&gt; 未应用任何细分
&lt;strong&gt;新访问者&lt;/strong&gt; 之前未来过你的网站的访问者，假设他们在上一次访问没有删除Google Analytics cookie，或者使用不同电脑或浏览器的回访者。
&lt;strong&gt;回访者&lt;/strong&gt; 之前没有用同一台设备及浏览器查看你的网站的访问者。
&lt;strong&gt;付费搜索流量&lt;/strong&gt; 引介媒介的值设置为cpc、ppc、cpa、cpm、cpv或cpp的访问。
&lt;strong&gt;非付费搜索流量&lt;/strong&gt; 引介媒介的值设置为organic的访问。
&lt;strong&gt;搜索流量&lt;/strong&gt; 包含付费搜索和免费搜索，即引介媒介设置为cpc、ppc、cpa、cpm、cpv、cpp或organic的访问。
&lt;strong&gt;直接流量&lt;/strong&gt; 直接输入你的URL或使用浏览器书签来到你的网站的访问者。未标记的访问也会被归入这一类。见&lt;a href=&quot;http://www.cloga.info/archives/category/web-metrics/chater7&quot;&gt;第7章&lt;/a&gt;关于广告系列跟踪的说明。
&lt;strong&gt;推介流量&lt;/strong&gt; 从其他网站（不是一个公认的搜索引擎）的链接引入到你的网站的访问者。
&lt;strong&gt;带来转化的访问&lt;/strong&gt; 目标完成数大于的访问者。
&lt;strong&gt;来自移动设备流量&lt;/strong&gt; 使用移动设置来到网站的访问。
&lt;strong&gt;非跳出访问&lt;/strong&gt; 包含大于一页或一页加一个事件的访问。见第7章事件追踪的定义。
尽管默认群体方便的满足了常用的细分需求，但是这并不是面面俱到的列表。核对你想要选择的细分——目前一次最多可以选择四个细分（其中的一个是所有访问次数），点击应用完成。你的图表将反映细分数据，如图8.24所示。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/12/8-24.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/12/8-24.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图8.24  默认群体的非付费搜索流量与所有访问次数比较&lt;/p&gt;

&lt;p&gt;如果你想要修改默认群体，那么点击“管理你的高级群体”链接，如前面的图8.23所示。点击你希望修改的默认群体旁边的复制。这为你提供了创建这个细分细节。按你的需求修改这个细分，根据你的目的包含更多的条件和值。一旦你修改了这个默认群体的副本，那么，它将保存在管理高级群体页面的自定义群体部分。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>了解GA的账户结构</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/12/04/e4ba86e8a7a3gae79a84e8b4a6e688b7e7bb93e69e84"/>
   <updated>2010-12-04T09:41:01+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/12/04/e4ba86e8a7a3gae79a84e8b4a6e688b7e7bb93e69e84</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/12/GAaccount.bmp&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/12/account.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/12/account.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;Google一向在多用户管理和账户管理方面做的不错，GA也继承了这些优良传统。GA的账户分为四个层次：Google账户（相当于GA的客户经理）、GA账户（相当于普通的GA客户）、网络资源ID和profile。&amp;lt;!-- more --&amp;gt;
第一个层次是您的Google账户，这个账户是您使用所有Google产品（比如Gmail）时通用的。如果您只管理一个GA账户，那么您可能感觉不到这个层次。每一个账户可以创建的GA账户上限为25个。但是，可以管理的GA账户没有限制。也就是说，你可以通过多个Google账户来创建GA账户，然后将一个GA添加为管理员来对它们进行管理。
第二个层次是GA账户。这个层次推荐对应的是一个网站（如果您想把AdWords关联的话），因为每个Adwords只能与一个GA账户关联。如果您不涉及到AdWords关联的问题的话，那么这个层次也可以是一个GA账户包含多个网站。
第三个层次是网络资源ID（UA）。在GA账户中，您可能没太注意到这个层次，这个层次与Profile是密切关联的。当您选择为新域添加一个profile时，就会创建一个新的网络资源ID。其实网络资源ID实际上是GA数据收集服务器（是的，GA有数据收集服务器和报告服务器）的一个数据集。一个单独的UA对应GA数据收集服务器中的一个数据集，每一个网络资源ID，都需要重新部署GATC，因为，它们的UA不同。
第四个层次是profile。Profile是对应从GA数据收集服务器进入GA报告服务器的数据集，或者可以把它理解为有特定数据产生的一组报告。Profile是通过过滤器产生的，即通过一定的规则将数据收集服务器收集到的数据进行处理，包括过滤流量和改写字段等。每个账户中可以创建的profile上限是50个，貌似超过上限以后和Google联系还可以增加profile数。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>精通Excel在SEM中的应用-第一部分</title>
   <link href="http://cloga.github.io/sem/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2010/11/28/e7b2bee9809aexcele59ca8seme4b8ade79a84e5ba94e794a8-e7acace4b880e983a8e58886"/>
   <updated>2010-11-28T18:46:37+08:00</updated>
   <id>http://cloga.github.io/sem/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/2010/11/28/e7b2bee9809aexcele59ca8seme4b8ade79a84e5ba94e794a8-e7acace4b880e983a8e58886</id>
   <content type="html">&lt;p&gt;自从Excel打败了Lotus成为世界上最受欢迎的电子表格解决方案，它从未曾停下脚步。没有Excel的世界对搜索营销人员来说是无法想象的。我告诉这个行业的新手将他们的小床放到A1单元格中，因为，在他们的接下来的职业生涯中实际上将活在Excel中。说实在的，能够熟练掌握这个“看起来很简单，实际上很困难的”工具，将使他们高人一等。
我希望你们中的大多数接触过下面的Excel技巧，因此，这个列表主要是针对你们团队中那些更初级的成员。但是，我希望其中一些对于最有经验的搜索营销人员来说也能是宝藏。
注：大多数技巧来自Excel2007，但是，这些功能中的大多数也适用于早期&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/123.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/123.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;的版本。
&lt;strong&gt;条件格式。&lt;/strong&gt;Excel定义：当特定条件为真时，Excel自动应用于单元格的底纹或字体颜色。
条件格式是你对抗分析太多数据产生的瘫痪效果的最有力武器。最基本的，你可以根据自己设定的原则突出个别单元格。我们使用Excel最主要的方式是为了优化而查看关键词绩效报告。如果一个关键词，比如说，超过我们的CPA目标150%，那么这个关键词的单元格将自动填充红色，提醒我们这个问题。反过来，如果一个关键词表现很好，可能是我们所期望的CPA目标的75%，将会以绿色突出它，以便让我们知道有一个机会在那里。
正如你在右面的截图中所看到的，不仅仅限于在单元格中填充颜色。数据条、色阶和图标可能帮助你瞬间从视觉上判断特定的指标的表现如何。基本上，excel中任何格式选项，从字体、边框到底纹或其他选项都可以利用。
&lt;strong&gt;如何应用&lt;/strong&gt;：在开始选项卡，点击条件格式按钮打开一个多种可应用的规则集的下拉菜单。如果基础规则不能满足你的要求，那么点击新建规则链接来按照你的需求自定义一个。&amp;lt;!-- more --&amp;gt;
&lt;strong&gt;Concatenation&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;Excel定义：CONCATENATE函数可以将最多255个字符串链接成一个新的字符串。链接的对象可以是文本、数字、单元格的引用或是三者的结合。
当你有多段的文本想要链接在一起时，Concatenation很方便。Concatenation函数最常见的应用是当用Google的创意表生成MSN和Yahoo的创意表时。主要的区别是广告的说明行1和说明行2。在Google中，是两个不同的单元格，而在Yahoo/MSN中，它们被合并为一个。通过使用concatenation，你能将两个说明行合并为一个。这个函数另一个广泛的应用是建立关键词表时。许多时候，你有一些核心词，你只需要添加一些变体，concatenation能够很快的帮你完成这项任务。&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/456.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/456.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;strong&gt;如何应用：&lt;/strong&gt;在公式选项卡上，选择文本&amp;gt; CONCATENATE。弹出窗口将引导你完成选择哪个单元格想要合并的过程。你也可以输入=concatenate()，并且在括号中输入单元格，用逗号隔开。如果你想要使用合并的结果，请确保复制、粘贴值，这样你就能获得实际合并的结果，而不是公式。
&lt;strong&gt;小技巧：&lt;/strong&gt;你也能通过用引号将文本环绕起来，来添加自己的文本，并用这些值来代替单元格引用。例如，在上面的截图中，如果将公式从=CONCATENATE(A1,B1)改为=CONCATENATE(A1,” ”,B1)，将在姓和名之间添加一个空格。
Cloga：使用&amp;amp;符号也能起到类似的作用。
&lt;strong&gt;长度公式。&lt;/strong&gt;Excel的定义：返回字符串的字符数
我在去年的一篇文章中强调了这个相当简单的公式，我想应该在本专栏中重新回顾一下这个函数。只需要输入=lenb()（Cloga：原文中为len()，这里我改成是适合双字节的lenb()），并且输入你想要这个公式计算的单元格，这个公式将让你知道在这个单元格中有多少字符（包含文字之间空格）。我们使用这个函数最主要的任务是帮我遵守引擎给出的字符规则。 &lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/223.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/223.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;strong&gt;如何应用：&lt;/strong&gt;对于这个例子，我使用Google的标准格式，每个说明行35个字符。首先，设置Excel的列（例如，A=标题，B=说明行1，等等）。然后为每一列添加长度列，用excel“长度公式”计算第一个标题列的字符。长度公式是：=lenb(单元格)，在“单元格”中输入你想计算的单元格。
现在你将看到标题列的字符数（包括空格）。下一个步骤是为这些单元格应用条件格式来强调那些超过字符限制的单元格。这样，你就能看到你需要修改的行。
在我的下一篇文章中，我将介绍宏、一些很酷的打印技巧，以及如何选择可视区域，共享一个我最喜欢的Excel技巧。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://searchengineland.com/how-to-excel-at-excel-for-sem-applications-part-1-19840&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>使用Google Analytics的高级网站分析（残本）下载</title>
   <link href="http://cloga.github.io/%E9%BB%98%E8%AE%A4/2010/11/21/e4bdbfe794a8google-analyticse79a84e9ab98e7baa7e7bd91e7ab99e58886e69e90efbc88e6ae8be69cacefbc89e4b88be8bdbd"/>
   <updated>2010-11-21T09:47:43+08:00</updated>
   <id>http://cloga.github.io/%E9%BB%98%E8%AE%A4/2010/11/21/e4bdbfe794a8google-analyticse79a84e9ab98e7baa7e7bd91e7ab99e58886e69e90efbc88e6ae8be69cacefbc89e4b88be8bdbd</id>
   <content type="html">&lt;p&gt;　　书的进度很慢，先放出一个残本，因为仅包含英文版的前三部分，缺少第四部分“用访问者数据驱动网站改进”。&lt;/p&gt;

&lt;p&gt;　　&lt;a href=&quot;http://ishare.iask.sina.com.cn/f/11790089.html&quot;&gt;新浪文档下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　声明：Cloga翻译的《使用Google Analytics的高级网站分析》为非官方的译本，非商业用途，仅为兴趣。如果您喜欢请支持官方版本。&lt;/p&gt;

&lt;p&gt;　　&lt;a href=&quot;http://www.amazon.com/gp/product/0470562315?ie=UTF8&amp;amp;tag=advawebmetr-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0470562315&quot;&gt;&lt;img src=&quot;http://www.advanced-web-metrics.com/images/book-cover-2edition.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.cn/mn/detailApp/ref=sr_1_1?_encoding=UTF8&amp;amp;s=books&amp;amp;qid=1290435037&amp;amp;asin=B0036XAJUO&amp;amp;sr=8-1&quot;&gt;&lt;img src=&quot;http://ec4.images-amazon.com/images/I/51iOSnAR5BL._SL500_AA240_.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>报告细分：用高级细分（高级群体）细分访问者</title>
   <link href="http://cloga.github.io/2010/11/18/e68aa5e5918ae7bb86e58886efbc9ae794a8e9ab98e7baa7e7bb86e58886efbc88e9ab98e7baa7e7bea4e4bd93efbc89e7bb86e58886e8aebfe997aee88085"/>
   <updated>2010-11-18T22:49:52+08:00</updated>
   <id>http://cloga.github.io/2010/11/18/e68aa5e5918ae7bb86e58886efbc9ae794a8e9ab98e7baa7e7bb86e58886efbc88e9ab98e7baa7e7bea4e4bd93efbc89e7bb86e58886e8aebfe997aee88085</id>
   <content type="html">&lt;p&gt;高级细分菜单允许你在报告中细分你的数据。与配置文件过滤器不同，你不需要为高级细分创建单独的配置文件，因为，它保持你的原始数据原样。配置文件过滤器修改页面浏览级别的数据，而高级细分在访问级别改变报告的数据视图、
&lt;strong&gt;注：&lt;/strong&gt;再次重申一下，高级细分作用于整个访问。例如，如果你创建一个等于“页标题匹配X”的高级细分，结果将显示所有查看了X的访问，包括在这些访问中发生的其他页面浏览。
*&lt;em&gt;创建高级细分
*&lt;/em&gt;大多数Google Analytics报告在界面的右上角包含一个高级细分下拉菜单（参见图4.4）。默认情况下，选择的是“所有访问次数”。如果你点击这个选项，它下面的区域将展开，如图8.23所示。这是你选择、创建和管理高级细分的地方。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-23.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-23.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;图8.23  高级细分管理区&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;正如你在图8.23中所看到的，有两个可用的选项：默认群体是预置的并且可以立即使用，自定义群体允许你根据具体的需求创建自己的高级细分。如果你之前没有创建任何自定义群体，那么自定义群体的区域将是空白的。
&lt;strong&gt;默认高级细分
*&lt;em&gt;正如名称所表达的，Google包含了一些预置的高级细分供你使用。
*&lt;/em&gt;所有访问次数&lt;/strong&gt; 未应用任何细分
&lt;strong&gt;新访问者&lt;/strong&gt; 之前未来过你的网站的访问者，假设他们在上一次访问没有删除Google Analytics cookie，或者使用不同电脑或浏览器的回访者。
&lt;strong&gt;回访者&lt;/strong&gt; 之前没有用同一台设备及浏览器查看你的网站的访问者。
&lt;strong&gt;付费搜索流量&lt;/strong&gt; 引介媒介的值设置为cpc、ppc、cpa、cpm、cpv或cpp的访问。
&lt;strong&gt;非付费搜索流量&lt;/strong&gt; 引介媒介的值设置为organic的访问。
&lt;strong&gt;搜索流量&lt;/strong&gt; 包含付费搜索和免费搜索，即引介媒介设置为cpc、ppc、cpa、cpm、cpv、cpp或organic的访问。
&lt;strong&gt;直接流量&lt;/strong&gt; 直接输入你的URL或使用浏览器书签来到你的网站的访问者。未标记的访问也会被归入这一类。见第7章关于广告系列跟踪的说明。
&lt;strong&gt;推介流量&lt;/strong&gt; 从其他网站（不是一个公认的搜索引擎）的链接引入到你的网站的访问者。
&lt;strong&gt;带来转化的访问&lt;/strong&gt; 目标完成数大于的访问者。
&lt;strong&gt;来自移动设备流量&lt;/strong&gt; 使用移动设置来到网站的访问。
&lt;strong&gt;非跳出访问&lt;/strong&gt; 包含大于一页或一页加一个事件的访问。见第7章事件追踪的定义。
尽管默认群体方便的满足了常用的细分需求，但是这并不是面面俱到的列表。核对你想要选择的细分——目前一次最多可以选择四个细分（其中的一个是所有访问次数），点击应用完成。你的图表将反映细分数据，如图8.24所示。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-24.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-24.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;图8.24  默认群体的非付费搜索流量与所有访问次数比较&lt;/p&gt;

&lt;p&gt;如果你想要修改默认群体，那么点击“管理你的高级群体”链接，如前面的图8.23所示。点击你希望修改的默认群体旁边的复制。这为你提供了创建这个细分细节。按你的需求修改这个细分，根据你的目的包含更多的条件和值。一旦你修改了这个默认群体的副本，那么，它将保存在管理高级群体页面的自定义群体部分。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>根据内容细分</title>
   <link href="http://cloga.github.io/2010/11/08/e6a0b9e68daee58685e5aeb9e7bb86e58886"/>
   <updated>2010-11-08T23:30:12+08:00</updated>
   <id>http://cloga.github.io/2010/11/08/e6a0b9e68daee58685e5aeb9e7bb86e58886</id>
   <content type="html">&lt;p&gt;通常在一个网站中，你可能想要满足不同访问者的需求——例如，产品购买VS支持或者公司信息VS客户信息。这些不同需求的测量需要每个部分设置非常不同的目标——因此，有必要使用过滤器创建不同的配置文件。图8.21是根据内容细分的过滤器的例子——在这种情况下，博客读者。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-21.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-21.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; 图8.21  仅包括blog访问者的过滤器&lt;/p&gt;

&lt;p&gt;当然这个过滤器的成功依赖于你有一个秩序井然的网站目录结构。如果你的网站目录结果比较混乱，那么你可以用虚拟页面浏览量构建虚拟结果，如&lt;a href=&quot;http://www.cloga.info/archives/category/web-metrics/chater7&quot;&gt;第7章“trackPageview()：Google Analytics主力”&lt;/a&gt;所述。&amp;lt;!-- more --&amp;gt;
*&lt;em&gt;指定过滤器顺序
*&lt;/em&gt;默认情况下，配置文件的过滤器以添加的顺序应用于进入的数据。但是，你能在你的配置文件设置页面方便的修改这个顺序，从你的账户的配置文件中的指定过滤器顺序链接（见图8.22）。如果这两个过滤器结合使用，那么过滤器顺序对图8.18和图8.19所描述的过滤器非常重要。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-22.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-22.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;
图8.22  指定过滤器顺序（Cloga：订单！囧~）&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>根据广告系列、媒介和推荐来源细分</title>
   <link href="http://cloga.github.io/2010/11/06/e6a0b9e68daee5b9bfe5918ae7b3bbe58897e38081e5aa92e4bb8be5928ce68ea8e88d90e69da5e6ba90e7bb86e58886"/>
   <updated>2010-11-06T20:18:31+08:00</updated>
   <id>http://cloga.github.io/2010/11/06/e6a0b9e68daee5b9bfe5918ae7b3bbe58897e38081e5aa92e4bb8be5928ce68ea8e88d90e69da5e6ba90e7bb86e58886</id>
   <content type="html">&lt;p&gt;正如这一部分所讨论的其他过滤器一样，Google Analytics已经在显示不同的广告系列、媒介和推荐来源上做到很好了。但是，在一些情况下，对这些有一个配置文件，有专门的报告是非常有用的，这可以帮助你更好的优化这些。例如，如果有一个搜索营销代理正在管理你的付费搜索，那么你可能希望仅分离你的付费搜索给他们查看。同样的，如果你雇佣了一个email营销代理，那么你也能仅分离email引入。有一个单独的配置文件为你提供了对报告访问的控制，允许你过滤出噪音并且保护其他潜在的机密数据。如何构建这个过滤器取决于你如何标记着陆页URL（见&lt;a href=&quot;http://www.cloga.info/archives/category/web-metrics/chater7&quot;&gt;第7章“广告系列跟踪”&lt;/a&gt;）。你为utm&lt;em&gt;source、utm&lt;/em&gt;medium和utm_campaign分配的值必须与下列的过滤器字段相匹配：
•广告系列名称
•广告系列来源
•广告系列媒介
为了将仅来自Google的访问者，既包括付费与非付费，过滤到一个配置文件中，这个过滤器的应用如图8.18所示。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-18.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-18-300x176.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt; 图8.18  仅包含Google访问者&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;如果你想要仅跟踪AdWords的访问者，并且这是你正在使用的惟一的付费搜索网络；应用图8.19所示的过滤器。（我假设你在AdWords账户中开启了自动标记。）
如果你进行了其他的付费搜索网络（百度凤巢、Microsoft adCenter、Yahoo Search Marketing等等。），并且这些用utm_medium=cpc标记，那么你将需要按顺序应用图8.18和图8.19两个过滤器。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-19.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-19.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;图8.19  仅包含AdWords访问者的过滤器&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;如果你用utm&lt;em&gt;medium=ppc标记所有其他的PPC广告系列，例如Yahoo Search Marketing、Microsoft adCenter、Miva等等，那么图8.19中所示的过滤器将是Google AdWords访问者与其他付费搜索网络的重要细分。我使用这种技术是因为Google AdWords在网络营销领域相当普遍。将AdWords访问者与其他的PPC网络整体进行比较是非常有用的。
图8.20显示了如何让细分email访问者——即，点击email信息中的链接来到你的网站的访问者，假设你将这些链接标记为utm&lt;/em&gt;medium=email。
正如你所看到的，根据广告系列、来源或媒介是非常简单的，你只需要知道在相应的着陆页URL中这些值是什么，然后，应用这些值作为包含或排除过滤器的字段值。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-20.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-20.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;图8.20  仅包含email访问者的过滤器&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>根据地理位置细分</title>
   <link href="http://cloga.github.io/2010/11/06/e6a0b9e68daee59cb0e79086e4bd8de7bdaee7bb86e58886"/>
   <updated>2010-11-06T20:12:38+08:00</updated>
   <id>http://cloga.github.io/2010/11/06/e6a0b9e68daee59cb0e79086e4bd8de7bdaee7bb86e58886</id>
   <content type="html">&lt;p&gt;Google Analytics显示进入你的网站的访问者的国家做的很好。它甚至分成了不同区域（大陆：美洲、欧洲、亚洲、大洋洲、非洲）以及次大陆（北欧、中欧、东欧、南欧），如图4.15和图5.4所示。但是，如果你的企业在具体的市场上运行，那么你可能想要创建仅关注来自于这些国家的访问者报告的配置文件。例如，北美（加拿大和美国）或者金砖四国（巴西、俄罗斯、印度、中国，缩写为BRIC）能被包含在单独的配置文件中，如图8.17的配置文件所示。
*&lt;em&gt;过滤模式小技巧
*&lt;/em&gt;当决定放置在过滤字段的值时，通常需要参考你的报告。例如，当用国家正交细分页面时，将显示可用的值。请注意，这些值都是英文的。例如，他们显示的Spain、Netherlands、Germany等等，而不是西班牙语、荷兰语和德语。仅在过滤模式中输入报告中的值。也允许部分匹配。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-17.png&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-17-300x176.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;图8.17  根据国家细分访问者&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;通过这种方法，国家经理能够更好的关注于指标而不需要排除不相关的访问。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>五类常用的过滤器</title>
   <link href="http://cloga.github.io/2010/11/02/e4ba94e7b1bbe5b8b8e794a8e79a84e8bf87e6bba4e599a8"/>
   <updated>2010-11-02T21:47:21+08:00</updated>
   <id>http://cloga.github.io/2010/11/02/e4ba94e7b1bbe5b8b8e794a8e79a84e8bf87e6bba4e599a8</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-14.png&quot;&gt;&lt;/a&gt;下面列出了绝大多数Google Analytics用户都在应用的五类最常用的过滤器，没有特定的顺序。大部分是自定义过滤器：
&lt;strong&gt;仅包含你的网站的流量&lt;/strong&gt;  最起码，你应该应用这个过滤器到你的所有配置文件。
&lt;strong&gt;排除特定已知访问者&lt;/strong&gt;  例如，排除你的员工、你的网站代理商等等。
&lt;strong&gt;根据地理位置细分&lt;/strong&gt;  为你的国家经理创建仅包含与他们相关的访问者的配置文件。
&lt;strong&gt;根据访问者的广告系列、媒介或推荐来源细分&lt;/strong&gt;  来自不同推荐网站的访问者可能有不同的目标。
&lt;strong&gt;根据内容细分&lt;/strong&gt;  查看网站特定部分的访问者可能表现出不同的行为，例如，购买VS支持部分。
这些过滤器将在接下来的部分详细讨论。在学习这些之前，你应该熟悉一下正则表达式——见附录A的“正则表达式概述”。
*&lt;em&gt;仅包含你的网站的流量
*&lt;/em&gt;这个自定义过滤器保证你的数据，仅是你的数据，被收集到你的Google Analytics配置文件中。例如，可能其他的人劫持（抄袭）的你的GATC，将相同的代码放到他们自己的页面上。这可能会有意或无意发生，并且这样做相当简单——简单到只需查看你的HTML源码，复制你的GATC。结果是第三方的流量会污染你的结果。用图8.14的包含过滤器仅报告到cloga.info的流量。请注意，反斜杠（）用来转义通配符（.）。这个例子使用了正则表达式语法。你只需将cloga.info替换为你的域名，为每个“.”使用转义符。&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8-14.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;图8.14  仅包含你的网站流量的过滤器&lt;/p&gt;

&lt;p&gt;当然，你也可能想要将你所控制的多个网站的数据汇总到一个配置文件中。在这种情况下，在过滤模式中添加多个域名，用竖线隔开——例如，cloga.info|cloga.org。
&lt;strong&gt;小技巧：&lt;/strong&gt;在我看来，这是适用于你的配置文件的最重要的过滤器，并且是最佳配置的第一步。这确保了你的数据保持干净，并且避免了GATC劫持。如果你的账户仅应用一个过滤器，那么一个就是这个过滤器。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>过滤器的逻辑</title>
   <link href="http://cloga.github.io/2010/11/01/e8bf87e6bba4e599a8e79a84e980bbe8be91"/>
   <updated>2010-11-01T22:36:09+08:00</updated>
   <id>http://cloga.github.io/2010/11/01/e8bf87e6bba4e599a8e79a84e980bbe8be91</id>
   <content type="html">&lt;p&gt;如果应用排除过滤器，并且数据记录与过滤模式相匹配，那么Google Analytics将扔掉这条页面浏览，并且继续处理下一条数据记录。如果过滤模式不匹配，那么下一个过滤器（如果有的话）将应用于这一个数据行。这意味着，你既可以创建包含用竖线（|）隔开的多个过滤模式的单个排除过滤器，也可以创建每一个仅包含一个过滤模式的多个排除过滤器。下面是几个例子：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;单个排除过滤器&lt;/strong&gt;  排除来自217.158.66.33|21.7.158.67.1的流量
这个正则式的意思是排除来自一个IP地址和另一个IP地址的流量。用两个分开的、一个接一个处理的过滤器也能达到这个目的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;过滤器1/2&lt;/strong&gt;  排除来自217.158.66.33的流量&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;过滤器2/2&lt;/strong&gt;  排除来自21.7.158.67.1的流量&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;过滤器的过滤模式不能大于255个字符。附录A给出了构建正则表达式的概述。&lt;/p&gt;

&lt;p&gt;应用包含过滤器的逻辑正相反。应用一个包含过滤器时，如果数据与过滤模式不相符时，这个数据条目将被扔掉。如果你应用多个包含过滤器，那么这是一个重要的区别，因为，这样的话，数据条目必须与每一个包含过滤器相匹配，以便数据条目被存储。例如，如果你为使用你们网络IP地址的内部（员工）访问者使用了一个包含过滤器，那么，再添加一个过滤器，比如，Google搜索访问者，是没有意义的。这种组合不会产生一个内部访问者加Google访问者的报告。这个报告将仅是内部访问者，假设这个过滤器先应用的话，因为在这个过滤器处理的时候，所有的其他东西都被排除了。&lt;/p&gt;

&lt;p&gt;与排除过滤器的情况类似，为一个字段包含多个模式，可以创建一个包含过滤器，这个过滤器包含所有的表达式，表达式之间用竖线（|）分开。&lt;/p&gt;

&lt;p&gt;**使用多个包含过滤器&lt;/p&gt;

&lt;p&gt;**最佳实践建议是每一个配置文件最多分配一个包含过滤器，除非你有特殊的需要并且对了解由此产生的逻辑实现。&lt;/p&gt;

&lt;p&gt;**自定义过滤器：可用字段&lt;/p&gt;

&lt;p&gt;**构建你自己的自定义过滤器使你能完成许多Google Analytics预设的默认过滤器所无法完成的事情。实际上，你能过滤报告中所展示的每一个可用数据字段。&lt;/p&gt;

&lt;p&gt;表8.5和表8.6列出了所有可用的字段及其目的。表8.5列出了用户定义的变量，这些变量的值是由Google Analytics的实施所决定的，例如，着陆页的广告系列参数、电子商务字段等等。
接下来的部分将讨论这些字段在自定义过滤器中的应用。&lt;/p&gt;

&lt;p&gt;表8.5  常规字段列表&lt;/p&gt;

&lt;p&gt;表8.6  用户定义的变量&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>创建配置文件过滤器</title>
   <link href="http://cloga.github.io/2010/11/01/e5889be5bbbae9858de7bdaee69687e4bbb6e8bf87e6bba4e599a8"/>
   <updated>2010-11-01T22:25:21+08:00</updated>
   <id>http://cloga.github.io/2010/11/01/e5889be5bbbae9858de7bdaee69687e4bbb6e8bf87e6bba4e599a8</id>
   <content type="html">&lt;p&gt;为了创建配置文件过滤器，与管理员身份登录你的Google Analytics，点击你想要添加新过滤器的配置文件名旁的修改，然后向下滚动，点击添加过滤器链接。创建新过滤器对话框如图8.13所示。注意一旦你创建过滤器，你能将它应用到账户中的其他配置文件。&lt;/p&gt;

&lt;p&gt;图8.13  添加一个新的过滤器&lt;/p&gt;

&lt;p&gt;Google Analytics为你提供了预定义过滤器及自定义过滤器：&lt;/p&gt;

&lt;p&gt;• 预定义过滤器是完成最常用的过滤任务的方便、快捷的方式，如表8.3所示。&lt;a href=&quot;http://www.google.hk/support/googleanalytics/bin/answer.py?answer=55496&quot;&gt;http://www.google.hk/support/googleanalytics/bin/answer.py?answer=55496&lt;/a&gt;介绍了“如何创建预定义过滤器”。&lt;/p&gt;

&lt;p&gt;• 自定义过滤器允许对数据的更高级操作，表8.4列出这些过滤器。&lt;a href=&quot;http://www.google.hk/support/googleanalytics/bin/answer.py?answer=55492&quot;&gt;http://www.google.hk/support/googleanalytics/bin/answer.py?answer=55492&lt;/a&gt;介绍了“如何创建自定义过滤器”。下面大部分的过滤器例子是使用自定义过滤器。
&amp;lt;!-- more --&amp;gt;&lt;/p&gt;

&lt;p&gt;表8.3  预定义过滤器
&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8.3.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8.3.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;表8.4  自定义过滤器
&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8.4.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/11/8.4.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cross-segmenting Driil Down的前世今生</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/09/01/cross-segmenting-driil-downe79a84e5898de4b896e4bb8ae7949f"/>
   <updated>2010-09-01T23:33:06+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/09/01/cross-segmenting-driil-downe79a84e5898de4b896e4bb8ae7949f</id>
   <content type="html">&lt;p&gt;说实话，我以前和Cross-segmenting（或者Cross-segmentation）也不熟，如果没有Brian大神的书，估计我还不认识他，或者给他起个和阿姆斯特朗（Armstrong）一样酷的名字，叫他克罗斯西格门庭。又或者每天看到他的Google官方中文代号：跨群体细分，而不知道这是指他。&lt;/p&gt;

&lt;p&gt;让我们来仔细认识一下Cross-segmenting，cross：交叉、十字；segment：分割。让我们组合一下，得到如下的信息：交叉分割、十字分割。叫他什么好呢？看一下Brian大神的解释：Cross-segmenting是用于一组数据与另一组数据的交叉参照或相关的术语。相关~恩，我想到了因素分析中正交变换，因素之间不相关称为正交，Cross-segmenting的维度之间本来就不相关，OK，就叫他正交细分吧，也许交叉参照，交叉细分的名字更适合他。尽管我查到正交的英文应该是Orthogonal（正交实验法为Orthogonal experimental design），但我还是使用了这个名字，这也许就和Google官方将Advanced segments译为高级群体一样，难以解释吧。&lt;/p&gt;

&lt;p&gt;再来看一下Drill down，我和drill down比和cross-segmenting熟，之前看过一些关于数据挖掘东西，了解一些数据立方体的基本概念。其实GA就属于数据挖掘、数据仓库理论的应用，比如维度（dimention）和指标（metrics）。driil down（下钻）和roll up（上卷）其实说白了就相当于汇总和细分。比如你看来自全世界的访问，然后只看中国的访问这就是在地区这个维度上的下钻；如果你先看北京市的流量，又看中国的流量这就是上卷。&lt;/p&gt;

&lt;p&gt;那么Cross-Segmenting Drill Down是什么意思呢？&lt;/p&gt;

&lt;p&gt;我理解按照Brian大神的意思，当你查看来源媒介报告时，你对来自google/organic的流量产生了兴趣，于是你点击链接进入了来源媒介详情，然后你又选择了关键词，那么这就是正交细分下钻。下钻到google/organic，正交细分了搜索来源与关键词两个维度。如果此时，你在第二个维度中选择市/县，那么这就属于Secondary Cross-Segmenting Drill Down（二次正交细分下钻）。&lt;/p&gt;

&lt;p&gt;如果你在查看来源媒介报告时，除默认的指标来源/媒介指标外，你还同时选择了关键字这个维度，那么这属于次级维度（Secondary Dimensions）的使用。如果此时，你在过滤器中包含google/organic，就能获得与上面同样的效果。&lt;/p&gt;

&lt;p&gt;整理一下，如果你使用了两个维度就属于正交细分，如果你在一个维度中下钻后，正交细分另一个维度，那就是正交细分下钻，而如果你在一个维度下钻后，正交细分于另外两个维度就属于二次正交细分。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>发现性与内部报告入口</title>
   <link href="http://cloga.github.io/2010/08/31/e58f91e78eb0e680a7e4b88ee58685e983a8e68aa5e5918ae585a5e58fa3"/>
   <updated>2010-08-31T22:42:14+08:00</updated>
   <id>http://cloga.github.io/2010/08/31/e58f91e78eb0e680a7e4b88ee58685e983a8e68aa5e5918ae585a5e58fa3</id>
   <content type="html">&lt;p&gt;来自其他网站分析工具的使用者普遍抱怨工具产生数据的庞大数量是惊人的，很难找到。结果导致报告使用者的迷失和产生挫折感（无法解释信息），甚至网站测量项目由于这一点而搁置。这些反馈使Google建立了相对于数据，专注于用户（通常是营销人员）的直观的Goole Analytics报告界面。这个改进的用户界面设计（负责这个项目的团队来自Google在2006年收购的MeasureMap）已被证明在用户体验方面非常成功，这种样式已被整个Google所采用，例如，看一下你现在能在AdWords、AdSense、FeedBurner以及Google搜索解析的地图概览所能看到的相同样式的图片。
除了数据变得更加易于获得以外，用户界面也增强了发现性。在这里我是指你可以轻松的确定你所看到的报告对企业来说是好消息、坏消息还是不关紧要。换句话说，Google Analytics简化了将原始数据转化为有用的信息的过程，这样你就能采取适当的行动，比如，奖励你的团队、补救一些东西或改变你的标准。
Google Analytics的下钻界面与采用菜单驱动式导航的其他网站分析工具不同。如果你喜欢的话，你可以选择菜单导航，但是，Google Analytics的界面使在上下文中探索数据更加容易——即，在数据中，因此，你不必为了回答你的疑问，而在报告之间来回导航浪费时间。另外，在报告间推荐相关信息的链接以及快速交互的细分，使你能在运行过程中整理数据。简短的说明、记分卡以及波谱图在各个水平概括你的数据。而且，为了帮助你理解、解释及按照数据关系采取行动，在每个报告都有相关的帮助及转换学堂的文章。
&lt;strong&gt;注：&lt;/strong&gt;波谱图是一个图形化数据的小图片（小样），这使你能将数字放在一个时间背景中，&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-0.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-0.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;而不必显示整个图表。例如，右面的屏幕截图显示了一组数据，数字自身可能是无意义的，但是，波谱图在上下文中展示这些数字，描述了所选择的时间段的趋势。它是表达大量信息的简明整洁的方式。
假如你已经有（或者曾进入过）一个Google Analytics账户，图4.1形象解释了访问报告的过程。与其他Google产品相同，通过Google账户（一个在Google注册的邮箱地址，可以是你手中的任何邮箱地址，比如me@my-organization.com）进入Google Analytics账户。你的Google账户是总接入点。从这里，你能进入多个Google Analytics账户，每一个账户有多个配置文件（报告集）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-1.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图4.1 访问Google Analytics报告过程示意图&lt;/p&gt;

&lt;p&gt;当你第一次登录Google Analytics账户，展现在你面前的将是两种可能的概述界面之一。在大多数情况下，你将进入一个单一的Google Analytics账户，在这种情况下，你将看到配置文件概述界面，如图4.2所示。但是，在代理商的情况下，你将有权访问多个Google Analytics账户，于是，你将看到账户概述界面，如图4.3所示。这些访问点是有等级的，在图4.1中分别标记为B)和A)。如果你是一个代理商，点击图4.3中名称列的第一个名称，例如网站1，将进入该账户的配置文件概述报告。
在这一步，配置文件被定义为一个报告集，即，专门用于特定目的（例如，英国访问者和美国访问者等等）的一组Google Analytics报告。配置文件的使用将在第六章“起来与Google一起奔跑”中的标题为“账户与配置文件的使用”部分讨论。
&lt;strong&gt;注：&lt;/strong&gt;代理商需要注意的事项将在第六章的“代理商和代理服务提供商：建立客户账号”部分讨论。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-2.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图4.2 单一Google Analytics账户的配置文件概述报告&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-3.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/4-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图4.3 多账户Google Analytics账户（代理商的情况）的账户概述报告&lt;/p&gt;

&lt;p&gt;两个概述报告都默认将显示的高级指标的表现与上个月进行比较，即，假设今天是这个月的X号，报告的默认日期范围是从上个月的X号到这个月X-1号。默认是不包括今天的，因为这样查看数据是最不准确的——网站分析准确性的考虑的详细讨论，见第二章“现有的方法及其准确性”。
为了突出数据的变化，图4.2和图4.3的倒数第二列显示了当前报告时间段与前一个相同的时间段（即前一个月）相比，变化的百分比。默认显示的指标是访问次数。但是，也可以选择平均网站停留时间、跳出率或已完成目标。通过数据表上方的按钮，你能将这些指标的比较时间段改变为天、周或年。
如果你创建了Google Analytics账户，或者被授予了管理员权限，那么，你能完全控制这个账户，图4.2和4.3将显示额外的列包含修改或删除链接。另一种访问类型是报告查看者，没有管理权限。如果你仅是报告报告查看者，最后一列将是空白的，没有删除和修改权限。Google Analytics账户的管理将在第八章“最佳配置指南”中讨论。
&lt;strong&gt;警告：&lt;/strong&gt;当比较月与月或年与年的概述报告数据时，不要过分强调很小的百分比变化。例如，月与月可能有不同的天数，四月30天，而三月31天。如果三月与四月每一天的已完成目标相同，那么四月的总数将比三月低3.3，这仅仅是因为四月少一天。这种差异将由于每个月的周末数量的不同而更加显著，例如，比较一月与二月。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>启用自动标记后的测试</title>
   <link href="http://cloga.github.io/2010/08/31/e590afe794a8e887aae58aa8e6a087e8aeb0e5908ee79a84e6b58be8af95"/>
   <updated>2010-08-31T00:22:55+08:00</updated>
   <id>http://cloga.github.io/2010/08/31/e590afe794a8e887aae58aa8e6a087e8aeb0e5908ee79a84e6b58be8af95</id>
   <content type="html">&lt;p&gt;正如在第2章“&lt;a href=&quot;http://www.cloga.info/archives/133.html&quot;&gt;为什么PPC服务提供商的数据与网站分析报告不符&lt;/a&gt;”的部分所讨论的，第三方广告跟踪系统能无意中损坏或去除Google Analytics跟踪AdWords所需要的gclid参数。例如，Adform、Atlas Search、Bluestreak、DoubleClick以及Efficient Frontier等跟踪系统，使用重定向URLs来在企业之外收集访问者统计数据。这些跟踪系统可能无意中破坏了AdWords的glicd。因此，在启用自动跟踪之后通常需要通过点击一个Google搜索结果页的一个广告样本来进行检查。&lt;/p&gt;

&lt;p&gt;如果测试失败，那么请联系你的第三方广告跟踪提供商，因为这可能很好解决。例如，你的AdWords自动标记的着陆页URL可能看起来是这样的：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/?gclid=COvQgK7JrY8CFSUWEAodKEEyuA&quot;&gt;http://www.cloga.info/?gclid=COvQgK7JrY8CFSUWEAodKEEyuA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果第三方跟踪系统使用了重定向，那最终着陆页将是这样：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redirect.com/?url=http:/www.cloga.info/?gclid=COvQgK7JrY8CFSUWEAodKEEyuA&quot;&gt;http://www.redirect.com?url=http://www.cloga.info/?gclid=COvQgK7JrY8CFSUWEAodKEEyuA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注意两个“？”——这是无效的，因为你不能在一个URL中有两个问号。一些第三方跟踪系统可能需要你用#代替第二个？，这样URL就能被正确处理。这应该是第三方广告跟踪系统的事，而不是AdWords的。另一种解决方案是为着陆页添加一个编码的虚拟变量，如：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/%3Fdum=1&quot;&gt;http://www.cloga.info/%3Fdum=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AdWords自动标记将添加gclid&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/%3Fdum=1%EF%BC%86gclid=COvQgK7JrY8CFSUWEAodKEEyuA&quot;&gt;http://www.cloga.info/%3Fdum=1＆gclid=COvQgK7JrY8CFSUWEAodKEEyuA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这样就行了。即URL将为Google Analytics的跟踪保留gclid参数的正确格式。然后，你可以在Google Analytics配置设置中排除虚拟变量的跟踪（见第8章“初级设置”）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;如果你已经在着陆页的URL中有参数，那么你不需要添加虚拟参数。但是，你能需要将？改为其等效的编码%3F。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics及Urchin之间选择的标准</title>
   <link href="http://cloga.github.io/2010/08/30/google-analyticse58f8aurchine4b98be997b4e98089e68ba9e79a84e6a087e58786"/>
   <updated>2010-08-30T22:28:55+08:00</updated>
   <id>http://cloga.github.io/2010/08/30/google-analyticse58f8aurchine4b98be997b4e98089e68ba9e79a84e6a087e58786</id>
   <content type="html">&lt;p&gt;下表详细列出了，当选择Google的网站分析工具时，应考虑一些关键问题。一般来说，除了内网以外，大多数Urchin被网络托管服务提供商所使用，对他们来说对大量网站实施的可扩展性是重要的。除了作为免费服务以外，Google Analytics被那些希望更好的控制他们的个性化网站分析实施的网站所使用。
&lt;strong&gt;什么时候Google Analytics最适合&lt;/strong&gt; •如果你正在测量网站是否成功，它的转化能力以及网络营销效果，请选择Google Analytics。因为它实施更简单，更好的集成的AdWords，相对来说是免维护的。
&lt;strong&gt;什么时候Urchin最适合&lt;/strong&gt; 如果你面对一些情况，请选择Urchin：
•你有一个在防火墙内的、与互联网隔绝的内网。Google Analytics是一种托管解决方案，需要访问互联网来工作。
•你无法标记你的页面。
•你是一个托管服务提供商，希望为几千个客户提供访问者报告。Urchin有命令行界面，能通过脚本一次穿件和修改多个网站报告。即，Urchin对大规模的多用户实施有更大的灵活性。
&lt;strong&gt;什么时候你需要二者结合&lt;/strong&gt; 如果你需要访问者数据维护的灵活性，例如，目的是第三方的审查，那么你需要二者结合。Google Analytics与Urchin软件的结合可以两全其美——Google Analytics的先进特点（免费）和Urchin的灵活性（数据控制）。第6章讨论了如何配置你的页面标签，使数据同时流向Google Analytics和Urchin。
&lt;strong&gt;注：&lt;/strong&gt;一些第三方硬件解决方案能在运行中，即当从服务器请求页面时，自动帮你插入Google Analytics页面标签。他们用位于网络中（网络服务器前）的代理服务器来做到这一点。例如，见www.clickstream.com/googleanalytics。
我个人的观点是尽可能使用Google Analytics。它易于实施，有更漂亮的用户界面（业内最好的地图覆盖图报告），主要面向数字营销人员。Urchin软件应被用于需要Google Analytics所无法满足的特殊技术的地方。Urchin尽管能匿名跟踪个体访问者，但是没有网站内点击量分布图和站内搜索报告。如果可以的话，请使用同时这两个工具。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics与Urchin的不同点</title>
   <link href="http://cloga.github.io/2010/08/30/google-analyticse4b88eurchine79a84e4b88de5908ce782b9"/>
   <updated>2010-08-30T22:27:31+08:00</updated>
   <id>http://cloga.github.io/2010/08/30/google-analyticse4b88eurchine79a84e4b88de5908ce782b9</id>
   <content type="html">&lt;p&gt;有两个来自Google的分析产品可以选择，如何才能决定哪一个适合你的企业？也许从本书的书名中你能猜出，Google Analytics对大多数企业来说都是完美的，有两个非常简单理由：
•Google Analytics是一项免费的服务。对分析预算紧张的中小企业来说，这通常被认为是最大的优点。而Urchin软件是一个授权产品，因此必须付费（目前是每次安装2995美元）。
•Google Analytics免除大部分IT费用。即，Google为你完成数据收集、存储、程序维护、升级。对于那些网站分析对市场营销部门很重要，而对IT部门则可有可无的大企业来说，这通常被认为是最大的优点。如果你的企业正在使用Urchin软件，则需要承担IT费用。因此，需要良好的跨部门沟通（IT部门与营销部门）。
第二点并不是无足重轻的。事实上，以我的经验，实施工具的IT费用是为什么尽管网站分析的领域如此巨大，而仍是小众市场的主要原因。维护你的日志文件是一笔支出，主要因为网站服务器日志文件会很快变得很大。例如，每1000次访问产生大约4M的日志信息。因此，每个月10000次访问，每年大约是500M。如果你每个月有100000次访问，每年5G，以此类推。这仅仅是估计——对于你的网站，这些很可能翻倍。每天管理大量的日志文件对于IT部门来说不是什么好玩的事。
Urchin处理过的数据（存储在专利数据库）也需要硬盘空间。尽管这通常比收集的原始数据小，但是，存储和归档所有这些信息仍是一项重要的工作，因为，如果你用尽了硬盘空间，你将承受来自硬盘写入错误的文件或数据库损坏的风险。这类文件损坏几乎是不可能恢复的。
另外，如果你维护自己的访问者数据日志，那么收集到的隐私信息（你的访问者）的安全性也将成为你的责任。
那么，你又为什么会考虑Urchin软件呢？Urchin软件确实有一些优于Google Analytics的地方。例如，数据在你的网站服务器上存储，而不是流向Google，这意味着以下优点：
&lt;strong&gt;数据加工和再加工&lt;/strong&gt; Urchin能随时处理数据，例如，每小时准时。你也能重新处理数据，向过去的数据应用一个过滤器，或者修正一个过滤器错误。Google Analytics的报告有三到四小时的延迟，不能重新处理过去的数据（在我看来，数据再加工是Urchin的最大优点。）
&lt;strong&gt;不受限制的数据存储&lt;/strong&gt; Urchin能尽可能长的保存和查看数据。Google Analytics目前承诺保存最多25个月的数据，尽管到目前为止，Google还没有想要删除25个月之前的数据，见图3.1。
&lt;strong&gt;第三方审查&lt;/strong&gt; Urchin允许你的数据被独立的第三方审查。这通常对出售广告位的广告发布者很重要，他们需要验证访问者数量，为他们的广告主提供信誉（相信他们的广告收费）。Google Analytics不能向第三方传送数据。
&lt;strong&gt;内网与防火墙&lt;/strong&gt; Urchin在防火墙之后工作，即它适用于企业内网。Google Analytics无法在封闭的防火墙内使用。
&lt;strong&gt;数据库存取&lt;/strong&gt; Urchin在本地的专利数据库中存储数据，包含能用来在外部的浏览器访问原始数据的工具，允许你进行即时需求查询。Google Analytics将数据远程存储在Google遍布世界各地的数据中心的专利数据库中，不提供直接访问原始数据的即时需求查询。这就是说，Google Analytics不允许你查询已处理过的数据。
&lt;strong&gt;注：&lt;/strong&gt;Urchin仅通过Urchin软件授权顾问销售（USAC）和提供支持。USAC的完整目录，见www.google.com/urchin/usac.html。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>什么是Urchin</title>
   <link href="http://cloga.github.io/2010/08/30/e4bb80e4b988e698afurchin"/>
   <updated>2010-08-30T22:25:33+08:00</updated>
   <id>http://cloga.github.io/2010/08/30/e4bb80e4b988e698afurchin</id>
   <content type="html">&lt;p&gt;尽管本书重点关注Google Analytics，但是仍有必要提一下，Google有两个网站分析产品：Google Analytics和Urchin软件。
Urchin软件公司是Google在2005年4月收购一个的软件公司，同时也是一种技术，后来变成了Google Analytics——一种使用Google资源的免费网站分析服务。Urchin软件是一种可下载的、在本地服务器（Unix or Windows）运行的网站分析工具。通常，本地服务器这与网络服务器一样。Urchin软件通过处理网站服务器日志文件（包括混合型的）生成报告，这通常被称为是服务器端网站分析。第二章曾讨论这种方法。图3.5和图3.6是Urchin软件（V6）的截图。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-5.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-5.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;图3.5 Urchin 6的管理员配置界面&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-6.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-6.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;图3.6 Urchin 6的访问者报告&lt;/p&gt;

&lt;p&gt;A是个体（匿名）访问者信息，B是按日期排列的访问，C是路径及特定访问所产生的交易信息
Urchin的技术本质上与Google Analytics相同——所不同的是使用Urchin时，日志存储和数据处理的资源是由您的企业提供的。如表2.1所示，日志文件法能报告仅使用页面标签法所不能提供的信息。因此，Urchin软件提供Google Analytic目前所没有的（或者由于其方法所不能的）补充报告。让我们来看一些例子：
&lt;strong&gt;访问者历史报告&lt;/strong&gt; 跟踪个体访问者不仅能让你看到访问者来到你网站的路径，同时也能看到他的推介信息。正如在前面章节中所讨论过的，由于隐私原因，Google慎重的决定不用Google Analytics跟踪个体。但是，因为数据的收集和处理都在你的控制之下，你有用Urchin这样做的自由。每个访问者都是被匿名跟踪。
&lt;strong&gt;错误页面/状态代码报告&lt;/strong&gt; 除了仅报告已完成的综合浏览量（与Google的情况类似）之外，Urchin还能报告部分下载和任何错误代码。
&lt;strong&gt;带宽报告&lt;/strong&gt; 带宽报告让你了解你的页面有多“重”，以及这如何影响访问者的体验。
&lt;strong&gt;登录报告&lt;/strong&gt; 如果的你的网站有登录区域，那么你能通过用户名来报告这类进入。支持标准的Apache（.htaccess）或在服务器中记录用户名的任何认证。
&lt;strong&gt;注：&lt;/strong&gt;正如在第九章中所讨论的，可以通过设置让Google Analytics报告错误页面。但是，对于Urchin软件无需额外的操作即能报告错误页面，因为服务器默认跟踪这些。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics有什么不同？</title>
   <link href="http://cloga.github.io/2010/08/30/google-analyticse69c89e4bb80e4b988e4b88de5908cefbc9f"/>
   <updated>2010-08-30T22:19:04+08:00</updated>
   <id>http://cloga.github.io/2010/08/30/google-analyticse69c89e4bb80e4b988e4b88de5908cefbc9f</id>
   <content type="html">&lt;p&gt;2005年11月11日，Google Analytics发布，公告的一个主要部分是本产品免费。这是业内的一个转折点。一夜之间，Google改写了整个行业的商业模式——当其他人根据流量收费时，免费赠送企业级的网站分析工具。
该决定产生了极大的影响。曾经只有几万个客户的行业现在客户激增。事实上，有意思的是，将新的服务器分配到Google数据中心以进行这些数据运算任务期间，新用户的服务申请关闭了10个月之久。但是，当我们重新开放申请时，Google Analytics的用户基础迅速扩大，在几个月内，超过了一百万。
俗话说，“天下没有免费的午餐”，但是，这种商业精神已经被改写：提供免费的商品，从其他地方获利。在过去15年里，提供免费产品是互联网发展的主要动力。早期是Linux、Apache、Hotmail等产品，后来，由Google、Mozilla (Firefox)、Facebook、YouTube、 Twitter等产品进一步发扬。
对于Google Analytics来说，“其他地方”是指Google的广告产品——AdWords和AdSense。Google通过提供一个工具帮助网站站长，特别是数字营销人员，理解网站的性能，希望你能对它的网络广告产品充满信心，进而投入更多的资金。因此，Google Analytics为这些带来收入的产品提供透明度和问责性（Google以它200亿美元的年营业额成为全球网络广告业的佼佼者）。
&lt;strong&gt;注：&lt;/strong&gt;很多书讨论了Google及其同行免费、开源的商业精神。我推荐其中的精品，比如：Chris Andersson、John Battelle和Seth Godin所写的书。
尽管来自Google的数据收集和报告是免费的，但是，企业正确实施Google Analytics、员工训练和见解收集都需要投资。但是，无论你是否是一个广告主，Google Analytics的使用都是免费的。惟一的条件是，如果你每个月有500万以上的综合浏览量，那么你需要开一个AdWords账户，正如Google Analytics的服务条款中所描述的。每天花1美元也足以让你收集和报告的综合浏览量不受限制。
&lt;strong&gt;面向数字营销人员而不是IT部门&lt;/strong&gt;
不仅过去甚至今天很大程度上，网站分析服务提供商仍向IT部门出售他们
的产品。因此，企业的关注点是功能、技术、复杂程度及使用这些工具需要的高预算。为了说明这一点，图3.3是来自2008年对在内部实施网站分析的企业的调查。尽管，这是一个以英国为主的调查，但是其结果也适用于其他市场——即，网站分析支出的大部分用于工具本身（数据的收集和报告），而不是用于可以带来改进的事物，例如训练员工和外部咨询。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-3.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-4.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;来源：网站分析买家指南，2008年，Econsultancy.com
图3.3 典型企业网站分析支出细目&lt;/p&gt;

&lt;p&gt;Google Analytics的做法与行业趋势正相反（我加入这个公司的另一个关键原因！）。通过简化实施、降低复杂程度以及消除了实施的资金障碍，及免费提供产品，来面向营销部门，已被证明是非常成功的。图3.4是Google Analytics所提倡的另一种方法的示意图。 &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-4.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-4.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图3.4 Google Analytics提倡的分析支出细目&lt;/p&gt;

&lt;p&gt;因此，Google Analytics的哲学是让你的预算专注于建议而不是数据。这样，你更可能向网络产品，比如Adwords和Adsense投资。
小技巧：更多的Google Analytics方法和视角，请看Occam’s Razor（kaushik.net/avinash），Avinash Kaushik的热门博客，Google Analytics的官方推广专家，作者，一个无所不能的好人。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics与隐私</title>
   <link href="http://cloga.github.io/2010/08/30/google-analyticse4b88ee99a90e7a781"/>
   <updated>2010-08-30T22:09:05+08:00</updated>
   <id>http://cloga.github.io/2010/08/30/google-analyticse4b88ee99a90e7a781</id>
   <content type="html">&lt;p&gt;你们中读过我的blog或听过我的讲座的人，知道我是最终用户隐私权的坚决拥护者，即，当使用网络时，最终用户（公众）不会以任何可识别的方式跟踪的权力。
必须清楚的是，为最终用户提供这种不被识别权力，并不意味着通过读一个啰嗦的、充满行话的条款和条件，来给用户选择退出的选择（举一个例子，MySpace.com现在的隐私政策有2752个词，明显是一个法律专家写的，而不是从最终用户的角度出发）。相反，默认的立场应该是仅以匿名、聚合的方式跟踪访问者，除非他们表示出选择加入的许可。这是最佳的做法，并且将保证你获得访问者和顾客（通常对企业有益的的人）的信任和忠诚。
正如在前面的部分所讨论的，所有Google Analytics的报告都包含聚合的非个人身份信息。这是Google关于它产品的谨慎思考后的政策。根据我的个人经验，这是来自企业高层的一种远见和承诺，在我决定为Google工作时发挥了重要的作用、
记住这一点，Google Analytics跟踪方案中涉及三方：Google、独立网站、网站的访问者。Google设计了它的隐私政策，告诉这些参与者，要求每一个使用Google Analytics的网站都要遵守服务条款中的隐私保护条款，尤其是第7部分（见www.google.hk/analytics/tos.html）：
在您（或第三方）使用服务的过程中，您不得自行（且不得允许任何第三方）使用服务以跟踪或收集互联网用户的个人身份信息，也不得自行（且不得允许任何第三方）将从您的网站（或该第三方的网站）收集的任何数据与从任何来源获得的任何个人身份信息相联系。您应制定并遵守适当的隐私权政策并应遵守关于从您的网站的访问者收集信息的一切适用法律。您必须公布隐私权政策，该隐私权政策必须公告您在使用一个收集匿名流量数据的cookie 。
&lt;strong&gt;注：&lt;/strong&gt;tos.html第7部分的内容可能不同，这取决于你所工作的国家。确保你通过页面顶部的下拉菜单，看了大部分相关服务条款。
Google Analytics的cookies以匿名的形式，收集了标准的互联网日志数据以及访问者行为信息。他们并没有收集任何个体信息，比如，地址、名字或信用卡号。日志包括标准日志信息，比如IP地址、时间、日期戳、浏览器类型和操作系统。行为信息包括一般的浏览信息，比如浏览页数、语言设置、浏览器屏幕分辨率设置，并且包括关于用户在网站上是否完成目标的信息。网站能将目标定义为不同的东西，比如访问者是否下载一个PDF文件，是否完成一次电子商务交易、是否访问多页等等。请注意Google Analytics不能在多个不相关的网站上跟踪访问者，因为每一个网站使用不同的cookies。
Google Analytics为使用它的网站准备了匿名的统计报告。正如你将在接下来章节中看到的，这些报告包括不同的信息视图，显示了诸如地理位置（基于建立在地理定位代码基础上的通用IP）、访问时间等等。这些报告是匿名的统计数据。不包括任何能识别个体访问者的信息——例如，不包括IP地址。
&lt;strong&gt;常见隐私权问题&lt;/strong&gt;
Google Analytics的潜在用户常问的问题如下：
•Google用收集到的信息做什么？
•Google中什么人看到这些分析数据？
•保存数据的安全性如何？
•作为一个站长，我的数据保密义务是什么？
在Google工作几年后，我以我个人的观点来回答这些问题。
•Google用收集到的信息做什么？
Google Analytics是专门针对那些想要更好理解网站流量的广告主（潜在广告主）的工具。事实上，它是组成我所说的广告主工具包的众多工具之一。其他的包括Google Trends、Google 搜索分析、网站管理员中心（Webmaster Central）、Google购物搜索（前身是Froogle）、Google Maps、网站优化工具、Google Base以及Checkout（cloga注：Google的在线支付处理系统）。Google Analytics为广告主提供他们所需要的透明度和问责性，以使他们对PPC和网上拍卖模式更有信心。实际上，一个快乐的广告主有利于生意。
请记住Google AdWords的拍卖模式避免了任何人干预广告价格。该系统完全是透明的，因此，对Google来说，人工调整出价是可笑的——将一夜之间摧毁一个生意。在网上，竞争只是一次点击而已，微软与雅虎在这个领域中激烈的竞争。
•Google中什么人看到这些分析数据？
Google Analytics的数据，与Google所有的数据一样，其访问建立在严格的是否需要知道的基础上，比如，支持团队和维护工程师可以访问。如果，作为一个客户，你想要Google团队看一下你的报告——例如，提供AdWords广告系列管理的帮助——那么，你必须通过Google客户经理或Google Analytics帮助中心（www.google.com/support/googleanalytics/）。所有Google内部对你的报告的访问都被监控，以便审查。
•分析数据的安全性如何？
在所有的Google服务中数据安全性和完整性对维持最终客户的信心是至关重要的。因此，Google Analytics数据与所有的Google服务一样受到严格的安全检查和审查。当然，在任何企业中，没有什么是百分之百安全的，但是，Google聘请了一些世界上最好的行业专家来确保它的系统仍是安全。
•作为一个站长，我的数据保密义务是什么？
除了Google对数据隐私及完整性的承诺以外，使用Google Analytics的站长也有义务保护访问者隐私。事实上，对任何分析方法都是这样。对于Google Analytics，服务条款表明，你不能将任何从网站上收集到的数据与个人身份信息相联系。当然，你还需要遵守与Google Analytics使用相关的数据保护和隐私法律，并且在适当的位置（在网站的突出位置）放置隐私政策。
这些是拥有一个网站并收集访问者使用信息的公认的最佳方法。但是，我推荐，你看一下Google Analytics网站（www.google.com/analytics）页面底部的服务条款以明白作为一名站长的义务。为了使你能读到与你的地区最相关的条款，从页面顶部的下拉菜单中选择与你最匹配的区域。
&lt;strong&gt;使用Google Analytics时的最佳隐私声明
*&lt;em&gt;以下是当使用Google Analytics时的清晰的隐私声明的最好实例——修改自信息委员办公室（ICO），英国关于个人信息保护的独立机构（www.ico.gov.uk）和Google Analytics的用户。
*&lt;/em&gt;我们关于您网上隐私的保护政策&lt;/strong&gt;
本网站使用Google Analytics来分析用户如何使用网站。这个工具使用“cookies”，放置在你的电脑中的文本文件，以匿名的形式来收集标准互联网日志信息和访问者行为信息。由cookies产生的这些关于你对网站的使用信息（包括你的IP地址）发送到Google。然后这些信息被用来评估访问者对网站的使用并且汇编为你的公司的网站活动统计报告。
我们绝不会（也不会允许第三方）使用本统计分析工具跟踪或收集网站访问者的个人身份信息。Google不会将你的IP地址与Google掌握的其他数据联系起来。无论我们还是Google都不会将或试图将IP地址与电脑使用者联系起来。我们不会讲从本网站收集到的信息与其他来源的个人身份信息联系起来，除非你通过在我们网站上填写一张表格来明确提出这一信息。
&lt;strong&gt;关于Cookies的更多信息&lt;/strong&gt;
互动广告局（IAB）是支持网络业务流程的开发标准和准则行业团体。它制作了一系列解释cookies如何工作以及如何管理cookies的网页。
如果你关于我们的隐私政策有任何疑问，请联系我们。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics不能做什么</title>
   <link href="http://cloga.github.io/2010/08/30/google-analyticse4b88de883bde5819ae4bb80e4b988"/>
   <updated>2010-08-30T22:06:15+08:00</updated>
   <id>http://cloga.github.io/2010/08/30/google-analyticse4b88de883bde5819ae4bb80e4b988</id>
   <content type="html">&lt;p&gt;正如你所预料的，我认为Google Analytics是一个伟大的工具，能帮助需要企业优化、改进他们的网站。在一些情况下，这带来了数千万美元的转化改善，但是，事实上，能完全实现企业的每一件事；有太多的可能性。因此，我将总结一些Google Analytics所不能完成的事，解释这是为什么以及其意义。
&lt;strong&gt;数据重加工&lt;/strong&gt;
如图3.2所示，网站访问者的数据流及Google Analytics的数据处理意味着报告通常是建立在以往报告之上的。因此，如果，你在实施时有错误（例如，网站的页面没有GATC或设置了错误的过滤器），这种错误将体现在报告中。随着时间的流逝，数据将继续丢失或错误。即使你修正了这个错误，Google Analytics也不能回去重新处理这些数据。
原因很简单。Google Analytics的所有用户的数据集是巨大的，预处理的，以聚合数据的形式存储，即，与其他的Google Analytics账户混在一起。目前，Google不能分离并重新处理单一的Google Analytics账户。
不能重新处理数据确实是一个缺点，能使任何安装者失望。为了减轻这一点的影响，你应该随时有一个测试配置文件，在你将新的过滤器及配置设置应用于你的主报告配置文件前，你可以用来试验，这将在第8章“配置指南的最佳做法”中讨论。
注：为了让你理解Google Analytics每天24小时，每小时必须加工的数据量，考虑以下场景：
一个典型的网站每小时有100次访问。
•每次访问平均产生10个综合浏览量，或者每小时1000个数据。
•有几百万活动的Google Analytics账户。
因此，Google Analytics每小时处理几十亿行访问者数据。重新处理一个子集不是容易。但是，在将来，这将是可能的。
&lt;strong&gt;出价管理&lt;/strong&gt;
在Google Analytics报告中查看你的Adwords访问者（例如，网站停留时间、跳出率和电子商务价值），你能在这同一个界面更新出价策略、价格和广告创意，这是不是很棒？现在这是不可能的，你需要登入你的Adwords账户来更改。但是，我希望Google在不远的将来能解决这一问题。毕竟，Google每年200多亿美元的收入的97%来自它的PPC广告。
&lt;strong&gt;非实时报告
*&lt;em&gt;正如前面所谈到的，报告通常有3到4小时的延迟。因此，中午查看报告通常是今天早上9点之前的数据。
提供实时报告对每个网站分析服务提供商都是非常昂贵的（耗费资源），但是，这笔开支是否值得？我还没见过能对实时报告采取行动的用户。通常的情况是，即使是最前卫（不断变化）的网站，报告用户和经理也以周为单位审核和批准潜在的网站变化。因此，在我看来，实时报告不值得。话虽如此，但是，你的报告越及时越好。在本章稍后讨论的Urchin能每小时产生报告。
*&lt;/em&gt;导入第三方消费数据&lt;/strong&gt;
目前，只有来自Adwords和Adsense的消费数据能导入，也允许报告ROI。这意味着来自其他PPC网站、banner广告、email营销、搜索引擎优化等等的访问者获得成本，不可能被计算，因此，这些引入方式在你的报告中没有相关ROI数据——需要你手动计算。
但是，随着最近Google Analytics导出API的发布，导入第三方消费数据应该也离现实不远了（这只是我自己的猜测）。本章稍后讨论的Urchin软件已经具备了这一功能。
单个访问者的跟踪（违反Google的政策）
在2005年，收购了Urchin软件公司和技术之后，Google采取了非常慎重的决定不跟踪个体（在当时的beta版中的一个功能）。即，Google Analytics中的所有访问者数据都以聚合匿名的形式报告。
尽管，对广告主来说，从访问者之前的行为来识别访问者是很吸引人的，但是，从Google的观点看来，这有些过分——侵犯了使用Google Analytics的终端用户的隐私权（公众）。
当然，如果你与你的访问者有特殊的协议，他们不介意这种个体跟踪，Urchin软件是可以选择的工具。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics如何工作</title>
   <link href="http://cloga.github.io/2010/08/30/google-analyticse5a682e4bd95e5b7a5e4bd9c"/>
   <updated>2010-08-30T21:39:06+08:00</updated>
   <id>http://cloga.github.io/2010/08/30/google-analyticse5a682e4bd95e5b7a5e4bd9c</id>
   <content type="html">&lt;p&gt;从第2章“现有的方法及其准确性”你了解了数据收集技术及cookies在网站分析中的作用。Google Analytics是采用第一方cookie的页面标签法。通过这种方法，所有数据的收集、处理、维护及程序更新都作为一种托管服务由Google管理——也被称为SaaS（软件即服务）。但是，它的流程和数据流是怎样的？图3.2的三步示意图很好的解释了这些。
1．访问者到达你的网站之前什么也不会发生。访问者通过不同的途径到达你的网站，包括搜索引擎、e-mail营销，推介链接等等。无论哪个途径，当访问者浏览了你的网站上带有Google Analytics跟踪代码（GATC）的页面之一时，自动向http://www.google-analytics.com/ga.js文件发出请求。这是Google Analytics的主文件——一个25Kb大小的文件，在访问者的一次会话中只下载一次。对这一文件更多的请求将在访问者的浏览器缓存中取回。因为ga.js文件设置正确，推介网站信息将与其他访问者信息（比如页面URL、时间戳、惟一ID、屏幕分辨率、颜色深度）一起被收集，并将产生一小段第一方cookies以识别访问者——或当访问者回访时更新。
2．对于每一个页面浏览，GATC通过向google-analytics.com请求一个透明的、1×1像素的GIF图片，将这一信息发送到Google的数据收集服务器。访问者在页面内的活动也能通过这种方式跟踪，例如，点击Flash动画的开始。整个数据的传输不过一眨眼的功夫。
3．Google每小时处理收集到的数据并更新你的Google Analytics报告。但是，因为方法以及所包含的数据量庞大，因此，报告通常有3到4小时的延迟，这一过程有时会更长，但是不会长于24小时。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-2.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图3.2   Google Analytics如何工作的示意图&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;在大多数情况下，从多数数据收集服务器中采集数据能顺利进行，但是，有时会有问题，比如，日志文件的传输中断。因为，这一原因，Google收集数据并且在24小时内在一天结束重新处理所有数据。因此，一旦你当天的数据丢失了别恐慌。如果这持续了24小时以上，联系Google Analytics支持团队：http://www.google.com/support/googleanalytics/bin/request.py。
&lt;strong&gt;注：&lt;/strong&gt;尽管Google Analytics每小时处理数据，但是数据以不同频率导入。例如，Adwords和Adsense数据的导入（如果可用的话）每天发生一次，并且是24小时后。这允许Google的点击欺诈算法完成他们的工作。由于Adwords数据导入引起的潜在差异在第2章中讨论。
Google Analytics有意让所有访问者和所有网站站长使用相同的ga.js跟踪代码段。这意味着在大部分网站使用者的跟踪代码在缓存中——优势是有几百万网站的使用基础包括一些非常受欢迎的门户网站。这是一个好消息，因为，这意味着如果一个来到你的网站访问者之前访问了其他的也运行Google Analytics的网站，ga.js文件根本不用下载——它已被缓存。其结果是Google Analytics对你的网站加载时间有最小的影响。通常的文件缓存为期7天，尽管这一值能在你的浏览器设置中进行调整。
正如你能在图3.2的描述中所认识到的一样，如果访问者阻止了JavaScript的执行或阻止了第1方cookies的设置，或者如果你忘记在页面上添加GATC，或者你的网站服务器不允许GATC执行（即，它有防火墙），Google Analytics将不会发挥作用也将不会收集数据。一旦数据丢失，你不能找回并重新加工，因此，GATC实施的定期审核应是你实施计划的一部分。
&lt;strong&gt;注：&lt;/strong&gt;目前有三个版本Google Analytics跟踪代码（GATC）：称为urchin.js的原始旧代码，已不再更新，但是仍在运行；2007年底提出的ga.js代码，是你从Google Analytics功能中获益所必需，比如事件跟踪；以及2009年底推出的异步跟踪代码。
最新的ga.js是在2007年底推出的。尽管，Google没有声称具体什么时候不再支持urchin.js，如果你仍在使用urchin.js，那么你应该计划在不远的将来替换它。为了这样做，登录你作为管理员的Google Analytics账户，并且在你的配置文件设置中点击检查状态链接。你将看到你的新跟踪代码。请注意，如果你也使用urchin.js的旧功能，例如，捕捉虚拟浏览量，那么，这些也将需要更新为新的格式。
异步的跟踪方式具有以下优点：
跟踪代码的加载速度更快，改善浏览器的执行效率
增强数据收集的准确性
消除因为JavaScript未完全加载引起的误差&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics的主要特点和功能</title>
   <link href="http://cloga.github.io/2010/08/29/google-analyticse79a84e4b8bbe8a681e789b9e782b9e5928ce58a9fe883bd-3"/>
   <updated>2010-08-29T13:23:37+08:00</updated>
   <id>http://cloga.github.io/2010/08/29/google-analyticse79a84e4b8bbe8a681e789b9e782b9e5928ce58a9fe883bd-3</id>
   <content type="html">&lt;p&gt;我从运作自己的专业网站开始我的职业，因此，我理解小企业的分析需求。现在，在Google工作了几年之后，我也熟悉了另一方面——与一些世界上最大的企业一起工作。今天，仍令我吃惊的是大企业与小企业的分析需求之间是如此相似——从理解在网站上发生了什么和如何解释数据到该采取什么活动进行改善，小企业和大企业都面临同样的挑战。
两类用户都表达了理解测量的需求，但是也害怕当与其他业务及本身的工作在一起会造成数据超载。二者都希望数据的收集和报告只占投资预算的一小部分，有专门的人来开发他们线上业务的潜能。
这个功能表不想要面面俱到，但是，强调了一些你能在Google Analytics找到的关键功能。大多数这些在使用中功能将在接下来的两章中介绍。&lt;/p&gt;

&lt;h3&gt;标准功能&lt;/h3&gt;

&lt;p&gt;我所说的标准功能是你能在任何商业化的网站分析工具中找到的那些功能。这类工具包括“必备”的能对你的网站表现获得初步理解的基础指标。但是，这些并不是基础报告。你能通过几次鼠标点击很快提取出丰富的细节，例如，交叉参照不同推介来源或搜索引擎关键词的电子商务收入。
&lt;strong&gt;报告所有广告系列——不仅仅是Adwords
*&lt;em&gt;Google Analytics能跟踪和比较所有访问者——来自非付费自然搜索、付费广告（PPC、banner）、推荐网站、电子邮件营销、联盟广告活动、来自数字宣传资料比如PDF文件的链接以及其他促进访问者达到你的网站搜索引擎或媒介。你甚至能够了解线下的营销活动效果——在第11章“现实世界中的任务”讨论。
*&lt;/em&gt;广告ROI——集成Adwords和Adsense&lt;/strong&gt;
如果你管理过一个PPC广告系列，那么你知道标记目标页面URL是多么繁杂的事情——每一页必须至少添加一个广告系列变量以区别于通过免费搜索结果点击进入的访问者。另外，你会想要导入AdWords的费用及展示数据。正如你所期望的，Goolge尽可能简化这一集成过程，事实上，仅仅是两个复选框。因此，所有你的AdWords目标页面URL被标记，费用数据每天自动导入。
同样的，对于在自己网站上展示Adwords的广告发布者，即，使用Adsense的人来说，集成是如此简单，其结果是报告展示了那个内容带来了最多的收入，同时也有Adsense的页面展示量及Adsense的广告点击量。
&lt;strong&gt;电子商务报告&lt;/strong&gt;
你能跟踪广告系列和关键词的的交易，获得忠实而延迟的指标，确定你的收入来源。同样，你也可以下转获得一个单品或一个类别层面上的这些信息。想想这些对你更有价值的页面浏览。
&lt;strong&gt;目标转化（关键绩效指标KPI）&lt;/strong&gt;
目标转化是一个是能使你更靠近特殊的匿名访问者的关键页面浏览。一个显而易见的目标转换是电子商务购买确认页。但是，也存在其他的非交易目标，例如，完成注册或者反馈表、下载文件、看一段视频（如何安装指南、产品演示），评论博客、提交调查或者点击外链。
除了定义页面浏览作为目标转化外，你也可以设置阈值作为目标转化。例如，网站停留时间大于30秒或者平均浏览量大于2.5。你一共能定义20个不同的目标，这些目标能被分到组四个组（称为目标集）。
&lt;strong&gt;渠道可视化（漏斗可视化）&lt;/strong&gt;
渠道是访问者完成目标转化前的路径。电子商务的结账过程是明显的渠道。但是，与目标转化一样，也存在其他的非交易渠道，多个表格的订阅过程中，每完成一个表格就是一个渠道步骤。也可以将个别表单域的完成定义为渠道，比如名字或产品选择，这样表格的部分完成也能可视化。
通过访问者路径（渠道）的可视化，能发现哪些页面导致了转化的流失以及潜在客户的去向。每一个渠道能包含10个步骤。
&lt;strong&gt;自定义控制台&lt;/strong&gt;
控制台是你查看报告时首先看到的部分。控制台是从Google Analytics主要部分中挑选的简要报告。在这里你能放置和组织所选择的关键数据，来进行一目了然的比较。控制台报告是Google Analytics主要部分的副本。控制台能随时添加、改变或存储多达12个报告。控制台是以用户为基础的，即，不同的用户登录时有不同的控制台。
&lt;strong&gt;站内点击量分布图&lt;/strong&gt;
站内点击量分布图是观察网站受欢迎链接的图形化方式。看到覆盖网站主要页面标签上的关键指标。能很容易知道哪些链接对你有益。
&lt;strong&gt;地图覆盖图&lt;/strong&gt;
与站内点击量分布图相似，地图覆盖图是展示访问者从世界什么地方访问你的网站的图形化方式。基于IP地址位置数据库，根据你的缩放级别，展示了覆盖主要的世界、地区或国家地图的关键指标。这提供了访问者从世界的哪部分访问的清晰表征，可以具体到市级。
IP地址信息在近几年有着显著的进步——主要是由于安保业的驱动，即网络信用卡欺诈检测的进步。Google Analytics使用的数据库与AdWords广告系列中地理定位广告的一样。数据的精度是半径25英里（40千米）。但是，有时位置细节不可用，这将在你的报告中显示为“（not set）”。
&lt;strong&gt;地图覆盖的准确性&lt;/strong&gt;
MaxMind是一家为第三方比如银行、网站分析提供商，提供IP地址数据库信息的第三方公司，尽管不是Google Analytics。在&lt;a href=&quot;http://www.maxmind.com/app/city_accuracy&quot;&gt;www.maxmind.com/app/city_accuracy&lt;/a&gt;中的MaxMin是业内典型的精度表。以美国为例，他们的数据库在国家水平的准确率为99.8%，在州水平的准确率为90%，在市水平的准确率为83%，半径25英里（40千米）。
&lt;strong&gt;正交细分（十字分割、交叉参照）下钻&lt;/strong&gt;
正交细分是用于一组数据与另一组数据的交叉参照或相关的术语。显示加利福尼亚的地理位置报告，然后正交于这些访问者来自于什么搜索引擎，就是正交细分的一个例子。再比如，假设你想要确定，对于英国访问者来说，查找到你的网站的最常见关键字。那应是英国访问者与关键字的交叉参照。同样，对于新访者，他们达到哪个目标页面——访问者类型与与目标页面交叉参照。这是一个强大的功能，使你能够下钻到表格数据中分离出特定的访问者类型。
&lt;strong&gt;数据导出和定制邮件&lt;/strong&gt;
报表数据能以多种形式手动导出，包括CSV（最适合Excel）、TSV、PDF（最适合打印）或者开源的XML（最适合导入到其他系统）。你也能定制任何报告自动电邮到你和你的同事，最多10个邮件地址。例如，你可能想要每周email你的电子商务经理热销产品、营销经理营销活动的效果，或者网站设计者网站的发生错误页面的列表。
关键是记住导出的东西是所见即所得的（WYSI WYG）。这意味着，Google Analytics默认显示10行数据，因为导出的默认视图也是这十行。如果你想要更大的样本，你必须扩大报告视图，比如，100行，然后在导出。同样的，你能正交或下钻报告数据，然后导出特定的视图。
&lt;strong&gt;小技巧：&lt;/strong&gt;如果你有10个以上人想要报告的电子邮件副本，那么你能在你的服务器上创建一个邮件清单，例如，&lt;a href=&quot;mailto:marketing@mysite.com&quot;&gt;marketing@mysite.com&lt;/a&gt;，使用这个作为你的Goolge Analytics导出清单。这样你就能独立的管理邮件清单的成员。
&lt;strong&gt;日期范围滑块&lt;/strong&gt;
当确定网站的整体性能时，即，不考虑特定的活动，所有网站分析都需要面对的问题是，应考虑哪一个时间段。除非你以相同频率频繁登录Google Analytics，否则，你都可能错过数据中的高点或低点，这仅仅是因为超出了你所看到的日期窗的边界。Google Analytics中默认的日期窗是最近30天，但是，如果一些相当重要的事发生在你没有注意到的31天前将会怎么样？
Google用它的时间线窗口来对付这个问题。除了在同一个浏览器窗口并排显示日期范围比较之外，时间线窗口能让你在选择日期范围的同时，也关注边界之外的趋势。例如，你可以选取一段你之前没有注意的日期范围，在这一段时间中出现了访问者高峰。这是一个很难描述的功能，因此，将在第4章“Google Analytics界面的使用”说明。
&lt;strong&gt;网站搜索报告&lt;/strong&gt;
对于复杂的网站（即，有大量的页面），网站内部搜索是网站导航系统的重要部分，在许多情况下，对提供积极的用户体验至关重要。一个专门的报告部分使你能够评估网站内部搜索的价值，并将其与未使用内部搜索引擎的访问者对比。另外，你能发现导致用户进行搜索的那些页面、用户所使用的搜索词、搜索后的目标页面、搜索导致的目标转化或购买的产品。
&lt;strong&gt;多语言界面和支持&lt;/strong&gt;
Google Analytics目前能以25种语言报告，而这个数字仍在不断增长。包括：捷克语、中文、丹麦语、荷兰语、美式英语、英式英语、菲律宾语、芬兰语、法语、德语、匈牙利语、意大利语、印尼语、日语、韩语、马拉西亚、挪威语、波兰语、葡萄牙语（巴西），葡萄牙语（葡萄牙）、俄语、西班牙语、瑞典语、台湾话和土耳其语。
除了以多种语言显示报告外，所有的文档都国际化，每一种语言都有Google团队直接支持。
&lt;strong&gt;高度可伸缩性&lt;/strong&gt;
Google Analytics的目标受众能与每一种网络广告相比——几乎是网络上的每一个人。仅仅5年之前，使用专业网站分析工具的客户数不过几万人。现在随着Google Analytics作为免费服务的发布，账户数达到了几百万（免费显然是一个很强的刺激！）包括各种企业。客户从每天只有一点综合流量到某些人们熟知的品牌、流量极大的网站上——即，每天有多于10亿综合浏览量的网站。
&lt;strong&gt;复合图表&lt;/strong&gt;
允许在一个图表中绘制多种数据点能使分析更迅速。例如，你能在展示访问者数的同时展示平均网站停留时间、跳出率、或新访者比例。
&lt;strong&gt;管理员和个人访问控制&lt;/strong&gt;
Google Analytic报告有两种访问权——账号管理员和报告查看者，管理员有权使用所有账户功能，包括所有数据报告、创建配置文件、定义过滤器、渠道步骤和转化目标。他们也是赋予其他用户进入权限的管理者。Google Analytics的报告查看者只有权使用报告数据，尽管每一个用户都能自定义他们的用户界面，比如控制台、高级过滤器、自定义报告和图表注释。
对于设置访问的管理员和报告查看者的数量没有限制。
&lt;strong&gt;Google Analytics的市场占有率&lt;/strong&gt;
测量网站分析工具的市场占有率其实非常简单。页面标签工具，被大多数商业网站中所应用（本书作者估计在90%以上），在网站上留下了证据“标识”——要么以能从页面HTML源代码读到的JavaScript文本的形式，要么是cookie名字——其值与服务提供商的工具设置一致。这两种方式都能通过在浏览器中查看页面发现（见附件B）。当然，也有一些很好的老式调查数据。
Forrester调查公司2009年对210,810个网站使用cookie检测法的一项调查表明，对于那些正确使用可见的网站分析工具的网站，即，设置了可识别的cookie名称的网站，Google Analytics有70%的市场占有率（美国网站分析前瞻，2008到2014，Forrester调查公司，2009年5月）。
在使用cookie检测的另一个独立的研究中，27%的全球企业网站（企业样本来自金融时报的世界500强）使用Google Analytics作为网站分析工具（全球企业采用的搜索和分析研究，Advanced-Web-Metrics.com，2010）。
英国调查的800个企业表明，80%的公司目前正在使用Google来分析，在2008年这一数字是66%（“在线测量与策略报告2009”，Econsultancy.com，2009年6月）。
网络零售500强是美国零售网站的500强，见&lt;a href=&quot;http://www.internetretailer.com/top500/list&quot;&gt;www.internetretailer.com/top500/list&lt;/a&gt;。页面扫描（使用cookie检测）表明，37%的网站使用Google Analytics（&lt;a href=&quot;http://blog.vkistudios.com/&quot;&gt;http://blog.vkistudios.com&lt;/a&gt;，2008年2月）。
“大约60%的财富1000公司里以某种形式布置Google Analytics。”（Eric Peterson，“测量、分析和优化简介”，eConsultancy.com，2008年3月）。
你能在&lt;a href=&quot;http://www.advancedweb-metrics.com/who-uses-google-analytics&quot;&gt;www.advancedweb-metrics.com/who-uses-google-analytics&lt;/a&gt;上找到使用Google Analytics的主要品牌的概况。&lt;/p&gt;

&lt;h3&gt;高级功能&lt;/h3&gt;

&lt;p&gt;我所说的高级功能是Google独有的或是为想要获得更好的测量见解的高级用户提供的功能，例如智能提醒系统、Flash（事件）跟踪、动态图表以及数据透视表。在一些情况下，当你查看报告时，你能看到这些作为测试功能的标签。你可能知道，Google有一个长时间运行beta测试程序的传统！
&lt;strong&gt;高级分组（高级群体）和高级表格过滤&lt;/strong&gt;
高级群体允许你可以分离访问者流量的子集并与另一个子集一起分析。例如，你能查看“付费搜索”访问与“有转化的访问”，或者是查看“持续时间在1分钟以上的访问”和“10-60秒的访问”。既有预先定义好的群体，也有自定义群体构建器。自定义群体在用户水平上构建，能共享给其他用户——既可以是你企业内的也可以是你希望的外部人员。
高级群体与高级表格过滤器密切相关。当你在一个具体的报告中，高级过滤器能分离表格的特定数据行。
&lt;strong&gt;二次正交细分下钻&lt;/strong&gt;
这是之前提到的正交细分下钻功能的扩展。所不同的是，二次正交细分下钻是将数据在同一个表格中并列展示。例如，“目标页URL”正交于“来源”的结果在一个表格中，每一个目标页面与它的推介网站排成一行。
&lt;strong&gt;动态图&lt;/strong&gt;
“五维数据”是这个功能的主要特色。动态图为Google Analytics报告添加复杂的多维分析。（cloga注：中文的GA是没有这个功能的，如果想要体验一下这个有趣的功能，请将语言切换为英语，其功能按钮为Visualize。）你能选择X轴和Y轴的指标、气泡大小和气泡颜色，并且查看这些指标与时间如何交互。
动态图是由数据可视化（Google2007年收购Trendalyzer软件的产物）实现的动态统计量。这是我所见到的不是关注具体的指标而是获得网站性能的宏观概况的最初的几个图表之一。它能使你发现在传统的“静态”报告中很难发现的数据关系。
&lt;strong&gt;API和开发者平台&lt;/strong&gt;
Goolge Analytics的应用程序接口（API）允许程序员以一种那个全新的创造性的方式扩展Goolge Analytics。开发者能将Google Analytics的数据集成到现有的产品中，或者创建一个基于其上的独立应用程序（不需要与Google联系）。例如，用户能在开发者创建的控制台和小工具中看到分析数据的快照；在Excel、PowerPoint或Word文件中自动更新KPI；在CRM和CMS平台中查看集成的网站访问者数据。
&lt;strong&gt;分析智能&lt;/strong&gt;
分析智能提供了网站数据模式重要变化的自动警报。不用你监测报告和梳理数据，分析智能提醒你需要注意的大多数重要信息。另外，你也能创建自定义提醒，并且在触发时给你发送email。例如，智能能够自动强调上周一来自Twitter的访问激增200%，或者让你知道昨天来自美国的访问者跳出率下降了70%。
&lt;strong&gt;手机报告&lt;/strong&gt;
Google Analytics能跟踪手机网站和所有能接入网络设备上的移动应用程序——无论这一设备能否运行JavaScript。在你的手机网站上使用服务器端的一小段代码使这成为可能。Google Analytics目前支持PHP、Perl、JSP和ASPX网站。这与跟踪来自智能手机（能使用JavaScript和cookie的手机）对普通网站的访问是不同的。
&lt;strong&gt;数据透视视图&lt;/strong&gt;
如果你对Excel熟悉，那么你也会熟悉数据透视视图（也称为数据透视表）。当从普通的表格中很难获得汇总信息时，数据透视视图是非常有用的。实际上，数据透视表能帮助你很快获得见解，对表格有深入的理解。Google Analytics报告中支持两个数据透视表列字段。
&lt;strong&gt;自定义报告&lt;/strong&gt;
顾名思义，自定义报告允许你创建、保存、编辑展示你所希望看到的信息的报告，以你所希望看到的方式组织报告。拖拽界面使你能够选择你所需要的指标，定义子报告多个层次。自定义报告在用户水平上建构，能共享给其他用户——如你所愿，既可以是企业中也可以是企业外部的。
&lt;strong&gt;基准化报告&lt;/strong&gt;
通过与Google匿名的共享你的网站访问者数据，你能获得使用宝贵的基准化数据的权力。基准化是Google的一个服务，能让你了解你的网站统计量与垂直行业的整体水平比较的情况，即，其他的Google Analytics用户。这允许将你的关键指标放在一个更宏观的背景下。
每一个用户能选择基准化比较的类别，Google将你的数据与相似规模的网站比较。必须注意的是在基准化报告，你的网站身份和访问者数据永远是匿名的，以聚合的形式中报告。你能随时选择加入或退出，虽然过去的数据在你选择退出后不会删除。
&lt;strong&gt;事件跟踪&lt;/strong&gt;
事件被定义为不产生页面浏览的页面内动作。例如，你的网站包括Flash元素、小应用程序（widgets）、Ajax或内嵌视频，那么你可能想要了解用户如何与这些元素交互，比如，点击播放、暂停、选择或观看完成，这些将与综合浏览量分开报告。任何Flash元素、Ajax内容、文件下载甚至载入时间都能以这种方式报告。事件跟踪部分是显示综合浏览量之外的事件的专门报告。事件能被分组甚至货币化。
&lt;strong&gt;你知道吗？&lt;/strong&gt;
你应该在使用Google Analytics时，注意到许多有时考虑其他功能时被忽略的要点。
&lt;strong&gt;区分所有来源的能力&lt;/strong&gt;  你能跟踪任何搜索引擎任何PPC广告网络（比如AdWords、雅虎搜索引擎营销、微软的adCenter、Miva）、e-mail营销活动、banner广告及联盟，并将它们归于正确的来源。
不止跟踪综合浏览量 除了跟踪标准的综合浏览量之外，Google analytics也能跟踪错误页面、文件下载、mailto链接点击、部分表格填写以及出站链接、Flash和Ajax交互（事件跟踪）。更多的细节请看第7章“高级应用”。
&lt;strong&gt;可读性更好的报告（虚拟综合浏览量）&lt;/strong&gt; 难懂的动态URL能被转化为我们可理解的形式。比如，&lt;a href=&quot;http://www.mysite.com/home/product?rid=191045&amp;amp;scid=194292&quot;&gt;www.mysite.com/home/product?rid=191045&amp;amp;scid=194292&lt;/a&gt;能转换为&lt;a href=&quot;http://www.mysite.com/products/menswear/shirts/white&quot;&gt;www.mysite.com/products/menswear/shirts/white&lt;/a&gt; button down，更多细节请看第七章。这些被称为虚拟浏览量。更多细节请见第7章。
&lt;strong&gt;数据保留25个月（或更长）&lt;/strong&gt; Google承诺保留你的数据至少25个月，因此，你能回顾并将逐年的数据进行比较。请注意，Google没有想要删除过去的数据，见图3.1。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-1.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/3-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图3.1 保存四年多的Google Analytics数据的例子&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;转化归属&lt;/strong&gt; 在与你的企业建立关系的过程中，在转化前，访问者可能来自多个推介网站。在这种情况下，所有的推介网站都被跟踪。但是，转化只被归功于最后一个推介网站。
例如，考虑下面的情况：访问者第一次通过某个网站上的banner广告点击进入你的网站。在这第一次访问时没有转化，但是，同一天又通过搜索引擎的关键字查询回来了。但是仍未能说服他们购买（或者转化为一次询价），访问者离开了你的网站。这周的晚些时候，一个朋友用e-mail向他推荐发表在博客上的一篇评论文章。这名访问者对这篇评论很满意，他点击了博客文章中直接指向你的网站的链接。这第三次访问时完成了购买。对于这种情况，Google Analytics将显示所有三个推介网站，并将转化归功于博客，其URL将列在报告中。
但是，这个规则有一个例外：最后一次推介方式是“直接”时。直接访问意味着访问者在浏览器直接输入你的网址或用收藏夹到达你的网站。在这种情况下，将归功于倒数第二个推介网站。例如，还用前面的情况，如果购买者把你的网站放入收藏夹，然后又通过选择收藏夹来重复购买，转化仍将被归功于推介博客。归属模式的更改将在第9章“玩转Google Analytics”中讨论。
&lt;strong&gt;注：&lt;/strong&gt;当分析你的推介数据时，使用“直接流量”将是模糊不清的。默认情况下，Google Analytics将不会跟踪email营销、文件中（比如PDF、DOC、XLS、PPT等）的链接、RSS推介甚至你的email签名——你需要改变设置以跟踪这些。如果你不这样做，那么，这些访问者将被归类为“直接流量”。
&lt;strong&gt;多个账户和上卷报告&lt;/strong&gt; 你能在多个Google Analytics账户中跟踪访问者数据，例如，在地区或国家水平跟踪，同时也能在一个总账户中跟踪所有访问者。细节请见第6章“起来与Google Analytics一起奔跑”。
正则式 你能使用正则式（regex）来将URL数据过滤为不同的访问者群。正则式的最大长度是256个字符。更多细节请看第七章。
&lt;strong&gt;自定义可识别搜索引擎的列表&lt;/strong&gt; 你能改变或添加可识别的搜索引擎列表。例如，默认的情况下，所有的Google搜索引擎都被分组为单一的搜索引擎引入——“google”。但是你可能希望区分出google.co.uk、google.fr、google.de与google.com。这能通过简单的修改Google Analytics页面跟踪代码实现。更多细节请看第九章。
&lt;strong&gt;同时运行多个跟踪代码&lt;/strong&gt; 如果你已经使用了一种网站分析方法，那么你能不受任何干扰的同时运行Google Analytics。以普通方式添加Google Analytics的跟踪代码。这样做，你可以评估Google Analytics或者是增强现存数据。
&lt;strong&gt;本地存储数据作为备份&lt;/strong&gt; 你能在本地网站服务器日志文件中存储Google Analytics所收到数据。如果你想要存储数据更长时间（比Google承诺的25个月更长）或者为了在本地用Urchin软件对这些数据再处理时，这个功能将是有用的。Urchin软件将在本章后面讨论。
正如你能在这部分中所看到的，在跟踪和报告网站访问者数据时，Google Analytics既有宏观信息也不丢失细节。另外，因为安装简单，所以它也非常灵活。为了理解便利性，请你务必理解将在接下来讨论的Google Analytics如何工作的原则。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>改善网站分析数据的准确性</title>
   <link href="http://cloga.github.io/2010/08/29/e694b9e59684e7bd91e7ab99e58886e69e90e695b0e68daee79a84e58786e7a1aee680a7"/>
   <updated>2010-08-29T12:42:17+08:00</updated>
   <id>http://cloga.github.io/2010/08/29/e694b9e59684e7bd91e7ab99e58886e69e90e695b0e68daee79a84e58786e7a1aee680a7</id>
   <content type="html">&lt;p&gt;很明显，网站分析不是百分之百准确，可能的误差乍看之下也许是惊人的。但是，正如接下来的章节展示的那样，你会对你的设置满意，并且关注于测量趋势，而不是精确的数字。例如，网站分析能帮助你回答下列问题：&lt;/p&gt;

&lt;p&gt;·访问者数是否增加了？&lt;/p&gt;

&lt;p&gt;·他们以什么比率增加（或减少）？&lt;/p&gt;

&lt;p&gt;·进行PPC广告后转化率是否上升了？&lt;/p&gt;

&lt;p&gt;·网页重新设计后购物车放弃率是否改变了？&lt;/p&gt;

&lt;p&gt;例如，如果趋势表明10.5%的减少，那么无论使用什么网站分析工具，这个数字将是准确的。虽然，这些例子是高层次的指标，但是，当你下钻并查看某种具体的推介方式（搜索引擎、联盟、社交网站）、广告系列（付费搜索、电子邮件、banner）、关键词、地理或设备（PC、Mac、手机）时，能有相同的准确性。&lt;/p&gt;

&lt;p&gt;如果考虑影响网站分析方法不准确的所有可能性，很明显关注绝对值和合并不同来源的数据是无效的。如果所有网站访问者为观看你的网站都必须要登录账户，那么将克服这个问题。但是，在现实世界中，互联网的绝大多数使用者仍希望匿名，因此，这不是一个明智的方法。&lt;/p&gt;

&lt;p&gt;只要你比较数据时使用同样的方法，那么你的结果就将是准确的。这是所有网站分析的一个普遍真理。&lt;/p&gt;

&lt;p&gt;下面是加强网站分析准确性的十个建议：&lt;/p&gt;

&lt;p&gt;·务必选择一个使用第一方cookies收集数据的工具。&lt;/p&gt;

&lt;p&gt;·不要混淆访问者标识。例如，如果第一方cookies被删除了，不要求助于使用IP地址信息，最好直接忽略这些访问者。&lt;/p&gt;

&lt;p&gt;·在你的报告中去除或分别报告所有的非人类活动，比如机器人和服务器性能检测器。&lt;/p&gt;

&lt;p&gt;·跟踪每一件事。不要局限于对目标页面的跟踪。跟踪全站的活动，包括文件下载、内部搜索词、出站链接。&lt;/p&gt;

&lt;p&gt;·经常检查网站页面标签的完整性（大网站至少每月一次）。有时，网站内容的变化导致标签损坏、删除或仅仅是遗漏了。&lt;/p&gt;

&lt;p&gt;·展示清晰、易读的隐私政策（欧盟的法律要求）。这样能与你的访问者间建立信任，因为，他们可以更好的理解他们是如何被跟踪的，不太可能删除cookies。&lt;/p&gt;

&lt;p&gt;·不要对不足24小时的数据做出判断，因为，这些数据通常最不准确。&lt;/p&gt;

&lt;p&gt;·务必使用跟踪URL区分所有的付费线上广告系列与非付费来源。&lt;/p&gt;

&lt;p&gt;·使用访问数而不要使用惟一访问者数，因为，后者很不准确。&lt;/p&gt;

&lt;p&gt;这些建议将有助于你理解在收集网站分析数据时经常出现的错误。理解它们是什么、怎样发生、如何避免，将使你能够检测网站效果。达到这一点意味着，接下来你能更好的改善网上业务的效果。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>为什么PPC服务提供商的数据与网站分析报告不符</title>
   <link href="http://cloga.github.io/2010/08/29/e4b8bae4bb80e4b988ppce69c8de58aa1e68f90e4be9be59586e79a84e695b0e68daee4b88ee7bd91e7ab99e58886e69e90e68aa5e5918ae4b88de7aca6"/>
   <updated>2010-08-29T12:41:36+08:00</updated>
   <id>http://cloga.github.io/2010/08/29/e4b8bae4bb80e4b988ppce69c8de58aa1e68f90e4be9be59586e79a84e695b0e68daee4b88ee7bd91e7ab99e58886e69e90e68aa5e5918ae4b88de7aca6</id>
   <content type="html">&lt;p&gt;如果你正在使用点击付费（PPC）网站，通常你都会获得由每个网站提供的点击进入报告。通常，这些数字与网站分析报告的数据并不完全符合。以下部分描述了能引起这种情况的一些原因：&lt;/p&gt;

&lt;h3&gt;跟踪URLs丢失了PPC点击进入&lt;/h3&gt;

&lt;p&gt;需要在你的PPC账户中对跟踪URLs进行设置，以区分同一个推介域的非付费的搜索引擎访问者的点击进入与PPC点击进入，例如Google.com or Yahoo.com。跟踪URLs是在你的PPC账号中对目标页面URLs进行的简单设置，形式是&lt;a href=&quot;http://www.mysite.com/?source=adwords&quot;&gt;www.mysite.com?source=adwords&lt;/a&gt;。安装过程中忘记设置跟踪URLs，或有时仅仅是分配不正确，都将导致这些访问被不正确的分配到非付费访问者。&lt;/p&gt;

&lt;h3&gt;页面加载时间缓慢&lt;/h3&gt;

&lt;p&gt;正如之前所谈论的，网站分析数据收集标签的最佳位置是在页面的底部——正好在&lt;/body&gt;标签的前面。如果你的PPC目标页面由于某些原因（服务器延迟、页面臃肿等等）下载缓慢，在数据分析标签有机会加载前，访问者可能点击离开，导航到网站的其他页面或其他网站。页面加载的时间越长，这种现象发生的可能性越大。判断页面加载时间长的基本原则是两秒钟（见&lt;a href=&quot;http://www.akamai.com/html/about/press/releases/2009/press_091409.html&quot;&gt;http://www.akamai.com/html/about/press/releases/2009/press_091409.html&lt;/a&gt;）。&lt;/p&gt;

&lt;h3&gt;点击和访问：理解差异&lt;/h3&gt;

&lt;p&gt;请记住：PPC服务提供商比如Google AdWords测量点击。大多数网站分析工具测量能接受cookies的访问者。当你考虑cookies禁用、JavaScript错误和仅到达目标页就很快离开的访问者对网站分析数据的影响时，那通常不是同样的事情——在页面标签收集数据之前。因为这个缘故，网站分析工具倾向于比PPC网站轻微低估访问。&lt;/p&gt;

&lt;h3&gt;PPC：重要的账户调整&lt;/h3&gt;

&lt;p&gt;Google AdWords及其他PPC服务提供商自动监视无效和欺诈点击，并且逆向调整PPC测量。例如，某访问者有时会在较短的时间内点击你的广告（有意或无意）。Google AdWords研究了这个进入，并且去掉了额外的点击进入后向你收费。但是，网站分析工具不能进入这些系统因此记录了所有PPC访问者的记录。更多Google如何对待无效点击的信息，请关注：&lt;a href=&quot;http://adwords.google.com/support/bin/topic.py?topic=35&quot;&gt;http://adwords.google.com/support/bin/topic.py?topic=35&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;关键字匹配：出价词VS搜索词&lt;/h3&gt;

&lt;p&gt;你在PPC账户中所选择的出价词与访问者所使用的、导致PPC广告展示的搜索词通常是不同的：想一下“广泛匹配”。例如，你能设置一个广告组指向目标词“鞋”，仅仅依靠广泛匹配来匹配所有包含词“鞋”的搜索词。这是你的出价词。某访问者使用搜索词“蓝鞋”，并且点击你的广告。网站分析服务提供商可以报告这个搜索词、出价词或者两者都有。&lt;/p&gt;

&lt;h3&gt;Google Adwords导入延迟&lt;/h3&gt;

&lt;p&gt;在你的AdWords账号里，你能看到每小时更新的数据。这是因为广告主需要这些来控制预算。Google Analytics每天导入AdWords费用数据一次，这些数据是前一天23:59分之前-48到-24小时的数据，因此，AdWords的费用数据通常至少是24小时之前的。&lt;/p&gt;

&lt;p&gt;为什么延迟？因为，这段时间允许AdWords的无效和欺诈点击的保护算法完成它们的工作，最终确定你账户内的点击进入量。因此，从报告的观点，不建议比较当天AdWords的访问者数量。这项建议适用于所有网站分析方法及所有PPC广告网站。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;尽管大多数AdWords无效点击的更新发生在24小时内，但是，也可能更长时间。因为这个原因，即使没有其他的因素，你的PPC账户中报告的AdWords点击进入与你的网站分析报告中也不能完全匹配。&lt;/p&gt;

&lt;h3&gt;第三方广告跟踪重定向丢失跟踪URLs&lt;/h3&gt;

&lt;p&gt;使用第三方广告跟踪系统，比如99click、ADform、Atlas Search、Blue Streak、DoubleClick、Efficient Frontier、以及SEM Director（甚至客户自己的跟踪系统），来跟踪你的网站的点击进入意味着你的访问者来自URL重定向。这使先前在你的广告公司登记的点击自动重定向访问者到你的网站的实际目标页面。这种两步跳的目的是用独立于你公司之外的跟踪网站收集访问者统计数据，通常是为了计费。因为，这一过程有短暂的延迟，这阻止了一些访问者登录到你的页面。结果是少量数据损失，因此，数据无法一致。&lt;/p&gt;

&lt;p&gt;更重要也更普遍的的是，URL重定向会破坏网站分析工具添加到目标页面的跟踪参数。例如，你的目标页面可能看起来是这样：&lt;a href=&quot;http://www.cloga.info/?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&quot;&gt;http://www.cloga.info/?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&lt;/a&gt;。当添加第三方跟踪系统的重定向，应该是这样：&lt;a href=&quot;http://www.redirect.com/?url=http:/www.cloga.info?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&quot;&gt;http://www.redirect.com?url=http://www.cloga.info?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&lt;/a&gt;。问题出现在第二个链接的第二个问号，因为，在任何有效的URL中不应多于一个问号。一些第三方跟踪系统能检测这种错误，并且去掉第二个问号及接下来的跟踪参数，导致广告系列数据的丢失。&lt;/p&gt;

&lt;p&gt;一些第三方广告跟踪系统用#代替第二个问号，因此，URL能被正确处理。如果你不确定该怎么做，你能通过在第三方广告跟踪系统中编码目标页面URL来完全避免问题，比如，前面的例子的最终Landing Page应该是：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redirect.com?url=http%3A%2F%2Fwww.cloga.info%3Fsource%3Dgoogle%26medium%3Dppc%26campaign%3DJan10&quot;&gt;http://www.redirect.com?url=http%3A%2F%2Fwww.cloga.info%3Fsource%3Dgoogle%26medium%3Dppc%26campaign%3DJan10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;正如下面描述的：&lt;a href=&quot;http://www.w3schools.com/tags/ref_urlencode.asp&quot;&gt;http://www.w3schools.com/tags/ref_urlencode.asp&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/URLEncode.xlsm&quot;&gt;URLEncode批量修改的Excel文档下载&lt;/a&gt;，在文档中调用URLEncode函数就可以。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;根据我的经验，PPC服务提供商报告与网站分析工出现差异的主要原因是这一部分讨论的第一个、第二个和最后一个问题。&lt;/p&gt;

&lt;p&gt;·跟踪URLs不能识别付费与免费访问者&lt;/p&gt;

&lt;p&gt;·页面加载缓慢&lt;/p&gt;

&lt;p&gt;·由于第三方广告跟踪重定向丢失数据&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;数据曲解：谎言、该死的谎言、统计数字&lt;/h3&gt;

&lt;p&gt;下面不是准确性问题。但是，正如马克·吐温在标题中指出的那样，数据通常不是那么容易解释的。看一下下面两个例子：&lt;/p&gt;

&lt;p&gt;1．新访者+回访者并不等于全部访问者。&lt;/p&gt;

&lt;p&gt;一种常见的误解是新访者和回访者之和应该等于全部访问者数。为什么不是这样呢？假设，某访问者某天第一次访问了，在同一天又访问了。对这一天来说，他既是新访者也是回访者。因此，这一天的报告，将显示两种访问者类型，尽管访问者的总数是一。&lt;/p&gt;

&lt;p&gt;因此，最好根据“访问”类型考虑访问者类型——即第一次访问+重复访问等于总访问数。&lt;/p&gt;

&lt;p&gt;2．一周里每天的独立访问者相加不等于这周独立访问者的总和。&lt;/p&gt;

&lt;p&gt;设想，周一，你的博客有1000个独立访问者。事实上，一整周你只有这些独立访问者，因此，周二这1000个独立访问者又来看你新发布的博客帖子了。这种情况从周三一直持续到周日。&lt;/p&gt;

&lt;p&gt;如果，你看一下这周每一天的独立访问者数，你会看到1000个独立访问者。但是，你不能说你在这一周有7000个独立访问者。因为，在这个例子中，一周的独立访问者数仍是1000。&lt;/p&gt;

&lt;h3&gt;为什么计算uniques没有意义&lt;/h3&gt;

&lt;p&gt;“uniques”这个词在网站分析中是网站独立访问者（唯一身份访问者）的缩写。即，有多少独立访问者访问了你的网站。问题是计算独立访问者的基础是有问题的，这使uniques这个词没有意义。&lt;/p&gt;

&lt;p&gt;正如在本章开头所讨论的，人们会丢失、阻止或删除cookies——例如，将近3分之1的跟踪cookies在四周内丢失。时间越长，发生的机会越大，这使uniques的同比是无效的。另外，现在浏览器使删除cookies非常容易——看一下最新的Firefox、Chrome和Internet Explorer的浏览器的“匿名”功能。&lt;/p&gt;

&lt;p&gt;但是，计算uniques的最大问题是人们使用多少种设备访问互联网。例如，考虑以下情形：&lt;/p&gt;

&lt;p&gt;1、你和配偶正考虑你们的下一个假期。你的配偶先家里你们共用的电脑上查找了可能的地点，然后保存了一堆网站链接。&lt;/p&gt;

&lt;p&gt;2、当天晚上，你也用这台电脑再看了一遍这些链接。你当天晚上没法决定，于是将列表用email发送到你的办公室，第二天，你在午饭时间接着考虑你的假期，再坐地铁回家的路上也用手机看了这些网站。&lt;/p&gt;

&lt;p&gt;3、第三天你们又在朋友家再次搜索，在这里你们希望得到补充的意见。最后，你们回到家，用你们公用的电脑在晚上进行了预定。&lt;/p&gt;

&lt;p&gt;这种情况是非常普遍的——特别是当费用较贵时，这意味着有一个较长的考虑期，从配偶、朋友或同事那里需求补充性意见（在本章开头讨论的Sun Microsystems的研究估计有30%的用户在一个月内使用多台电脑访问同一网站）。&lt;/p&gt;

&lt;p&gt;简单来说，现在没有那种网站分析技术能准确跟踪这种情况，即将来自多个设备和涉及多人的数据混杂在一起，在近期也不可能出现这样一种技术。&lt;/p&gt;

&lt;p&gt;这些限制导致当跟踪独立访问者时的极大误差。事实上，过大的误差使这些指标没有意义，并且在需要尽更精确的“访问数据”时应避免使用。也就是说，如果你必须使用独立访问者作为关键指标时，请确保强调趋势，而不是绝对数量。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>比较不同服务提供商的数据</title>
   <link href="http://cloga.github.io/2010/08/29/e6af94e8be83e4b88de5908ce69c8de58aa1e68f90e4be9be59586e79a84e695b0e68dae"/>
   <updated>2010-08-29T12:35:58+08:00</updated>
   <id>http://cloga.github.io/2010/08/29/e6af94e8be83e4b88de5908ce69c8de58aa1e68f90e4be9be59586e79a84e695b0e68dae</id>
   <content type="html">&lt;p&gt;正如前面所示，实际上不能将一种收集数据的方法与另一种方法进行比较。这种比较简直是无效。但是，假定是两种可比较的数据收集方法——都是页面标签——能否获得一致性？不幸的是，即使比较比较两个使用页面标签的服务提供商的数据也有困难。&lt;/p&gt;

&lt;p&gt;下面几段内容描述了导致不同服务提供商之间数据差异的因素。&lt;/p&gt;

&lt;h3&gt;第一方cookiesVS第三方cookies&lt;/h3&gt;

&lt;p&gt;这两者之间几乎没有相关，因为，用户、防火墙和反间谍软件对第三方cookies禁用率较高。例如，如果一个网站没有精简隐私原则，那么最新版本的微软IE将自动阻止第三方cookies。（看一下&lt;a href=&quot;http://www.w3.org/P3P&quot;&gt;www.w3.org/P3P&lt;/a&gt;）。&lt;/p&gt;

&lt;h3&gt;页面标签：位置的思考&lt;/h3&gt;

&lt;p&gt;页面标签服务提供商通常推荐将页面标签刚好放置在HTML页面&lt;/body&gt;标签的前面，以确保页面因素，比如文本、图像先加载。这意味着来自服务提供商服务器的延迟不会影响页面加载。这里可能的问题是回访者，他们对网站导航更熟悉，能够很快的导航，在页面标签加载完成开始收集数据之前，已经点击了其他页面。很明显，延迟的时间越长，则差异越大。&lt;/p&gt;

&lt;p&gt;TagMan.com在2009年研究了标签的位置。他们关于延迟效应的研究反映增加一秒的加载时间，将丢失大约10%的报告流量。另外，将Google Analytics的页面标签从页面的顶部移到顶部增加报告流量的20%。&lt;/p&gt;

&lt;p&gt;Stone Temple Consulting在2007年进行了类似的研究（&lt;a href=&quot;http://www.stonetemple.com/articles/analytics-report-august-2007-part2.shtml&quot;&gt;www.stonetemple.com/articles/analytics-report-august-2007-part2.shtml&lt;/a&gt;）。结果表明，设置在页面顶部与页面底部的页面标签的独立访问者的计算有4.3%的差异。这被归因为执行页面标签有1.4秒的差异。&lt;/p&gt;

&lt;p&gt;另外，放置在页面顶部的JavaScript能影响放置在后面的JavaScript页面标签。大多数服务提供商的页面标签都能独立于其他JavaScript而工作，并且能与其他服务提供商的页面标签并行不悖——就像Stone Temple Consulting的报告中一样，页面放置了五个不同的服务提供商的标签。但是，在同一页上JavaScript的错误将引起浏览器脚本引擎停止，并阻止下面的JavaScript运行，包括页面标签。&lt;/p&gt;

&lt;h3&gt;你标记了所有的东西吗？&lt;/h3&gt;

&lt;p&gt;许多分析工具需要进行修改，以跟踪链接到文件比如PDFs、word文档、可执行文件下载或到其他网站的外链。修改到文件的链接将是一个手动过程。修改代表点击时的一个事件或动作，有时这被视为一个虚拟的页面浏览。比较不同服务提供商，需要在他们的特定代码中完成这个行为几次（通常是JavaScript）。考虑到无论什么时候在页面上设置标记，都有可能发生语法错误。如果经常更新，需要定期检查页面标签的有效性。&lt;/p&gt;

&lt;h3&gt;页面浏览：访问或访问者？&lt;/h3&gt;

&lt;p&gt;页面浏览可以方便快捷的跟踪；因为，它们只需要从页面到跟踪服务器的一次请求，在服务提供商之间是相似。问题是区别一次访问和一个访问者，因为，每一个服务提供商使用的算法不同，没有单一的算法提供同一个值。&lt;/p&gt;

&lt;h3&gt;Cookies：超时&lt;/h3&gt;

&lt;p&gt;允许的超时时间——访问者在页面上不活动的时间多长——在不同的服务提供商之间是不同的。大多数页面标签服务提供商使用延迟30分钟的访问者会话cookies。这意味着在连续浏览同一页面30分钟没有活动，就会被视为新的回访。但是，一些服务提供商提供了修改这一设置的选项。这样做将调整数据，因此，影响对所报道访问者的分析。其他cookies，诸如，存储推介源细节的cookies，有不同的超时量。例如，Google Analytics推介源的cookies将存储6个月。这些不同网站分析服务提供商之间超时设定上的差异，将显著影响他们报告的访问者数量。&lt;/p&gt;

&lt;h3&gt;页面标签代码劫持&lt;/h3&gt;

&lt;p&gt;根据你的服务提供商，你的页面标签编码可能被劫持、复制或在其他不相关的网站上执行。这种污染导致了你的报告中错误的页面浏览量。通过使用过滤器，你能确保报告仅是来自你的域的数据。&lt;/p&gt;

&lt;h3&gt;数据采样&lt;/h3&gt;

&lt;p&gt;这是从你的网站流量选择一个子集的过程。取样在统计分析中被广泛应用，是因为分析一个数据的子集与分析全部数据能得到一个很相近的结果，然而，在处理大量信息时，有显著的速度优势。不同的服务提供商可能使用不同的取样技术和原则，可能会导致数据偏差。Google Analytics的数据采样技术思考在第五章“报告解释”的“理解数据采样”中讨论。&lt;/p&gt;

&lt;h3&gt;PDF文件：特别考虑&lt;/h3&gt;

&lt;p&gt;对页面标签法来说，不是报告PDF下载完成，而事实上报告的是访问者点击PDF文件的下载链接。这是有重要的区别的，因为，我们无法知道访问者是否完成下载——比如，一个50页的PDF文件——的信息。因此，点击PDF链接只被报告为一次单独的事件或页面浏览。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;这种情况对日志文件是不同的。当在浏览器中浏览PDF文件时，Adobe Reader每次下载一页，而不是全部。这与写入日志文件时有小小的不同，标注一个HTTP状态代码206（部分文件下载）。日志文件法能将每个写入的206状态代码视为个体的页面浏览。当所有PDF文件的下载完成后，会在日志文件中登录一个最终HTTP状态200标签（下载完成）。因此，日志文件法能将完整的50页的PDF文件报告为一个下载和50个页面浏览。&lt;/p&gt;

&lt;h3&gt;电子商务：负交易&lt;/h3&gt;

&lt;p&gt;所有的电子商务企业都得在某些时候处理退货，要么因为货物的损坏或出现问题，要么是订单错误或其他的原因。人们通常在网站分析报告中忘记计算这些退货。对一些服务提供商来说，这需要手动添加一些等价的负购买交易。另外一些需要重新处理电子商务数据文件。无论使用哪种方法，网站访问者与内部系统的数据调整都不是天衣无缝的。例如，交易的取消或赊欠通常发生在原始购买之后很久，因此，在不同的报告阶段。&lt;/p&gt;

&lt;h3&gt;过滤器和设置：潜在的障碍&lt;/h3&gt;

&lt;p&gt;当在一个服务提供商的方法设置过滤器而另一个没有设置过滤器时，数据将有差异。一些工具不能设置与其他工具完全相同的过滤器，要么以一种不同的方式应用过滤器，要么在数据处理过程中的不同时期使用过滤器。&lt;/p&gt;

&lt;p&gt;设想一下，例如，一个页面水平的过滤器从你的报告中排除了所有的错误页。访问指标比如停留时间、页面深度等等，是不是也调整则取决于服务提供商。这是因为，一些服务提供商分别处理页面水平的指标与访问者水平的指标。&lt;/p&gt;

&lt;h3&gt;时间差异&lt;/h3&gt;

&lt;p&gt;对于某一次访问者会话涉及的网站或网页停留时间的计算，包括如何计算最后一页的时间，对任何服务提供商来说都是一个难题。例如，在页面A上停留的时间是通过访问者页面A的时间戳与接下来的页面B时间戳求差计算出来的，等等。但是，如果没有页面C；如果没有下一个时间戳，如何计算页面B的停留时间？&lt;/p&gt;

&lt;p&gt;不同的服务提供商用不同的方法解决这一问题。一些在计算中忽略最后的页面浏览；其他的服务提供商使用onunload事件来为访问者关闭浏览器或去其他网站时添加一个时间戳。两种都是无效的方法，尽管并不是每一个服务提供商都是用onunload法。一些服务提供商更喜欢忽略最后一页的原因在于，这被认为是最不准确的时间点观点——可能访问者被一些其他的事打断或者继续去做其他事而将其浏览器保持在当前的状态：许多用户都这样干；即，他们浏览完了以后，仅是将浏览器打开在最后一页，就接着运行了另一个应用程序。这样的少量页面流量将极大的歪曲网站和页面的停留时间计算；因此，大多数服务提供商避免这一问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;Google Analytics在计算网站或页面停留时间时，忽略一次访问者会话中的最后的页面浏览。&lt;/p&gt;

&lt;h3&gt;处理频率&lt;/h3&gt;

&lt;p&gt;Google Analytics每个小时完成它的数据处理，并产生报告就是解释处理频率的最好例子。但是，因为，从世界各地的数据收集服务器核对所有的日志文件需要时间，因此，报告将延迟3到4小时。在大多数情况下，这一个过程是流畅的，但是有些时候会失败。例如，如果日志文件的传输中断了，那么将只有部分日志文件得到处理。因为这一缘故，Google在每天结束后，会收集并重新处理24小时的数据。其他服务提供商也会如此，因此，不必关注在当天出现的不一致。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;这也是为什么当你从报告中注意到“缺失数据”时不用恐慌的原因，例如，在上午10点到11点没有数据。这些数据将在每天结束时发生的数据再加工中获得。如果，你等了24小时后，数据仍然缺失，那你应在&lt;a href=&quot;http://www.google.com/support/googleanalytics/bin/request.py&quot;&gt;http://www.google.com/support/googleanalytics/bin/request.py&lt;/a&gt;联系Google Analytics的支持团队。&lt;/p&gt;

&lt;h3&gt;目标转化VS页面浏览：确立一致性&lt;/h3&gt;

&lt;p&gt;使用图2.4作为例子，假设5页是你定义的渠道的一部分（点击流路径），其中最后一步（第5步）是目标转化（购买）。在付款页，一个访问者返回上一页检查邮费（步骤A），然后接着完成支付。这名访问者对整个过程的便利很满意，接着，她使用完全相同的路径在同一次访问者会话中购买了第二件商品（步骤B）。&lt;/p&gt;

&lt;p&gt;根据你所使用的服务提供商，这一过程将被以不同的方式计数，如下：&lt;/p&gt;

&lt;p&gt;·12次渠道页浏览、两次转化、两笔交易&lt;/p&gt;

&lt;p&gt;·10次渠道页浏览（忽略步骤A）、两次转化、两笔交易&lt;/p&gt;

&lt;p&gt;·五次渠道页浏览、两次转化、两笔交易&lt;/p&gt;

&lt;p&gt;·五次渠道页浏览、一次转化（忽略步骤B），两笔交易&lt;/p&gt;

&lt;p&gt; &lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/2-4.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/2-4.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图2.4  一个访问者访问网站、进入了五页的渠道，并完成了两次交易&lt;/p&gt;

&lt;p&gt;大多数服务提供商，但不是全部，在报告中使用最后一种方法。即，访问者变成了购买者（一次转化）。这在一次会话中只能发生一次，因此，额外的转化（假设同一个目标）被忽略。为了使这样有效，渠道页也必须使用相同的方法。以这种方式，数据变得更加以访问者为中心。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;在图2.4的例子中，页面浏览的总量等于12，将包含在所有综合浏览量的报告中。只是渠道和目标转化报告将不同。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>理解网站分析数据的准确性</title>
   <link href="http://cloga.github.io/2010/08/29/e79086e8a7a3e7bd91e7ab99e58886e69e90e695b0e68daee79a84e58786e7a1aee680a7"/>
   <updated>2010-08-29T12:24:03+08:00</updated>
   <id>http://cloga.github.io/2010/08/29/e79086e8a7a3e7bd91e7ab99e58886e69e90e695b0e68daee79a84e58786e7a1aee680a7</id>
   <content type="html">&lt;p&gt;当谈到网站效果的标准时，网站分析是关键。但是，这种信息只有在你避免了与收集数据相关的一些常见错误时，才是准确的，特别是与多种来源比较时。&lt;/p&gt;

&lt;p&gt;偏偏，太多的企业对网站分析报告有肤浅的理解。毕竟，获得数字并不难。严酷的事实是网站分析的数据永远也不可能是百分之百准确的，甚至测量误差线也将很困难。&lt;/p&gt;

&lt;p&gt;那么，重点是什么？&lt;/p&gt;

&lt;p&gt;尽管有缺陷，但是基本上，误差线在每周或甚至每月都保持相对稳定。甚至比较年与年的行为也是安全的，只要在技术上或终端用户行为没有巨大的变化。只要你使用相同的标准，访问者数的趋势将是准确的。例如，网站分析数据能反映以下的模式：&lt;/p&gt;

&lt;p&gt;·30%的流量来自搜索引擎&lt;/p&gt;

&lt;p&gt;·50%的流量来到X.html页面&lt;/p&gt;

&lt;p&gt;·上周我们从email广告活动增加了20%的订阅转化&lt;/p&gt;

&lt;p&gt;·三月里网站目录页的跳出率减少了10%&lt;/p&gt;

&lt;p&gt;通过这些指标，营销人员和网站管理员能够确定特定营销活动的直接影响。详细程度是关键。例如，你能确定增加PPC广告——单一搜索引擎的一系列关键字，能否增加这段时期内的投资回报率。只要你能将不准确性控制在最小，那么网站分析工具对测量你的线上业务的访问者流量是有效的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;数据点的冲突是常见的。&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;英国的对800个企业的调查表明将近三分之二（63%）的受访者表示，他们遇到过来自不同网络数据测量的信息冲突。&lt;/p&gt;

&lt;p&gt;（“网络测量和策略报告2009”，Econsultancy.com，2009年六月）&lt;/p&gt;

&lt;p&gt;接下来，我将详细讨论为什么会出现这些不准确，以使你能正确看待这一信息。其目的是使你能对分析数据达到一个可接受的准确性水平。回想一下表2.1，两种收集网站访问者数据的主要方法——日志文件和页面标签——都有局限性。&lt;/p&gt;

&lt;h4&gt;影响日志文件访问者数据准确性的问题&lt;/h4&gt;

&lt;p&gt;日志文件跟踪通常在服务器上默认安装。可能因为这一原因，系统管理员很少考虑其他的跟踪方法。&lt;/p&gt;

&lt;h4&gt;动态分配的IP地址&lt;/h4&gt;

&lt;p&gt;一般来说，日志文件法通过将相同的IP地址和浏览器签名的所有点击归为一个人，来跟踪访问者的会话。当网络服务服务提供商在会话过程中分配不同的IP地址时，会出现问题。总部设在美国的comScore的一项研究（http://www.comscore.com/Press&lt;em&gt;Events/Presentations&lt;/em&gt;Whitepapers/2007/Cookie&lt;em&gt;Deletion&lt;/em&gt;Whitepaper）表明，一台典型的家用PC每个月平均有10.5个不同的IP地址。这些访问者将被日志文件分析软件计算为10个独立访问者。由于每个网络用户都有相同的浏览器签名（当前的IE），所以，这个问题将更加严重。结果，访问者数量被极大的高估。cookies的使用可以克服这一局限性。&lt;/p&gt;

&lt;h4&gt;客户端缓存页面&lt;/h4&gt;

&lt;p&gt;客户端缓存指存储在访问者电脑上的先前访问页面。在这种情况下，再一次访问相同页面导致这一页面由访问者的电脑提供，因此，这一次访问没有被记录在服务器中。&lt;/p&gt;

&lt;p&gt;服务器端缓存来自于网络加速技术，这种技术缓存网站的一个副本，并从他们的服务器提供这一副本以加速传输，这意味着所有随后的网站请求来自缓存而不是网站本身，导致了跟踪信息的丢失。现在，大部分网站都以某种方式缓存以改善性能。例如，在&lt;a href=&quot;http://en.wikipedia.org/wiki/Cache&quot;&gt;http://en.wikipedia.org/wiki/Cache&lt;/a&gt;看一下维基百科关于缓存的解释。&lt;/p&gt;

&lt;h4&gt;计算机器人&lt;/h4&gt;

&lt;p&gt;机器人，也被称为蜘蛛或网络爬虫，最常被搜索引擎用来抓取和索引页面。但是，也存在其他监测服务器性能的机器人——运行时间、下载速度等等，还有的进行页面分析，包括比价、email搜集和竞争性研究等等。这些影响网站分析，因为日志文件法也包括机器人在你网站上的活动，尽管它们并不是真正的访问者。当计算访问者数量时，机器人占网站综合浏览量的很大比例。遗憾的是，很难完全过滤这些，因为有数千自制的、不知名的机器人存在。因为这个原因，日志分析法可能高估访问者数量，在大多数情况下，这是很严重的。 &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>第三方广告跟踪重定向丢失跟踪URLs的解决方案</title>
   <link href="http://cloga.github.io/2010/08/28/e7acace4b889e696b9e5b9bfe5918ae8b79fe8b8aae9878de5ae9ae59091e4b8a2e5a4b1e8b79fe8b8aaurlse79a84e8a7a3e586b3e696b9e6a188"/>
   <updated>2010-08-28T23:21:05+08:00</updated>
   <id>http://cloga.github.io/2010/08/28/e7acace4b889e696b9e5b9bfe5918ae8b79fe8b8aae9878de5ae9ae59091e4b8a2e5a4b1e8b79fe8b8aaurlse79a84e8a7a3e586b3e696b9e6a188</id>
   <content type="html">&lt;p&gt;使用第三方广告跟踪系统，比如99click、ADform、Atlas Search、Blue Streak、DoubleClick、Efficient Frontier、以及SEM Director（甚至客户自己的跟踪系统），来跟踪你的网站的点击进入意味着你的访问者来自URL重定向。这使先前在你的广告公司登记的点击自动重定向访问者到你的网站的实际目标页面。这种两步跳的目的是用独立于你公司之外的跟踪网站收集访问者统计数据，通常是为了计费。因为，这一过程有短暂的延迟，这阻止了一些访问者登录到你的页面。结果是少量数据损失，因此，数据无法一致。&lt;/p&gt;

&lt;p&gt;更重要也更普遍的的是，URL重定向会破坏网站分析工具添加到目标页面的跟踪参数。例如，你的目标页面可能看起来是这样：&lt;a href=&quot;http://www.mysite.com/?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&quot;&gt;http://www.mysite.com/?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&lt;/a&gt;。当添加第三方跟踪系统的重定向，应该是这样：&lt;a href=&quot;http://www.redirect.com/?url=http:/www.mywebsite.com?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&quot;&gt;http://www.redirect.com?url=http://www.mywebsite.com?source=google&amp;amp;medium=ppc&amp;amp;campaign=Jan10&lt;/a&gt;。问题出现在第二个链接的第二个问号，因为，在任何有效的URL中不应多于一个问号。一些第三方跟踪系统能检测这种错误，并且去掉第二个问号及接下来的跟踪参数，导致广告系列数据的丢失。&lt;/p&gt;

&lt;p&gt;一些第三方广告跟踪系统用#代替第二个问号，因此，URL能被正确处理。如果你不确定该怎么做，你能通过在第三方广告跟踪系统中编码目标页面URL来完全避免问题，比如，前面例子的最终Landing Page应该是：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redirect.com/?url=http%3A%2F%2Fwww.mywebsite.com%3Fsource%3Dgoogle%26medium%3Dppc%26campaign%3DJan10&quot;&gt;http://www.redirect.com?url=http%3A%2F%2Fwww.mywebsite.com%3Fsource%3Dgoogle%26medium%3Dppc%26campaign%3DJan10&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/URLEncode.xlsm&quot;&gt;URLEncode批量修改的Excel文档下载&lt;/a&gt;，在文档中调用URLEncode函数就可以。&lt;/p&gt;

&lt;p&gt;正如下面描述的：&lt;a href=&quot;http://www.w3schools.com/tags/ref_urlencode.asp&quot;&gt;http://www.w3schools.com/tags/ref_urlencode.asp&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;根据我的经验，PPC服务提供商报告与网站分析工具出现差异的主要原因是这一部分讨论的第一个、第二个和最后一个问题。&lt;/p&gt;

&lt;p&gt;·跟踪URLs不能识别付费与免费访问者&lt;/p&gt;

&lt;p&gt;·页面加载缓慢&lt;/p&gt;

&lt;p&gt;·由于第三方广告跟踪重定向丢失数据&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网站分析适合哪里</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e98082e59088e593aae9878c"/>
   <updated>2010-08-27T23:38:48+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e98082e59088e593aae9878c</id>
   <content type="html">&lt;p&gt;正如你所期望的，我认为网站分析应是宇宙的中心（嗯，至少是数字宇宙）——见图1.5。网站分析既是研究工具也是反馈工具。例如，人们在网站寻找什么，他们如何看待你的产品/服务——在购买前后？你是否有效的参与到数据营销中，潜在的客户很可能正在寻找你这样的公司来帮助他们。甚至你现有的客户使用网络来查找更新、你的联系方式、支持信息或者提交有价值的产品建议。甚至有值得考虑的求助者和投资者。&lt;/p&gt;

&lt;p&gt;当然，我是在说教——不然，你为什么读这本书？我想说的是对于一个新型的企业，网站应触及业务的所有部分。因此，你的网站分析工具应处在一个独特的地位，你的业务的各方面都能使用的统一的测量平台——统一的货币测量，可以这么说。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; &lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-5.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-5.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;图1.5  在企业中网站分析适合哪里&lt;/p&gt;

&lt;p&gt;这并不意味着你强迫业务的的所有部分只是用一种测量工具。这是愚蠢的尝试。例如，客户分析（CRM或称客户关系管理系统的数据挖掘，）与几乎完全匿名的网站分析世界是完全不同的领域，因此，在图1.5中连结二者的是虚线。同样的，在社会网络中测量流言及品牌情感需要站外网站分析工具，这使用与站内网站分析不同的技术。&lt;/p&gt;

&lt;p&gt;尽管如此，仍有可能用统一的网站分析工具来支持业务的所有方面，在或大或小的方面，同时，在需要时用更加专业的工具来挖掘细节。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网站分析如何帮你理解网站流量</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e5a682e4bd95e5b8aee4bda0e79086e8a7a3e7bd91e7ab99e6b581e9878f"/>
   <updated>2010-08-27T23:37:21+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e5a682e4bd95e5b8aee4bda0e79086e8a7a3e7bd91e7ab99e6b581e9878f</id>
   <content type="html">&lt;p&gt;正如之前谈到的，看80多个Google Analytics报告在最初似乎是灾难性的——简直有太多的数据需要在一次消化。当然，这些数据都是相关的，但是，根据你的商业模型，其中的一些数据对你更有意义。因此，一旦你获得了访问者数据，形成了你的报告，你可能想要看一些更小的子集——与你的潜在客户的关键接触点。为了帮助你提取访问者信息，你能设置Google Analytics的目标转化报告。&lt;/p&gt;

&lt;p&gt;确定目标可能是构建网站最重要的步骤——这使你能定义成功。目标转化是特定的、可测量，是你期望访问者离开网站前完成的动作。例如，对一个电子商务网站来说，明显的目标是完成交易，即，买一些东西。但是，并不是所有的访问者都将在他们首次访问时完成交易，因此，另一个有意义的电子商务目标是统计将商品添加到购物车中的用户数，无论他们是否完成支付——换句话说，有多少人开始购物过程。&lt;/p&gt;

&lt;p&gt;无论你是否拥有一个电子商务网站，你的网站都有一个目标。目标是与你的访问者建立关系的任何动作或交互活动，比如反馈表的完成、订阅申请、博客帖子的留言、PDF白皮书的下载、查看特定页面或点击邮箱链接。目标是一些比简单页面浏览更有价值的东西。当你开始这项工作时，你可能会意识到你实际上有很多网站目标（在第八章“配置指南的最佳范例”讨论了定义目标）。&lt;/p&gt;

&lt;p&gt;定义明确的目标，可以简化你查看访问者数据，形成假设。目标转化成了一目了然的关键指标。例如，及时知道你有多少以及多少比例的访问者转化，使你能够及时确定网站的效果，知道你是否应该做点什么还是放松，并且使电脑继续为你做这件工作。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网站分析能帮你做出的决策</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e883bde5b8aee4bda0e5819ae587bae79a84e586b3e7ad96"/>
   <updated>2010-08-27T23:34:34+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e883bde5b8aee4bda0e5819ae587bae79a84e586b3e7ad96</id>
   <content type="html">&lt;p&gt;没有行动的知识是无意义的。网站分析的目的是为你提供做出明智决策的知识，通过这些决策你能不断调整你的网络策略走向更佳。因此，将改变作为你的指标策略的一部分是重要的，即，网站或营销的改变。这在理论上听起来简单，然而通常对于大企业来说，使所有利益相关者团结起来实施一个改变本身就是一个项目。因此，请在一开始就确保你有这样的能力，否则，你很快就会为你不求回报的努力而感到沮丧（在第10章“关注KPI”中讨论了这一过程）。&lt;/p&gt;

&lt;p&gt;就参照点来说，任何企业花时间来计划关键绩效指标（KPI）是很有必要的。KPI将网站访问者数据简化为对你来说清晰、可操作的信息。简而言之，KPI展示了你的企业所特有的衡量成功的关键因素。&lt;/p&gt;

&lt;p&gt;Google Analytics为你提供建立KPI的数据，有时能直接提供KPI。例如，说“我们本周有10000个访问者”提供了一组数据。建立在其上的KPI可以是“我们的访问者数量每个月增长10%”——这一指标说明事情看起来不错。大多数KPI是一个可操作的比率，分析师的作用是建立你的企业所特有的这些指标。我在第10章谈论KPI的建立。&lt;/p&gt;

&lt;p&gt;使用KPI使你能够做出的典型决策如表1.1所示。&lt;/p&gt;

&lt;p&gt;表1.1 基于KPI的典型决策&lt;/p&gt;

&lt;p&gt;观察&lt;/p&gt;

&lt;p&gt;行动&lt;/p&gt;

&lt;p&gt;一个畅销产品获得了比其他高20%的收入。&lt;/p&gt;

&lt;p&gt;工作做得很好！奖励这个网络和营销团队&lt;/p&gt;

&lt;p&gt;来自自然搜索的日平均访问数比上周减少了一半。&lt;/p&gt;

&lt;p&gt;让SEO团队检查内容、重定向和网站结构的变化&lt;/p&gt;

&lt;p&gt;我们最佳的banner广告系列花费了5000美元，产生的销售总值为1000美元。&lt;/p&gt;

&lt;p&gt;撤掉这个banner广告&lt;/p&gt;

&lt;p&gt;如果我们在访问者注册后一周内发送跟踪邮件，那么在线购买将增加50%。&lt;/p&gt;

&lt;p&gt;确保电子邮件营销是你的商业策略的一部分，并且被你的网站分析工具跟踪&lt;/p&gt;

&lt;p&gt;70%的访问者积极的使用网站内部搜索。但是，大部分搜索结果是0，并且不产生一点收入。&lt;/p&gt;

&lt;p&gt;让IT/web团队研究内部搜索引擎的优化，以改善用户体验，提高销售、&lt;/p&gt;

&lt;p&gt;来自行业论坛的访问推动了目标转化（宣传册下载），而付费搜索的访问者推动了交易。&lt;/p&gt;

&lt;p&gt;让营销团队获得更多的论坛访问者来推动品牌建设、影响力和目标转化。获得更多的付费搜索访问者来提供进一步的收入增长。&lt;/p&gt;

&lt;p&gt;尽管这一过程改善网站的性能，但是请记住，这些变化是一个连续过程的一部分——并不是一锤子买卖。即以AMAT的方式：&lt;/p&gt;

&lt;p&gt;·获得访问者（A）&lt;/p&gt;

&lt;p&gt;·评估网站的性能（M）&lt;/p&gt;

&lt;p&gt;·分析趋势（A）&lt;/p&gt;

&lt;p&gt;·测试改进（T）&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>从哪里开始</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e4bb8ee593aae9878ce5bc80e5a78b"/>
   <updated>2010-08-27T23:33:09+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e4bb8ee593aae9878ce5bc80e5a78b</id>
   <content type="html">&lt;p&gt;如果你已经有过查看PPC广告系列数据的经验，那么Google Analytics只是简单的将报告扩展为能看到所有推介链接和访问者的行为。如果你是网站测量报告的新手，那么。最初，你将感到可用的信息量是惊人的。但是，听我把话说完——这本书将通过在你需要了解的重要方面给你指导，以快速而有效的设置和使用Google Analytics。&lt;/p&gt;

&lt;p&gt;如果你是第一次实施网站分析，那么，你需要了解初级的访问者指标以确定你的流量水平和访问者分布。初级指标的例子如下：&lt;/p&gt;

&lt;p&gt;·每天有多少访问者&lt;/p&gt;

&lt;p&gt;·平均转化率（销售、注册、下载等）&lt;/p&gt;

&lt;p&gt;·访问量高的页面&lt;/p&gt;

&lt;p&gt;·网站的平均访问时间及访问者回访频率&lt;/p&gt;

&lt;p&gt;·平均的访问深度及不同的引荐网站有怎样的差异&lt;/p&gt;

&lt;p&gt;·访问者的地理分布及他们使用什么语言设置&lt;/p&gt;

&lt;p&gt;·网页黏性如何：访问者是停留还是直接跳出（单页的访问者）？&lt;/p&gt;

&lt;p&gt;如果你的网站是一个电子商务工具，那么你也会希望知道下面的信息：&lt;/p&gt;

&lt;p&gt;·网站产生的收入&lt;/p&gt;

&lt;p&gt;·客户从哪来&lt;/p&gt;

&lt;p&gt;·销量好的产品是什么&lt;/p&gt;

&lt;p&gt;·销量好的产品的平均订单价值&lt;/p&gt;

&lt;p&gt;这些指标使你可以做出规划作为起点，这将增加你的知识。请注意，虽然，Google Analytics为你提供了如此便利的统计量但是不要使不断查看成为了强制性的习惯！因此，随着你的分析的深入，你将开始对数据提出更复杂的问题。例如：&lt;/p&gt;

&lt;p&gt;·访问者的价值是多少？他们的来源如何影响这一点？&lt;/p&gt;

&lt;p&gt;·网页的价值是什么？&lt;/p&gt;

&lt;p&gt;·老客户与新客户对网站的使用有什么不同？&lt;/p&gt;

&lt;p&gt;·引荐网站类型和广告系列来源对访问量与转化有什么不同影响？&lt;/p&gt;

&lt;p&gt;·浏览的页面和引荐网址如何影响退出率？&lt;/p&gt;

&lt;p&gt;·我的网站与访问者交互吗？&lt;/p&gt;

&lt;p&gt;·网站内部搜索是否有助于转化？&lt;/p&gt;

&lt;p&gt;·有多少访问者转化为客户，访问者转化为客户需要多长时间？&lt;/p&gt;

&lt;p&gt;所有这些问题都能用Google Analytics报告回答。&lt;/p&gt;

&lt;p&gt;假设图1.4是适合大部分网站的标准模型。这说明绝大多数网站有个位数的转化率。为什么是这样，可以改善这种现象吗？可以肯定的说在我改善网站或仅仅是为了商务或乐趣浏览网站内容的十五年中，从用户体验的角度总是有改善的空间的——包括我的网站。最后，假如你能提供很好的产品或服务，访问者的用户体验将决定网站的成败，网站分析工具提供了研究它的方法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;e-tailing group所报告的平均转化率与Forrester Research2007年6月及Fireclick Index（&lt;a href=&quot;http://index.fireclick.com/fireindex.php?segment=0&quot;&gt;http://index.fireclick.com/fireindex.php?segment=0&lt;/a&gt;）的报告相差无几。&lt;/p&gt;

&lt;p&gt;亚马逊通常被引用为优化访问者到客户的转化率的基准标准。亚马逊2009年1月报告的转化率为17.2%（来源：Nielsen Online，MarketingCharts.com）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-4.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-4.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图1.4  2005-2007年美国的平均转化率为2-3%&lt;/p&gt;

&lt;p&gt;来源：e-tailing group，2007年4月&lt;/p&gt;

&lt;p&gt;记住，网站分析是工具——而不是目的。它们不能告诉你为什么访问者以特定方式行动，或者你应采取何种改进。因此，你需要对报告分析进行投资；这意味着雇佣专家、训练现有员工、使用外部顾问或以上方式的结合。通常，你需要应用多种工具来获得“为什么”的原因。这包括客户意见工具的使用（调查、客户评分和反馈），也包括站外分析测量（博客评论、社交网络议论和感情）。 &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网站分析能提供的信息</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e883bde68f90e4be9be79a84e4bfa1e681af"/>
   <updated>2010-08-27T23:29:14+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/27/e7bd91e7ab99e58886e69e90e883bde68f90e4be9be79a84e4bfa1e681af</id>
   <content type="html">&lt;p&gt;为了在网上进行有效的商业活动，你需要不断完善和优化你的网络营销策略，网站导航和页面内容。一个性能低下的网站将降低你的ROI，损害你的品牌。但是，你需要理解什么是性能低下——你的营销活动的目标、你的产品或服务的消极评论或者访问者到达后，你的网站的转化能力。网站分析提供了收集这类信息的工具，这使你能够比较效果。&lt;/p&gt;

&lt;p&gt;请注意，我故意使用了工具的复数形式。这是因为，网站分析这个词包含了需要不同方法或数据收集技术的众多领域。例如，站外工具用来测量你的潜在受众的大小（机会）、广告占有率（可见的）以及流言（评论），这些在互联网上作为一个整体发生。这些是相关的指标，无论你的网站的存在与否。相反的，站内工具测量访问者的站内活动、动机和网站的性能。这些直接与你的网站的存在相关。&lt;/p&gt;

&lt;p&gt;图1.3大略的描述了站内与站外工具如何结合在一起。从服务提供商角度，方法的分离不像图1.3所示是互斥的。例如，hitwise、comscore和nielsen//netratings也有站内测量工具，而google、yahoo和Microsoft也有能力提供站外查询数据与它们的站内工具相补充——例如，请看一下Microsoft的孵化实验室资源&lt;/p&gt;

&lt;p&gt;（&lt;a href=&quot;http://adlab.microsoft.com/AdLab-Resources.asp&quot;&gt;http://adlab.microsoft.com/AdLab-Resources.asp&lt;/a&gt;）、Google搜索解析（Google Insights，&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-3.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/insights/search&quot;&gt;http://www.google.com/insights/search&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-3.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图1.3  站内与站外网站分析&lt;/p&gt;

&lt;p&gt;站内与站外网站测量方法有明显的不同，这导致了结果的巨大差异。甚至对于一些基本的网站数据有极大的不同，例如，网站接待的访问者数或者综合浏览量（页面浏览量）。这对网站所有者、媒体购买者和市场营销相关人员等所有想要尝试调和这些指标这一无效任务的人们来说，是一个持久的并且不断恶化的问题。事实上，站外方法获得的指标不能与站内获得指标比较——这就像比较苹果与桔子一样，而且通常差异是比较大的。例如，+/-100%是在平常不过的。&lt;/p&gt;

&lt;p&gt;每当面对来自客户的这个问题时，我都像下面这样总结不同：站外网站分析工具测量网站的潜在受众。它们是宏观工具，使你能够在更大的层面上，比较自己的网站与其他网站。站内望着你分析工具测量到达你的网站的实际访问者流量。他们使你能有能力跟踪访问者的参与与交互作用，例如，他们是否转化为一个客户或潜在客户，他们如何到达那一步，或者他们在流程的那个步骤完全退出了。用一种方法测量另一种方法的影响是不符合逻辑的。站外和站内分析是互相补充的——不是完全竞争的。&lt;/p&gt;

&lt;p&gt;Google Analytics是一种站内访问者报告工具。从这里开始，当我使用网站分析这一统称时，我是指站内测量工具。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>第一部分 衡量成功</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/e7acace4b880e983a8e58886-e8a1a1e9878fe68890e58a9f"/>
   <updated>2010-08-26T21:48:27+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/e7acace4b880e983a8e58886-e8a1a1e9878fe68890e58a9f</id>
   <content type="html">&lt;p&gt;人们经常引用凯尔文勋爵的话来说明为什么测量如此重要：“如果你不能测量它，那么你也无法改进它。”这句话是网站分析的最终目的。通过使你从来访者的角度确认什么有效及什么无效，网站分析是成功运行一个网站的基础。即使你做出了错误的决定，网站分析提供了反馈机制，使你能够很快认识到错误。
　　在第一部分，你将学到下面的内容：
　　第一章 为什么理解网站流量对企业很重要
　　第二章 哪些方法是可行的
　　第三章 Google Analytics适用于哪里
&lt;strong&gt;　　第一章 为什么理解网站流量对企业很重要&lt;/strong&gt;
　　网站分析是时刻检查网站的体温计，持续检查并监视网站的健康。作为一个方法，它是为了改进网站体验而进行的研究，没有它你是盲目的。否则怎么确定你的搜索引擎营销能否有效的获得最多的可能受众，消极的博客评论是否有损转化？你的网站有很好的用户体验，鼓励参与和回访，或是访问者仅在你的网站看了一页就跳出了？
&lt;strong&gt;　　在第一章中，你将学到：&lt;/strong&gt;
　　你能从网站流量分析中获得的信息种类
　　网站分析能帮助你所做出决定的种类
　　网站分析的投资回报率（ROI）
　　网站分析如何帮助你理解你的网站流量
　　在企业中网站分析适合哪里
&lt;strong&gt;　　网站测量——为什么要这样做？&lt;/strong&gt;
　　这是一个显而易见的问题，也有一个显而易见的答案——正如我在第一部分开头所引用的19世纪的科学家凯尔文勋爵的话。但是，这个问题仍在一个企业谈论网站性能的初步会议上被提及。运用一个测量工具来评估网站的效果是简单的——每个企业主/经理都明白测量的重要性，但是“为什么在我们的企业中需要另一个测量工具？”
　　最常见的担心是数据过载——收集更多的信息只是因为你能不可避免的导致混乱，而不清晰。特别是当你的网站是独立的，即，不与你的其他业务整合时——常见的问题是你的网站是否是一个非交易型网站。因此，当决定一个网站测量策略时的一个重要的早期步骤是定义网站测量能为企业带来的价值。无论你的网站是否是一个交易型的网站，你都能达到这个目的（见第11章“现实世界任务”中“非电子商务网站的货币化”），尽管在这里我用交易型的例子来说明价值，因为，这在第一次接触时，易于接受。
　　图1.1是一个旅游网站优化网上预订过程（访问者为了预订所选择的度假所需要的步骤）后所获得的改善。（在Google Analytics术语中，预订流程的步骤被称为渠道——直接与企业中的销售渠道相类比。）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-1.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图1.1 某旅游网站优化前后的转化率变化。最佳拟合线仅供参考&lt;/p&gt;

&lt;p&gt;　　你可以看到，预订流程的改变花了几周时间来实施（客户对一次接受所有建议信心不足！），但是，累计效应是巨大的——预订转化率增长了383%。用货币来衡量，这等于年收入增加750万美元。
　　图1.2是网站测量价值的第二个例子。在这个例子中，测量工具能在一个网站提出新设计后很快发现问题。实际上，这个新网站错误的指定了服务器重定向，这导致流失了48%的搜索引擎流量并且损失了21%的销售收入。在弄清了问题之后，客户的访问者和收入在四周内恢复到之前的水平。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-2.jpg&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/1-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;图1.2  在推出新设计后的搜索引擎流量损失&lt;/p&gt;

&lt;p&gt;　　如果你的网站是经营策略的主要部分，那么，网站测量也应是重要的策略。双方的重要性是相关的——即，网站对你越重要，网站测量工具也越重要。这些工具能用来识别机会、测量有效的改进、并且在事物出错时突出它们。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics个人资格优惠券</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/google-analyticse4b8aae4babae8b584e6a0bce4bc98e683a0e588b8"/>
   <updated>2010-08-26T21:46:05+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/google-analyticse4b8aae4babae8b584e6a0bce4bc98e683a0e588b8</id>
   <content type="html">&lt;p&gt;民主化网站分析数据是Google Analytics初步通过的战略的一大部分。在2007年，当我在Google时，我们确实想要看到这些有用的数据在销售、营销、公关和高管——对改进公司的网站有兴趣的任何人之间共享。&lt;/p&gt;

&lt;p&gt;但是，提供对数据的大规模访问带来了另一个问题：人们不知道如何解释数据或下一步做什么。可以用来帮助人们的网站分析教育存在严重的缺失。我知道我能通过写这本书促进它，另一个雄心是建立一个Google Analytics的在线学习中心。&lt;/p&gt;

&lt;p&gt;因此，逻辑上的下一个步骤是开发分级的内部培训系统的网络版本，以便任何人，不仅仅是Google员工，可以通过在线课程学习，并且通过考试来向同行或潜在的雇主证明他们的分析和针对具体产品的技能。&lt;/p&gt;

&lt;p&gt;我们在2007年底开始建设&lt;a href=&quot;http://www.conversionuniversity.com/&quot;&gt;www.conversionuniversity.com&lt;/a&gt;在线学习中心，并且在2008年11月开发了Google Analytics个人资格。这是团队取得的巨大成就，作为其中的一员我很自豪。&lt;/p&gt;

&lt;p&gt;虽然，这不是一个有很好学习环境的课堂研讨会——你不仅能学到必要的技巧，而且还能从训练者那里获得专家意见（也有时间在喝咖啡直接当面请教！）——这并不总是可能的。幸运的是，这本书、conversionuniversity.com和Google Analytics个人资格帮助用户学习Google Analytics，然后实际证明他们的熟练。如果你没有参加这个测验，我鼓励你在读完这本书后不久这样做。使用最后一页的优惠券获得五折优惠，送完即止。&lt;/p&gt;

&lt;h2&gt;怎样联系作者&lt;/h2&gt;

&lt;p&gt;　　欢迎你提供这本书或任何网站测量及优化相关内容的反馈。你可以通过以下方式联系我：&lt;/p&gt;

&lt;p&gt;·网站：&lt;a href=&quot;http://www.advanced-web-metrics.com/&quot;&gt;www.advanced-web-metrics.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;·这本书读者的LinkedIn互动小组：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.linkedin.com/groupInvitation?groupID=66386&quot;&gt;http://www.linkedin.com/groupInvitation?groupID=66386&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;·Twitter：&lt;a href=&quot;http://twitter.com/brianclifton&quot;&gt;http://twitter.com/brianclifton&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;·LinkedIn个人资料：&lt;a href=&quot;http://uk.linkedin.com/in/brianclifton&quot;&gt;http://uk.linkedin.com/in/brianclifton&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;·Facebook个人资料：&lt;a href=&quot;http://www.facebook.com/brianjclifton&quot;&gt;http://www.facebook.com/brianjclifton&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sybex努力为你提供工作所需的最新工具和信息。请查看他们的网站：&lt;a href=&quot;http://www.sybex.com/&quot;&gt;www.sybex.com&lt;/a&gt;，如果有需要时，我们会发布补充这本书的额外内容或更新。在搜索框中输入advanced web metrics（或输入本书的ISBN—9780470562314），点击到本书的更新页面。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Advanced web metrics with Goolge Analytics谁应该阅读本书?</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/advanced-web-metrics-with-goolge-analyticse8b081e5ba94e8afa5e99885e8afbbe69cace4b9a6"/>
   <updated>2010-08-26T21:43:40+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/advanced-web-metrics-with-goolge-analyticse8b081e5ba94e8afa5e99885e8afbbe69cace4b9a6</id>
   <content type="html">&lt;p&gt;正如我的一位朋友和导师曾对我说过的，“高级的网站测量是打好基础并用聪明的方式使用它。”我希望我已经明白了这句话！它浓缩了关于网站分析方法及这本书的全部。因此，我试着使这本书的主题对广泛的读者来说更易于理解——基本上适合于使网站更好的工作有商业兴趣每一个人。总之，衡量成功是每个人的普遍期望。&lt;/p&gt;

&lt;p&gt;这本书的内容不完全是面向网络菜鸟，但也不是面向工程师的——我本身就不是一个工程师。Google Analytics的安装、配置和使用并不需要工程师！更重要的是，我希望这本书对业务数据的现有用户和网站测量领域的新读者都有吸引力。&lt;/p&gt;

&lt;p&gt;正如标题所表达的，这本书适用于不满足于简单计算点击量的人。这些人分为三个用户组：&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;营销人员 *&lt;/em&gt;这些用户有使用搜索引擎营销（付费与自然搜索）、电子邮件营销、社会搜索（social search）、公共关系（PR）及联盟管理经验，但是，还没有设法找到一个统一的测量工具来一起比较这些方法。对这组用户，大部分章节应专注于将你的分析技术与营销技术整合起来，并不需要编码能力。&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;网站站长（管理员） *&lt;/em&gt;这些用户是经验丰富的网站建设者，他们有能力设置和授权网站的修改。对于这组用户，这本书提供了修改网站页面内容的部分和练习；毕竟，网站分析是关于使用可靠的指标作为向导来推动改变的一切相关内容。因此，关于HTML（阅读浏览器源代码的能力）以及JavaScript的知识是需要的。&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;高层管理者 *&lt;/em&gt;这些用户是决策者，他们需要为他们企业准备好的数据驱动策略和行动计划的指导。我希望为这些读者提供网站分析能做什么和不能够做什么，特别是为他们提供建设一支有效的Google Analytics测量团队所需要的资源和时间表。对于这组用户，我的目标是提供做出“明智的决策”的必要信息。&lt;/p&gt;

&lt;p&gt;通过更好的理解网站的访问者，你将可以像激光一样精确的定制自己的网页内容和营销预算，并获得更高的投资回报。我也将讨论其他地方没有涉及的高级的配置（第九章，Google Analytics技巧）。这些将为你提供对网站访问者的更好理解，从而你可以深入那些对你的公司的有意义的测量指标。我在尽可能多的地方插入高级用户现在仍在使用的真实案例。&lt;/p&gt;

&lt;p&gt;你能用几种方式使用本书。最直接的（推荐的）是从开头开始，然后遵循所有的步骤来完成和逐步建立你的知识体系。另一种方式，我用心的设计了这本书，因此，你可以跳过一些内容，直接钻研需要的章节。为了有助于这种方式，我通常推荐书中或其他来源的数据来进一步阅读。但是，我不推荐你不复习前几章（1-3章），因为，这些介绍对网站测量的方法非常重要，比如，准确性和隐私考虑。网站分析仍是一个新生的行业，我积极的写关于Google Analytics的博客，本书的内容及测量问题一般都在&lt;a href=&quot;http://www.advanced-web-metrics.com/&quot;&gt;www.advanced-web-metrics.com&lt;/a&gt;上。你能在Twitter (@brianclifton)上了解到我的想法和我近期正在读的东西。你能从每一章的推荐链接下载所有出现的代码例子。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Advanced web metrics with Goolge Analytics导论</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/advanced-web-metrics-with-goolge-analyticse5afbce8aeba"/>
   <updated>2010-08-26T21:42:37+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/advanced-web-metrics-with-goolge-analyticse5afbce8aeba</id>
   <content type="html">&lt;p&gt;尽管网络诞生于1991年8月，但是直到1995年才用于商业。在早些时候，有一个小logo、几张图片和你的联系方式作为你网上业务的基础是很有趣的。我的第一个网站就是那样——只有我在布里斯托大学的简历。后来，许多公司决定复制（更有甚者，扫描）他们的文件目录和宣传册，并将这些仅仅堆在网站上。这是一个进步提供了更多内容，但是至少可以说用户体验是很差的，没人真正测量转化。至多是有人跟踪点击量（hits），没有人真正理解，虽然人们假设这是访问（visits，这是不正确的）。&lt;/p&gt;

&lt;p&gt;到了2000年，随着互联网的迅速发展，人们似乎突然意识到网络作为查找信息的有效媒介的可能性；使用互联网的访问者的数量增长飞快。许多企业开始思考一些基本问题，比如“拥有网站的目的是什么？”并且考虑如何为他们的网上业务建立相关的内容。这些改善了用户体验。接着，随着宽带应用的兴起，那些组织想要吸引网络上的大量受众。于是，产生了搜索引擎营销（SEM）的快速发展。&lt;/p&gt;

&lt;p&gt;现在，因为企业正在接受不断增长的网上业务的重要性，他们准备在这方面投资。但是，一个企业在这方面应投入多少钱和资源？例如，网站应采用十种语言、接受五种货币、能在来自六种不同的操作系统（包括手机）的访问者的四种浏览器中运行吗？网站应如何营销，哪个渠道最有效，我们能够预测下一次营销活动的投资回报吗？&lt;/p&gt;

&lt;p&gt;回答这些问题需要数据及测量工具，简而言之，就是网站分析工具，比如Google Analytics，的作用——研究在线体验并改善。&lt;/p&gt;

&lt;p&gt;但是，应测量什么，准确性如何，如何衡量一个业务？换句话说，你如何衡量成功？通过最佳的实践原则，我成为了专业的从业者，这本书使用现实世界中的案例来说明，如何使用Google Analytics。这本书不仅仅包括安装和配置向导，还包括如何将数据转化为使你理解你的网站用户体验的信息。通过这种理解，你能接下来建立企业行动项目，推动改善访问者的获得（既包括线上也包括线下）、转化率、回访率、顾客保留、最终是你的账本底线。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Advanced web metrics with Goolge Analytics序言</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/andvanced-web-metrics-with-goolge-analyticse5ba8fe8a880"/>
   <updated>2010-08-26T21:40:47+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/26/andvanced-web-metrics-with-goolge-analyticse5ba8fe8a880</id>
   <content type="html">&lt;p&gt;让我们以这样一种方式开始。这是极好的一本书。&lt;/p&gt;

&lt;p&gt;如果你正站在书店里浏览这篇序言，那么马上跑到柜台前购买它吧。你不会后悔的。我保证。&lt;/p&gt;

&lt;p&gt;如果你已经买了这本书，并且已经开始阅读，那么我向你保证，这是一次愉快的享受。你多久能听到一本关于数字的书？&lt;/p&gt;

&lt;p&gt;Brian更新了《高级网站测量》，这让我很兴奋。其核心原因是我个人热爱网络、我确实爱死网络了，它在不断发展。主要的网站分析工具像Google Analytics理所当然也要发展。&lt;/p&gt;

&lt;p&gt;就在去年Google Analytics已经发布了相当奇妙的功能比如智能（用于控制限度、统计算法、预测和敏感性分析，以帮助识别关键的知识），自定义变量（现在你能使用之前不可能的方法收集网站及访问者的元数据），开放的API（现在你能随心所欲的以任意的方式来分析、解释和显示你的数据）等等。请注意：我还没有提到我所钟爱的分析技术，高级群体！&lt;/p&gt;

&lt;p&gt;尤其是当你有巨大的权利来完成你的布置时，Brian的书将成为你成功的关键。&lt;/p&gt;

&lt;p&gt;五年以前，当我在Intuit工作时，我遵循10/90法则。简单来说，对于你想要进行的每一百美元的网络智能决策的投资，你应该在技术上投资10美元，而在人员上投资90美元。经过考虑后，这一法则在今天更加正确。你能使用免费工具的组合来进行网站分析、调查、竞争情报分析以及几乎你能想到的任何其他事情。这些工具所不能做的是像它们所承诺的那样，最大限度使用它们所需要的专业知识和技巧。&lt;/p&gt;

&lt;p&gt;这正是Brian的用武之地。&lt;/p&gt;

&lt;p&gt;Brian毕生都在网站分析领域（是的，好吧，终生就是互联网岁月！）。作为一个从业者他有深厚的专业知识。他曾在Google工作，当他与世界上一些大公司合作，帮助他们测量他们认为不可能测量的东西时，也帮助和影响和Google Analytics。在过去几年中，通过他的咨询工作，他实现了全职工作的最后的挑战。&lt;/p&gt;

&lt;p&gt;我无法想象任何人能够在陪我们从报告菜鸟蜕变为分析精英的过程中，比他做的更好。《使用Google Analytics的高级网站测量》从轻松的小知识，基础的解释开始，使你熟悉了数据的新世界。接着，它缓慢而稳步的向上进入了高潮，在这里你能与数据共舞。&lt;/p&gt;

&lt;p&gt;我有幸写了两本网站分析的书，并且我也从Brian的书中学到很多Google Analytics的东西。我相信你也会有类似的经历。&lt;/p&gt;

&lt;p&gt;让我们以这个观点结束：在我们的世界中获得数据是容易的。如何创造性的利用这些数据来使你的企业做出商业决策、赚钱、使你的顾客满意，则不那么容易。&lt;/p&gt;

&lt;p&gt;这本书将使这个不简单的旅程更简单。&lt;/p&gt;

&lt;p&gt;祝你好运！&lt;/p&gt;

&lt;p&gt;Avinash Kaushik&lt;/p&gt;

&lt;p&gt;《web分析2.0和网站分析：每天一小时》的作者&lt;/p&gt;

&lt;p&gt;Google分析的传道者&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Advanced web metrics with Google Analytics关于作者</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/25/andvanced-web-metrics-with-google-analyticse585b3e4ba8ee4bd9ce88085"/>
   <updated>2010-08-25T09:45:36+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/25/andvanced-web-metrics-with-google-analyticse585b3e4ba8ee4bd9ce88085</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.cloga.info/wp-content/uploads/2010/08/397837dd0c40066995ee375e.bmp&quot;&gt;&lt;img src=&quot;http://www.cloga.info/wp-content/uploads/2010/08/397837dd0c40066995ee375e.bmp&quot; alt=&quot;&quot;&gt;&lt;/a&gt;Brian Clifton 博士是国际公认的Google Analytics专家，他为全球的客户提供网站性能优化的咨询。来自网站开发和搜索引擎优化（SEO）背景的他，从1997开始在这个领域工作。他的公司是Urchin软件公司的第一个英国合作伙伴，Urchin软件公司后来变成了Google Analytics。&lt;/p&gt;

&lt;p&gt;在2005年，Brian是加入Google欧洲的有网站测量经验的第一人。作为Google欧洲、中东和非洲网站分析的前主管，他提出，通过并在泛欧洲组建了一个产品专家团队。他目前是Omega Digital Media的CEO和资深策略师。&lt;/p&gt;

&lt;p&gt;Brian1991年在英国布里斯托大学获得化学理学学士，在1996年在那里获得了物理学及理论化学博士。接着以一名博士后研究者工作，最终在一些期刊上发表一些科技论文，包括Molecular Physics、Colloids and Surfaces以及Langmuir。在这段时间中，他也是一名国际举重运动员，在欧洲和世界锦标赛上代表大不列颠。&lt;/p&gt;

&lt;p&gt;九十年代初，在学校中研究科学，意味着见证了网络惊人的开端。在1991年，Tim Berners-Lee，一名在瑞士的CERN实验室中工作的科学家，在学术界开发了第一个网络浏览器和服务器，从而播下来World Wide Web（万维网WWW）的第一颗种子。&lt;/p&gt;

&lt;p&gt;尽管，Brian很快了解了网络的通信潜力，但是，思考网络的商机花费了他一段时间。在1997年，他离开了学术界，成立了Omega Digital Media，一家专注于为想要利用新的数字媒体的企业提供个性化服务的英国公司。&lt;/p&gt;

&lt;p&gt;在离开了化学研究（以及举重）领域之后，Brian持续写作，或者是他的博客、Measuring Success(www.advanced-web-metrics.com/blog)、作为一个访客在业内论坛，或者通过白皮书。&lt;/p&gt;

&lt;p&gt;Brian在英国哥伦比亚大学获得了助教称号，因为，他对维护网站分析成就奖的模块教学的贡献。你也能听到他在世界各地的许多会议上的演讲，在这些演讲中，他讨论了数据驱动的网络战略以及网站优化。Brian生于英国的曼彻斯塔，现在生活在瑞士。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Advanced web metrics with Google Analytics致谢</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/25/andvanced-web-metrics-with-google-analyticse887b4e8b0a2"/>
   <updated>2010-08-25T09:39:26+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/25/andvanced-web-metrics-with-google-analyticse887b4e8b0a2</id>
   <content type="html">&lt;p&gt;因为第一版，这个第二版既是非常有益也是非常困难的工作。第二版开始是一系列简单的更新，但是，结果变成了完全重写的内容——这是我希望完成一本有价值的书的沉醉。&lt;/p&gt;

&lt;p&gt;我从不认为我是一个天生的作家。无休止的折腾每一句话，我渴望完美，最起码是恰当。第一版是我在Google每天工作12小时时写的，花了我8个月的时间完成（主要在火车和飞机上，或者在遍布欧洲的不同旅馆房间里，或者在美国）。这次组织好自己的时间并且更加沉醉（如果可能）并且在六个月时间内完成了第二版。我的非常支持的合作者、Sara、朋友和家人的放松几乎是显而易见的。&lt;/p&gt;

&lt;p&gt;然而，写作的过程仍是愉快的。事实上，我已经期待我的下一部作品，尽管我还没有决定将写什么！但是，我不是在唱独角戏，许多人也乐于贡献自己的时间使这本书比第一版更好。&lt;/p&gt;

&lt;p&gt;首先，特别要感谢Google的Alex Ortiz-Rosado、Nick Michailovski和Tomas Remotigue，他们对我对Google Analytics多年的内部工作的知识和理解有巨大的贡献。他们都工作到很晚，并且用他们自己的时间来对这本的完整性进行检查，并且扩展这本书的技术方面。Alex是我很赞赏的技术编辑。他对细节的敏锐目光和解释一些Google Analytics复杂问题的耐心，使我能写作更全面的书。&lt;/p&gt;

&lt;p&gt;重要的反馈、帮助和头脑风暴也由Shelby Thayer免费提供，他是一名网站分析从业者、狂热爱好者、拥护者、为宾夕法尼亚州立大学工作的全面优秀的个人。Shelby亲切的校对并注释了本书的每一页，以确保内容是相关及连续的。&lt;/p&gt;

&lt;p&gt;还需要感谢：Direct Performance的Leonardo Naressi和Eduardo Cereto对Flash事件跟踪的专业知识和建议；POP的Ophir Prusak，他提供了在将Google Analytics和网站优化工具结合在一起时的详细解释和解决方法；Bowen Craggs&amp;amp;Co.Limited的Dan Drury和Abdurashid Atahanov，他们输入了在大型企业中的有效的KPI策略；VKI工作室的Neal McGann和Andre Wei，他们分享了网站优化的经验；ROI Revolution的Jeremy Aube，他对Google Analytics授权顾问（GAAC）社区的持续支持；Sara Andersson，她对于线上线下营销的慷慨的建议和战略思考，并且分享了搜索营销、社会媒体参与以及对一般生活的观点；Avinash Kaushik，他检查了这本书，我很荣幸请到他为本书作序；Mikael Thuneberg、Nikki Rae(Fresh Egg Ltd.)、Eran Savir(Kampyle)、Ravi Pathak(Tatvic)，他们提供了第12章中个案研究的内容；GAAC网站的所有成员，他们有启发性的讨论、经验以及在为他们的客户实施Google Analytics的想法。&lt;/p&gt;

&lt;p&gt;最后但并非不重要，非常感谢Wiley出版团队：Willem Knibbe醉心于这一主题，这意味着我经常为了第二版的创造去拜访他；Tom Cirtin保持了结构和内部自始至终的一致性；Dassi Zeidel、Linda Recktenwald以及Jen Larsen，还有Wiley的许多其他人，他们的工作是在后面不知疲倦帮助我创造和推敲那些我希望你了解的愉快的内容丰富的阅读。最后，这是我的任务，什么可能是人们最渴望的主题。&lt;/p&gt;

&lt;p&gt;这是一个非常长的名单，来自世界各地的人们（最少七个国家）帮我构造、扩展和改进提供的内容。我希望我没有漏掉什么人。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>使用Google Analytics的高级网站测量（第二版）所获得的赞誉</title>
   <link href="http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/25/e4bdbfe794a8google-analyticse79a84e9ab98e7baa7e7bd91e7ab99e6b58be9878fefbc88e7acace4ba8ce78988efbc89e68980e88eb7e5be97e79a84e8b59ee8aa89"/>
   <updated>2010-08-25T09:32:11+08:00</updated>
   <id>http://cloga.github.io/digital%E5%88%86%E6%9E%90/2010/08/25/e4bdbfe794a8google-analyticse79a84e9ab98e7baa7e7bd91e7ab99e6b58be9878fefbc88e7acace4ba8ce78988efbc89e68980e88eb7e5be97e79a84e8b59ee8aa89</id>
   <content type="html">&lt;p&gt;网站分析已成为每一个网络营销人员工具箱中的必要组成部分。但是，你不能仅仅依靠大量的数据——你需要解释数据，在许多情况下，调整报告以精确反映你的目的和目标。Brian Clifton的《使用Google Analytics的高级网站测量》第二版是能够帮助你从测量中获得最多东西的全面的路线图——是帮助你将网络营销活动提升到新的水平的必要指导。&lt;/p&gt;

&lt;p&gt;——Chris Sherman，Search Engine Land的执行编辑&lt;/p&gt;

&lt;p&gt;网站分析领域在工具及最佳实践两方面发展的非常迅速。幸运的是，Brian Clifton在他的优秀的第一版的更新中付出了艰辛的努力，因此，第二版是任何一个想要在Google Analytics获得最大的价值以及了解更广泛的网站分析的人必读的一本书。&lt;/p&gt;

&lt;p&gt;——Ashley Friedlein，Econsultancy的CEO&lt;/p&gt;

&lt;p&gt;高级网站测量是惟一结合了高水平的管理建议和容易理解的基本事实，尤其是有用的方式的一本书。它非常适合于网站管理员、分析专家和营销相关人员。&lt;/p&gt;

&lt;p&gt;——Dan Drury，Bowen Craggs有限公司经理及金融作家&lt;/p&gt;

&lt;p&gt;公司网站效果的时报指数&lt;/p&gt;

&lt;p&gt;如果您正在寻找一个实用的战术指南，以指导如何实施和思考网络营销优化，不要再观望。Brian Clifton用勤奋、工作职能、KPI等等构成了它。&lt;/p&gt;

&lt;p&gt;Brian自进入网络营销领域起，即开始研究和指导网站优化。他从实战角度说明了如何最有效的使用免费而有力的工具，这是每一个网站所有者想了解的。对于你想了解的类似下面的问题，这是一本实用的指南：&lt;/p&gt;

&lt;p&gt;那么，我对所有的网站数据做什么?&lt;/p&gt;

&lt;p&gt;我如何使用这些报告？&lt;/p&gt;

&lt;p&gt;我如何测量促销代码和折扣价格的影响？&lt;/p&gt;

&lt;p&gt;如何确定我将获得我的奖金？&lt;/p&gt;

&lt;p&gt;——Jim Sterne，网站分析协会的创始人及主席&lt;/p&gt;

&lt;p&gt;当企业急切想要花小钱办大事时，Brian提供了从我们的网站及营销活动中获得更多机会的、大量现实世界中的例子。保证你未来的工作——购买、阅读并且实施这本杰出的书上的所有技术。&lt;/p&gt;

&lt;p&gt;——Bill Hunt，搜索引擎营销公司，合著者&lt;/p&gt;

&lt;p&gt;如果你正在选择一本关于流量转化的、优秀的、深入的指南，别再观望了。Brian解释了在访问者与你的内容如何交互的基础上，如何做出明智的决定。我向那些认真的想要通过数据驱动的决策而不是猜测，来改善盈亏结算线的人强烈推荐这本书。&lt;/p&gt;

&lt;p&gt;——Hessam Lavi，前Google搜索质量团队领导人&lt;/p&gt;

&lt;p&gt;Brian为Google工作，据我所知只有一少部分人对Google Analytics比他了解更多。他的书通常是一丝不苟的，有许多如何让从这个工具中获得最佳的价值的例子。但是，我最喜欢的却是许多原则及有效的想法能被应用到任何的分析工具，而不仅仅是Google Analytics。&lt;/p&gt;

&lt;p&gt;分析的最大挑战是根本没有使人们参与的过程，也没有使人们对分析如何能帮助他们达到自己的商业目的感兴趣的过程。Brian用简单的、能应用到任何业务中的KPI过程，解决了这一问题。一句话，好东西！&lt;/p&gt;

&lt;p&gt;——Steve Jackson，Kwantic的Business Insights的经理，Cult of Analytics的作者&lt;/p&gt;

&lt;p&gt;Brian是最了解网站分析领域的人之一。他将他多年来与不同客户的工作经验倾注在这本书中。向你提供了想要知道的关于Google Analytics 的每一件事，对于每一个想要从网站分析数据中获得可操作性的见解的有价值的资源。&lt;/p&gt;

&lt;p&gt;——Anil Batra，Search &amp;amp; Analytics副主席，POP&lt;/p&gt;

&lt;p&gt;Brian在这本书中分享了网站分析的丰富经验，提供了最大化利用Google Analytics的清晰的配置步骤，同时，也提供了表达这些概念的支持信息。具体事例与学习情境的结合提供了两者的最佳组合。超越基础测量及获得线上优化的必读。&lt;/p&gt;

&lt;p&gt;——Stephan hamel，immeria.net的CEO及首席顾问，网站分析协会理事&lt;/p&gt;

&lt;p&gt;这本书拥有一切！它解释了营销人员需要理解的东西，并且指导的内部分析小组（或自己实施），通过现实世界的分析和应用的例子，这本书使你不再仅仅是收集数据。使用这本书作为改善你的业绩和业务的指南。你不能输！&lt;/p&gt;

&lt;p&gt;——Sara Anderrson，Search Integration AB的CEO和高级策略师以及斯堪的那维亚搜索引擎专业组织（SEMPO）主席&lt;/p&gt;

&lt;p&gt;Brian强调了在安装中最重要的事情，以及如何利用最重要的，但是未被充分利用的Google Analytics的功能比如目标、渠道、高级群体和事件跟踪。&lt;/p&gt;

&lt;p&gt;——Dave Chaffey博士，数字化营销的作者以及Marketing Insights有限公司的战略顾问&lt;/p&gt;
</content>
 </entry>
 
 
</feed>